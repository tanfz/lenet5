// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module conv1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_FM_DDR_BUFF1_AWVALID,
        m_axi_FM_DDR_BUFF1_AWREADY,
        m_axi_FM_DDR_BUFF1_AWADDR,
        m_axi_FM_DDR_BUFF1_AWID,
        m_axi_FM_DDR_BUFF1_AWLEN,
        m_axi_FM_DDR_BUFF1_AWSIZE,
        m_axi_FM_DDR_BUFF1_AWBURST,
        m_axi_FM_DDR_BUFF1_AWLOCK,
        m_axi_FM_DDR_BUFF1_AWCACHE,
        m_axi_FM_DDR_BUFF1_AWPROT,
        m_axi_FM_DDR_BUFF1_AWQOS,
        m_axi_FM_DDR_BUFF1_AWREGION,
        m_axi_FM_DDR_BUFF1_AWUSER,
        m_axi_FM_DDR_BUFF1_WVALID,
        m_axi_FM_DDR_BUFF1_WREADY,
        m_axi_FM_DDR_BUFF1_WDATA,
        m_axi_FM_DDR_BUFF1_WSTRB,
        m_axi_FM_DDR_BUFF1_WLAST,
        m_axi_FM_DDR_BUFF1_WID,
        m_axi_FM_DDR_BUFF1_WUSER,
        m_axi_FM_DDR_BUFF1_ARVALID,
        m_axi_FM_DDR_BUFF1_ARREADY,
        m_axi_FM_DDR_BUFF1_ARADDR,
        m_axi_FM_DDR_BUFF1_ARID,
        m_axi_FM_DDR_BUFF1_ARLEN,
        m_axi_FM_DDR_BUFF1_ARSIZE,
        m_axi_FM_DDR_BUFF1_ARBURST,
        m_axi_FM_DDR_BUFF1_ARLOCK,
        m_axi_FM_DDR_BUFF1_ARCACHE,
        m_axi_FM_DDR_BUFF1_ARPROT,
        m_axi_FM_DDR_BUFF1_ARQOS,
        m_axi_FM_DDR_BUFF1_ARREGION,
        m_axi_FM_DDR_BUFF1_ARUSER,
        m_axi_FM_DDR_BUFF1_RVALID,
        m_axi_FM_DDR_BUFF1_RREADY,
        m_axi_FM_DDR_BUFF1_RDATA,
        m_axi_FM_DDR_BUFF1_RLAST,
        m_axi_FM_DDR_BUFF1_RID,
        m_axi_FM_DDR_BUFF1_RUSER,
        m_axi_FM_DDR_BUFF1_RRESP,
        m_axi_FM_DDR_BUFF1_BVALID,
        m_axi_FM_DDR_BUFF1_BREADY,
        m_axi_FM_DDR_BUFF1_BRESP,
        m_axi_FM_DDR_BUFF1_BID,
        m_axi_FM_DDR_BUFF1_BUSER,
        m_axi_FM_DDR_BUFF2_AWVALID,
        m_axi_FM_DDR_BUFF2_AWREADY,
        m_axi_FM_DDR_BUFF2_AWADDR,
        m_axi_FM_DDR_BUFF2_AWID,
        m_axi_FM_DDR_BUFF2_AWLEN,
        m_axi_FM_DDR_BUFF2_AWSIZE,
        m_axi_FM_DDR_BUFF2_AWBURST,
        m_axi_FM_DDR_BUFF2_AWLOCK,
        m_axi_FM_DDR_BUFF2_AWCACHE,
        m_axi_FM_DDR_BUFF2_AWPROT,
        m_axi_FM_DDR_BUFF2_AWQOS,
        m_axi_FM_DDR_BUFF2_AWREGION,
        m_axi_FM_DDR_BUFF2_AWUSER,
        m_axi_FM_DDR_BUFF2_WVALID,
        m_axi_FM_DDR_BUFF2_WREADY,
        m_axi_FM_DDR_BUFF2_WDATA,
        m_axi_FM_DDR_BUFF2_WSTRB,
        m_axi_FM_DDR_BUFF2_WLAST,
        m_axi_FM_DDR_BUFF2_WID,
        m_axi_FM_DDR_BUFF2_WUSER,
        m_axi_FM_DDR_BUFF2_ARVALID,
        m_axi_FM_DDR_BUFF2_ARREADY,
        m_axi_FM_DDR_BUFF2_ARADDR,
        m_axi_FM_DDR_BUFF2_ARID,
        m_axi_FM_DDR_BUFF2_ARLEN,
        m_axi_FM_DDR_BUFF2_ARSIZE,
        m_axi_FM_DDR_BUFF2_ARBURST,
        m_axi_FM_DDR_BUFF2_ARLOCK,
        m_axi_FM_DDR_BUFF2_ARCACHE,
        m_axi_FM_DDR_BUFF2_ARPROT,
        m_axi_FM_DDR_BUFF2_ARQOS,
        m_axi_FM_DDR_BUFF2_ARREGION,
        m_axi_FM_DDR_BUFF2_ARUSER,
        m_axi_FM_DDR_BUFF2_RVALID,
        m_axi_FM_DDR_BUFF2_RREADY,
        m_axi_FM_DDR_BUFF2_RDATA,
        m_axi_FM_DDR_BUFF2_RLAST,
        m_axi_FM_DDR_BUFF2_RID,
        m_axi_FM_DDR_BUFF2_RUSER,
        m_axi_FM_DDR_BUFF2_RRESP,
        m_axi_FM_DDR_BUFF2_BVALID,
        m_axi_FM_DDR_BUFF2_BREADY,
        m_axi_FM_DDR_BUFF2_BRESP,
        m_axi_FM_DDR_BUFF2_BID,
        m_axi_FM_DDR_BUFF2_BUSER,
        m_axi_WEIGHT_AWVALID,
        m_axi_WEIGHT_AWREADY,
        m_axi_WEIGHT_AWADDR,
        m_axi_WEIGHT_AWID,
        m_axi_WEIGHT_AWLEN,
        m_axi_WEIGHT_AWSIZE,
        m_axi_WEIGHT_AWBURST,
        m_axi_WEIGHT_AWLOCK,
        m_axi_WEIGHT_AWCACHE,
        m_axi_WEIGHT_AWPROT,
        m_axi_WEIGHT_AWQOS,
        m_axi_WEIGHT_AWREGION,
        m_axi_WEIGHT_AWUSER,
        m_axi_WEIGHT_WVALID,
        m_axi_WEIGHT_WREADY,
        m_axi_WEIGHT_WDATA,
        m_axi_WEIGHT_WSTRB,
        m_axi_WEIGHT_WLAST,
        m_axi_WEIGHT_WID,
        m_axi_WEIGHT_WUSER,
        m_axi_WEIGHT_ARVALID,
        m_axi_WEIGHT_ARREADY,
        m_axi_WEIGHT_ARADDR,
        m_axi_WEIGHT_ARID,
        m_axi_WEIGHT_ARLEN,
        m_axi_WEIGHT_ARSIZE,
        m_axi_WEIGHT_ARBURST,
        m_axi_WEIGHT_ARLOCK,
        m_axi_WEIGHT_ARCACHE,
        m_axi_WEIGHT_ARPROT,
        m_axi_WEIGHT_ARQOS,
        m_axi_WEIGHT_ARREGION,
        m_axi_WEIGHT_ARUSER,
        m_axi_WEIGHT_RVALID,
        m_axi_WEIGHT_RREADY,
        m_axi_WEIGHT_RDATA,
        m_axi_WEIGHT_RLAST,
        m_axi_WEIGHT_RID,
        m_axi_WEIGHT_RUSER,
        m_axi_WEIGHT_RRESP,
        m_axi_WEIGHT_BVALID,
        m_axi_WEIGHT_BREADY,
        m_axi_WEIGHT_BRESP,
        m_axi_WEIGHT_BID,
        m_axi_WEIGHT_BUSER,
        m_axi_BIAS_AWVALID,
        m_axi_BIAS_AWREADY,
        m_axi_BIAS_AWADDR,
        m_axi_BIAS_AWID,
        m_axi_BIAS_AWLEN,
        m_axi_BIAS_AWSIZE,
        m_axi_BIAS_AWBURST,
        m_axi_BIAS_AWLOCK,
        m_axi_BIAS_AWCACHE,
        m_axi_BIAS_AWPROT,
        m_axi_BIAS_AWQOS,
        m_axi_BIAS_AWREGION,
        m_axi_BIAS_AWUSER,
        m_axi_BIAS_WVALID,
        m_axi_BIAS_WREADY,
        m_axi_BIAS_WDATA,
        m_axi_BIAS_WSTRB,
        m_axi_BIAS_WLAST,
        m_axi_BIAS_WID,
        m_axi_BIAS_WUSER,
        m_axi_BIAS_ARVALID,
        m_axi_BIAS_ARREADY,
        m_axi_BIAS_ARADDR,
        m_axi_BIAS_ARID,
        m_axi_BIAS_ARLEN,
        m_axi_BIAS_ARSIZE,
        m_axi_BIAS_ARBURST,
        m_axi_BIAS_ARLOCK,
        m_axi_BIAS_ARCACHE,
        m_axi_BIAS_ARPROT,
        m_axi_BIAS_ARQOS,
        m_axi_BIAS_ARREGION,
        m_axi_BIAS_ARUSER,
        m_axi_BIAS_RVALID,
        m_axi_BIAS_RREADY,
        m_axi_BIAS_RDATA,
        m_axi_BIAS_RLAST,
        m_axi_BIAS_RID,
        m_axi_BIAS_RUSER,
        m_axi_BIAS_RRESP,
        m_axi_BIAS_BVALID,
        m_axi_BIAS_BREADY,
        m_axi_BIAS_BRESP,
        m_axi_BIAS_BID,
        m_axi_BIAS_BUSER,
        conv_out1_0_address0,
        conv_out1_0_ce0,
        conv_out1_0_we0,
        conv_out1_0_d0,
        conv_out1_0_q0,
        conv_out1_1_address0,
        conv_out1_1_ce0,
        conv_out1_1_we0,
        conv_out1_1_d0,
        conv_out1_1_q0,
        conv_out1_2_address0,
        conv_out1_2_ce0,
        conv_out1_2_we0,
        conv_out1_2_d0,
        conv_out1_2_q0,
        conv_out1_3_address0,
        conv_out1_3_ce0,
        conv_out1_3_we0,
        conv_out1_3_d0,
        conv_out1_3_q0,
        conv_out1_4_address0,
        conv_out1_4_ce0,
        conv_out1_4_we0,
        conv_out1_4_d0,
        conv_out1_4_q0,
        conv_out1_5_address0,
        conv_out1_5_ce0,
        conv_out1_5_we0,
        conv_out1_5_d0,
        conv_out1_5_q0
);

parameter    ap_ST_fsm_state1 = 53'd1;
parameter    ap_ST_fsm_state2 = 53'd2;
parameter    ap_ST_fsm_state3 = 53'd4;
parameter    ap_ST_fsm_state4 = 53'd8;
parameter    ap_ST_fsm_state5 = 53'd16;
parameter    ap_ST_fsm_state6 = 53'd32;
parameter    ap_ST_fsm_state7 = 53'd64;
parameter    ap_ST_fsm_pp0_stage0 = 53'd128;
parameter    ap_ST_fsm_state10 = 53'd256;
parameter    ap_ST_fsm_state11 = 53'd512;
parameter    ap_ST_fsm_state12 = 53'd1024;
parameter    ap_ST_fsm_state13 = 53'd2048;
parameter    ap_ST_fsm_state14 = 53'd4096;
parameter    ap_ST_fsm_state15 = 53'd8192;
parameter    ap_ST_fsm_state16 = 53'd16384;
parameter    ap_ST_fsm_pp1_stage0 = 53'd32768;
parameter    ap_ST_fsm_state20 = 53'd65536;
parameter    ap_ST_fsm_state21 = 53'd131072;
parameter    ap_ST_fsm_state22 = 53'd262144;
parameter    ap_ST_fsm_state23 = 53'd524288;
parameter    ap_ST_fsm_state24 = 53'd1048576;
parameter    ap_ST_fsm_state25 = 53'd2097152;
parameter    ap_ST_fsm_state26 = 53'd4194304;
parameter    ap_ST_fsm_pp2_stage0 = 53'd8388608;
parameter    ap_ST_fsm_state30 = 53'd16777216;
parameter    ap_ST_fsm_pp3_stage0 = 53'd33554432;
parameter    ap_ST_fsm_pp3_stage1 = 53'd67108864;
parameter    ap_ST_fsm_pp3_stage2 = 53'd134217728;
parameter    ap_ST_fsm_pp3_stage3 = 53'd268435456;
parameter    ap_ST_fsm_pp3_stage4 = 53'd536870912;
parameter    ap_ST_fsm_pp3_stage5 = 53'd1073741824;
parameter    ap_ST_fsm_pp3_stage6 = 53'd2147483648;
parameter    ap_ST_fsm_pp3_stage7 = 53'd4294967296;
parameter    ap_ST_fsm_state44 = 53'd8589934592;
parameter    ap_ST_fsm_pp4_stage0 = 53'd17179869184;
parameter    ap_ST_fsm_pp4_stage1 = 53'd34359738368;
parameter    ap_ST_fsm_pp4_stage2 = 53'd68719476736;
parameter    ap_ST_fsm_pp4_stage3 = 53'd137438953472;
parameter    ap_ST_fsm_pp4_stage4 = 53'd274877906944;
parameter    ap_ST_fsm_pp4_stage5 = 53'd549755813888;
parameter    ap_ST_fsm_pp4_stage6 = 53'd1099511627776;
parameter    ap_ST_fsm_pp4_stage7 = 53'd2199023255552;
parameter    ap_ST_fsm_pp4_stage8 = 53'd4398046511104;
parameter    ap_ST_fsm_state55 = 53'd8796093022208;
parameter    ap_ST_fsm_pp5_stage0 = 53'd17592186044416;
parameter    ap_ST_fsm_pp5_stage1 = 53'd35184372088832;
parameter    ap_ST_fsm_state79 = 53'd70368744177664;
parameter    ap_ST_fsm_pp6_stage0 = 53'd140737488355328;
parameter    ap_ST_fsm_state83 = 53'd281474976710656;
parameter    ap_ST_fsm_state84 = 53'd562949953421312;
parameter    ap_ST_fsm_state85 = 53'd1125899906842624;
parameter    ap_ST_fsm_state86 = 53'd2251799813685248;
parameter    ap_ST_fsm_state87 = 53'd4503599627370496;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_FM_DDR_BUFF1_AWVALID;
input   m_axi_FM_DDR_BUFF1_AWREADY;
output  [31:0] m_axi_FM_DDR_BUFF1_AWADDR;
output  [0:0] m_axi_FM_DDR_BUFF1_AWID;
output  [31:0] m_axi_FM_DDR_BUFF1_AWLEN;
output  [2:0] m_axi_FM_DDR_BUFF1_AWSIZE;
output  [1:0] m_axi_FM_DDR_BUFF1_AWBURST;
output  [1:0] m_axi_FM_DDR_BUFF1_AWLOCK;
output  [3:0] m_axi_FM_DDR_BUFF1_AWCACHE;
output  [2:0] m_axi_FM_DDR_BUFF1_AWPROT;
output  [3:0] m_axi_FM_DDR_BUFF1_AWQOS;
output  [3:0] m_axi_FM_DDR_BUFF1_AWREGION;
output  [0:0] m_axi_FM_DDR_BUFF1_AWUSER;
output   m_axi_FM_DDR_BUFF1_WVALID;
input   m_axi_FM_DDR_BUFF1_WREADY;
output  [31:0] m_axi_FM_DDR_BUFF1_WDATA;
output  [3:0] m_axi_FM_DDR_BUFF1_WSTRB;
output   m_axi_FM_DDR_BUFF1_WLAST;
output  [0:0] m_axi_FM_DDR_BUFF1_WID;
output  [0:0] m_axi_FM_DDR_BUFF1_WUSER;
output   m_axi_FM_DDR_BUFF1_ARVALID;
input   m_axi_FM_DDR_BUFF1_ARREADY;
output  [31:0] m_axi_FM_DDR_BUFF1_ARADDR;
output  [0:0] m_axi_FM_DDR_BUFF1_ARID;
output  [31:0] m_axi_FM_DDR_BUFF1_ARLEN;
output  [2:0] m_axi_FM_DDR_BUFF1_ARSIZE;
output  [1:0] m_axi_FM_DDR_BUFF1_ARBURST;
output  [1:0] m_axi_FM_DDR_BUFF1_ARLOCK;
output  [3:0] m_axi_FM_DDR_BUFF1_ARCACHE;
output  [2:0] m_axi_FM_DDR_BUFF1_ARPROT;
output  [3:0] m_axi_FM_DDR_BUFF1_ARQOS;
output  [3:0] m_axi_FM_DDR_BUFF1_ARREGION;
output  [0:0] m_axi_FM_DDR_BUFF1_ARUSER;
input   m_axi_FM_DDR_BUFF1_RVALID;
output   m_axi_FM_DDR_BUFF1_RREADY;
input  [31:0] m_axi_FM_DDR_BUFF1_RDATA;
input   m_axi_FM_DDR_BUFF1_RLAST;
input  [0:0] m_axi_FM_DDR_BUFF1_RID;
input  [0:0] m_axi_FM_DDR_BUFF1_RUSER;
input  [1:0] m_axi_FM_DDR_BUFF1_RRESP;
input   m_axi_FM_DDR_BUFF1_BVALID;
output   m_axi_FM_DDR_BUFF1_BREADY;
input  [1:0] m_axi_FM_DDR_BUFF1_BRESP;
input  [0:0] m_axi_FM_DDR_BUFF1_BID;
input  [0:0] m_axi_FM_DDR_BUFF1_BUSER;
output   m_axi_FM_DDR_BUFF2_AWVALID;
input   m_axi_FM_DDR_BUFF2_AWREADY;
output  [31:0] m_axi_FM_DDR_BUFF2_AWADDR;
output  [0:0] m_axi_FM_DDR_BUFF2_AWID;
output  [31:0] m_axi_FM_DDR_BUFF2_AWLEN;
output  [2:0] m_axi_FM_DDR_BUFF2_AWSIZE;
output  [1:0] m_axi_FM_DDR_BUFF2_AWBURST;
output  [1:0] m_axi_FM_DDR_BUFF2_AWLOCK;
output  [3:0] m_axi_FM_DDR_BUFF2_AWCACHE;
output  [2:0] m_axi_FM_DDR_BUFF2_AWPROT;
output  [3:0] m_axi_FM_DDR_BUFF2_AWQOS;
output  [3:0] m_axi_FM_DDR_BUFF2_AWREGION;
output  [0:0] m_axi_FM_DDR_BUFF2_AWUSER;
output   m_axi_FM_DDR_BUFF2_WVALID;
input   m_axi_FM_DDR_BUFF2_WREADY;
output  [31:0] m_axi_FM_DDR_BUFF2_WDATA;
output  [3:0] m_axi_FM_DDR_BUFF2_WSTRB;
output   m_axi_FM_DDR_BUFF2_WLAST;
output  [0:0] m_axi_FM_DDR_BUFF2_WID;
output  [0:0] m_axi_FM_DDR_BUFF2_WUSER;
output   m_axi_FM_DDR_BUFF2_ARVALID;
input   m_axi_FM_DDR_BUFF2_ARREADY;
output  [31:0] m_axi_FM_DDR_BUFF2_ARADDR;
output  [0:0] m_axi_FM_DDR_BUFF2_ARID;
output  [31:0] m_axi_FM_DDR_BUFF2_ARLEN;
output  [2:0] m_axi_FM_DDR_BUFF2_ARSIZE;
output  [1:0] m_axi_FM_DDR_BUFF2_ARBURST;
output  [1:0] m_axi_FM_DDR_BUFF2_ARLOCK;
output  [3:0] m_axi_FM_DDR_BUFF2_ARCACHE;
output  [2:0] m_axi_FM_DDR_BUFF2_ARPROT;
output  [3:0] m_axi_FM_DDR_BUFF2_ARQOS;
output  [3:0] m_axi_FM_DDR_BUFF2_ARREGION;
output  [0:0] m_axi_FM_DDR_BUFF2_ARUSER;
input   m_axi_FM_DDR_BUFF2_RVALID;
output   m_axi_FM_DDR_BUFF2_RREADY;
input  [31:0] m_axi_FM_DDR_BUFF2_RDATA;
input   m_axi_FM_DDR_BUFF2_RLAST;
input  [0:0] m_axi_FM_DDR_BUFF2_RID;
input  [0:0] m_axi_FM_DDR_BUFF2_RUSER;
input  [1:0] m_axi_FM_DDR_BUFF2_RRESP;
input   m_axi_FM_DDR_BUFF2_BVALID;
output   m_axi_FM_DDR_BUFF2_BREADY;
input  [1:0] m_axi_FM_DDR_BUFF2_BRESP;
input  [0:0] m_axi_FM_DDR_BUFF2_BID;
input  [0:0] m_axi_FM_DDR_BUFF2_BUSER;
output   m_axi_WEIGHT_AWVALID;
input   m_axi_WEIGHT_AWREADY;
output  [31:0] m_axi_WEIGHT_AWADDR;
output  [0:0] m_axi_WEIGHT_AWID;
output  [31:0] m_axi_WEIGHT_AWLEN;
output  [2:0] m_axi_WEIGHT_AWSIZE;
output  [1:0] m_axi_WEIGHT_AWBURST;
output  [1:0] m_axi_WEIGHT_AWLOCK;
output  [3:0] m_axi_WEIGHT_AWCACHE;
output  [2:0] m_axi_WEIGHT_AWPROT;
output  [3:0] m_axi_WEIGHT_AWQOS;
output  [3:0] m_axi_WEIGHT_AWREGION;
output  [0:0] m_axi_WEIGHT_AWUSER;
output   m_axi_WEIGHT_WVALID;
input   m_axi_WEIGHT_WREADY;
output  [31:0] m_axi_WEIGHT_WDATA;
output  [3:0] m_axi_WEIGHT_WSTRB;
output   m_axi_WEIGHT_WLAST;
output  [0:0] m_axi_WEIGHT_WID;
output  [0:0] m_axi_WEIGHT_WUSER;
output   m_axi_WEIGHT_ARVALID;
input   m_axi_WEIGHT_ARREADY;
output  [31:0] m_axi_WEIGHT_ARADDR;
output  [0:0] m_axi_WEIGHT_ARID;
output  [31:0] m_axi_WEIGHT_ARLEN;
output  [2:0] m_axi_WEIGHT_ARSIZE;
output  [1:0] m_axi_WEIGHT_ARBURST;
output  [1:0] m_axi_WEIGHT_ARLOCK;
output  [3:0] m_axi_WEIGHT_ARCACHE;
output  [2:0] m_axi_WEIGHT_ARPROT;
output  [3:0] m_axi_WEIGHT_ARQOS;
output  [3:0] m_axi_WEIGHT_ARREGION;
output  [0:0] m_axi_WEIGHT_ARUSER;
input   m_axi_WEIGHT_RVALID;
output   m_axi_WEIGHT_RREADY;
input  [31:0] m_axi_WEIGHT_RDATA;
input   m_axi_WEIGHT_RLAST;
input  [0:0] m_axi_WEIGHT_RID;
input  [0:0] m_axi_WEIGHT_RUSER;
input  [1:0] m_axi_WEIGHT_RRESP;
input   m_axi_WEIGHT_BVALID;
output   m_axi_WEIGHT_BREADY;
input  [1:0] m_axi_WEIGHT_BRESP;
input  [0:0] m_axi_WEIGHT_BID;
input  [0:0] m_axi_WEIGHT_BUSER;
output   m_axi_BIAS_AWVALID;
input   m_axi_BIAS_AWREADY;
output  [31:0] m_axi_BIAS_AWADDR;
output  [0:0] m_axi_BIAS_AWID;
output  [31:0] m_axi_BIAS_AWLEN;
output  [2:0] m_axi_BIAS_AWSIZE;
output  [1:0] m_axi_BIAS_AWBURST;
output  [1:0] m_axi_BIAS_AWLOCK;
output  [3:0] m_axi_BIAS_AWCACHE;
output  [2:0] m_axi_BIAS_AWPROT;
output  [3:0] m_axi_BIAS_AWQOS;
output  [3:0] m_axi_BIAS_AWREGION;
output  [0:0] m_axi_BIAS_AWUSER;
output   m_axi_BIAS_WVALID;
input   m_axi_BIAS_WREADY;
output  [31:0] m_axi_BIAS_WDATA;
output  [3:0] m_axi_BIAS_WSTRB;
output   m_axi_BIAS_WLAST;
output  [0:0] m_axi_BIAS_WID;
output  [0:0] m_axi_BIAS_WUSER;
output   m_axi_BIAS_ARVALID;
input   m_axi_BIAS_ARREADY;
output  [31:0] m_axi_BIAS_ARADDR;
output  [0:0] m_axi_BIAS_ARID;
output  [31:0] m_axi_BIAS_ARLEN;
output  [2:0] m_axi_BIAS_ARSIZE;
output  [1:0] m_axi_BIAS_ARBURST;
output  [1:0] m_axi_BIAS_ARLOCK;
output  [3:0] m_axi_BIAS_ARCACHE;
output  [2:0] m_axi_BIAS_ARPROT;
output  [3:0] m_axi_BIAS_ARQOS;
output  [3:0] m_axi_BIAS_ARREGION;
output  [0:0] m_axi_BIAS_ARUSER;
input   m_axi_BIAS_RVALID;
output   m_axi_BIAS_RREADY;
input  [31:0] m_axi_BIAS_RDATA;
input   m_axi_BIAS_RLAST;
input  [0:0] m_axi_BIAS_RID;
input  [0:0] m_axi_BIAS_RUSER;
input  [1:0] m_axi_BIAS_RRESP;
input   m_axi_BIAS_BVALID;
output   m_axi_BIAS_BREADY;
input  [1:0] m_axi_BIAS_BRESP;
input  [0:0] m_axi_BIAS_BID;
input  [0:0] m_axi_BIAS_BUSER;
output  [7:0] conv_out1_0_address0;
output   conv_out1_0_ce0;
output   conv_out1_0_we0;
output  [31:0] conv_out1_0_d0;
input  [31:0] conv_out1_0_q0;
output  [7:0] conv_out1_1_address0;
output   conv_out1_1_ce0;
output   conv_out1_1_we0;
output  [31:0] conv_out1_1_d0;
input  [31:0] conv_out1_1_q0;
output  [7:0] conv_out1_2_address0;
output   conv_out1_2_ce0;
output   conv_out1_2_we0;
output  [31:0] conv_out1_2_d0;
input  [31:0] conv_out1_2_q0;
output  [7:0] conv_out1_3_address0;
output   conv_out1_3_ce0;
output   conv_out1_3_we0;
output  [31:0] conv_out1_3_d0;
input  [31:0] conv_out1_3_q0;
output  [7:0] conv_out1_4_address0;
output   conv_out1_4_ce0;
output   conv_out1_4_we0;
output  [31:0] conv_out1_4_d0;
input  [31:0] conv_out1_4_q0;
output  [7:0] conv_out1_5_address0;
output   conv_out1_5_ce0;
output   conv_out1_5_we0;
output  [31:0] conv_out1_5_d0;
input  [31:0] conv_out1_5_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg m_axi_FM_DDR_BUFF1_ARVALID;
reg m_axi_FM_DDR_BUFF1_RREADY;
reg m_axi_FM_DDR_BUFF2_AWVALID;
reg m_axi_FM_DDR_BUFF2_WVALID;
reg m_axi_FM_DDR_BUFF2_BREADY;
reg m_axi_WEIGHT_ARVALID;
reg m_axi_WEIGHT_RREADY;
reg m_axi_BIAS_ARVALID;
reg m_axi_BIAS_RREADY;
reg[7:0] conv_out1_0_address0;
reg conv_out1_0_ce0;
reg conv_out1_0_we0;
reg[7:0] conv_out1_1_address0;
reg conv_out1_1_ce0;
reg conv_out1_1_we0;
reg[7:0] conv_out1_2_address0;
reg conv_out1_2_ce0;
reg conv_out1_2_we0;
reg[7:0] conv_out1_3_address0;
reg conv_out1_3_ce0;
reg conv_out1_3_we0;
reg[7:0] conv_out1_4_address0;
reg conv_out1_4_ce0;
reg conv_out1_4_we0;
reg[7:0] conv_out1_5_address0;
reg conv_out1_5_ce0;
reg conv_out1_5_we0;

(* fsm_encoding = "none" *) reg   [52:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [9:0] pic_in_address0;
reg    pic_in_ce0;
reg    pic_in_we0;
wire   [31:0] pic_in_q0;
reg   [4:0] W_CONV1_0_address0;
reg    W_CONV1_0_ce0;
reg    W_CONV1_0_we0;
wire   [31:0] W_CONV1_0_q0;
reg   [4:0] W_CONV1_1_address0;
reg    W_CONV1_1_ce0;
reg    W_CONV1_1_we0;
wire   [31:0] W_CONV1_1_q0;
reg   [4:0] W_CONV1_2_address0;
reg    W_CONV1_2_ce0;
reg    W_CONV1_2_we0;
wire   [31:0] W_CONV1_2_q0;
reg   [4:0] W_CONV1_3_address0;
reg    W_CONV1_3_ce0;
reg    W_CONV1_3_we0;
wire   [31:0] W_CONV1_3_q0;
reg   [4:0] W_CONV1_4_address0;
reg    W_CONV1_4_ce0;
reg    W_CONV1_4_we0;
wire   [31:0] W_CONV1_4_q0;
reg   [4:0] W_CONV1_5_address0;
reg    W_CONV1_5_ce0;
reg    W_CONV1_5_we0;
wire   [31:0] W_CONV1_5_q0;
reg   [9:0] conv1_buff_0_address0;
reg    conv1_buff_0_ce0;
reg    conv1_buff_0_we0;
reg   [31:0] conv1_buff_0_d0;
wire   [31:0] conv1_buff_0_q0;
reg   [9:0] conv1_buff_0_address1;
reg    conv1_buff_0_ce1;
wire   [31:0] conv1_buff_0_q1;
reg   [9:0] conv1_buff_1_address0;
reg    conv1_buff_1_ce0;
reg    conv1_buff_1_we0;
reg   [31:0] conv1_buff_1_d0;
wire   [31:0] conv1_buff_1_q0;
reg   [9:0] conv1_buff_1_address1;
reg    conv1_buff_1_ce1;
wire   [31:0] conv1_buff_1_q1;
reg   [9:0] conv1_buff_2_address0;
reg    conv1_buff_2_ce0;
reg    conv1_buff_2_we0;
reg   [31:0] conv1_buff_2_d0;
wire   [31:0] conv1_buff_2_q0;
reg   [9:0] conv1_buff_2_address1;
reg    conv1_buff_2_ce1;
wire   [31:0] conv1_buff_2_q1;
reg   [9:0] conv1_buff_3_address0;
reg    conv1_buff_3_ce0;
reg    conv1_buff_3_we0;
reg   [31:0] conv1_buff_3_d0;
wire   [31:0] conv1_buff_3_q0;
reg   [9:0] conv1_buff_3_address1;
reg    conv1_buff_3_ce1;
wire   [31:0] conv1_buff_3_q1;
reg   [9:0] conv1_buff_4_address0;
reg    conv1_buff_4_ce0;
reg    conv1_buff_4_we0;
reg   [31:0] conv1_buff_4_d0;
wire   [31:0] conv1_buff_4_q0;
reg   [9:0] conv1_buff_4_address1;
reg    conv1_buff_4_ce1;
wire   [31:0] conv1_buff_4_q1;
reg   [9:0] conv1_buff_5_address0;
reg    conv1_buff_5_ce0;
reg    conv1_buff_5_we0;
reg   [31:0] conv1_buff_5_d0;
wire   [31:0] conv1_buff_5_q0;
reg   [9:0] conv1_buff_5_address1;
reg    conv1_buff_5_ce1;
wire   [31:0] conv1_buff_5_q1;
reg   [31:0] B_CONV1_5;
reg   [31:0] B_CONV1_0;
reg   [31:0] B_CONV1_1;
reg   [31:0] B_CONV1_2;
reg   [31:0] B_CONV1_3;
reg   [31:0] B_CONV1_4;
reg    FM_DDR_BUFF1_blk_n_AR;
wire    ap_CS_fsm_state10;
reg    FM_DDR_BUFF1_blk_n_R;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage0;
reg   [0:0] exitcond7_reg_2687;
reg    FM_DDR_BUFF2_blk_n_AW;
wire    ap_CS_fsm_state79;
reg    FM_DDR_BUFF2_blk_n_W;
reg    ap_enable_reg_pp6_iter2;
wire    ap_block_pp6_stage0;
reg   [0:0] exitcond10_reg_3286;
reg   [0:0] exitcond10_reg_3286_pp6_iter1_reg;
reg    FM_DDR_BUFF2_blk_n_B;
wire    ap_CS_fsm_state87;
reg    WEIGHT_blk_n_AR;
wire    ap_CS_fsm_state20;
reg    WEIGHT_blk_n_R;
wire    ap_CS_fsm_pp2_stage0;
reg    ap_enable_reg_pp2_iter1;
wire    ap_block_pp2_stage0;
reg   [0:0] exitcond8_reg_2701;
reg    BIAS_blk_n_AR;
reg    BIAS_blk_n_R;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [2:0] indvar_reg_963;
reg   [10:0] indvar8_reg_975;
reg   [10:0] indvar8_reg_975_pp1_iter1_reg;
wire    ap_block_state17_pp1_stage0_iter0;
reg    ap_block_state18_pp1_stage0_iter1;
wire    ap_block_state19_pp1_stage0_iter2;
reg    ap_block_pp1_stage0_11001;
reg   [7:0] indvar2_reg_987;
reg   [15:0] phi_mul_reg_998;
reg   [7:0] phi_urem_reg_1009;
reg   [0:0] exitcond_flatten16_reg_1020;
reg   [0:0] exitcond_flatten17_reg_1031;
reg   [0:0] exitcond_flatten18_reg_1042;
reg   [0:0] exitcond11_reg_1053;
reg   [2:0] kc_cast_reg_1064;
reg   [2:0] chl_out2_reg_1075;
reg   [4:0] c_reg_1086;
reg   [7:0] indvar_flatten_reg_1097;
reg   [4:0] r_reg_1108;
reg   [12:0] indvar_flatten9_reg_1119;
reg   [15:0] indvar_flatten10_reg_1130;
reg   [2:0] kr_reg_1141;
reg   [16:0] indvar_flatten11_reg_1152;
reg   [0:0] exitcond_flatten19_reg_1164;
reg   [0:0] exitcond12_reg_1175;
reg   [2:0] chl_out4_reg_1186;
reg   [4:0] c7_reg_1197;
reg   [7:0] indvar_flatten12_reg_1208;
reg   [4:0] r7_reg_1219;
reg   [12:0] indvar_flatten13_reg_1230;
reg   [0:0] exitcond_flatten20_reg_1242;
reg   [0:0] exitcond13_reg_1253;
reg   [2:0] chl_out5_reg_1264;
reg   [4:0] c8_reg_1275;
reg   [6:0] indvar_flatten14_reg_1286;
reg   [4:0] r8_reg_1297;
reg   [10:0] indvar_flatten15_reg_1308;
reg   [10:0] indvar4_reg_1320;
reg   [21:0] phi_mul3_reg_1331;
reg   [10:0] phi_urem3_reg_1342;
wire   [31:0] grp_fu_1361_p2;
reg   [31:0] reg_1405;
wire    ap_CS_fsm_pp3_stage6;
reg    ap_enable_reg_pp3_iter0;
wire    ap_block_state37_pp3_stage6_iter0;
wire    ap_block_pp3_stage6_11001;
wire    ap_CS_fsm_pp5_stage1;
reg    ap_enable_reg_pp5_iter10;
wire    ap_block_state57_pp5_stage1_iter0;
wire    ap_block_state59_pp5_stage1_iter1;
wire    ap_block_state61_pp5_stage1_iter2;
wire    ap_block_state63_pp5_stage1_iter3;
wire    ap_block_state65_pp5_stage1_iter4;
wire    ap_block_state67_pp5_stage1_iter5;
wire    ap_block_state69_pp5_stage1_iter6;
wire    ap_block_state71_pp5_stage1_iter7;
wire    ap_block_state73_pp5_stage1_iter8;
wire    ap_block_state75_pp5_stage1_iter9;
wire    ap_block_state77_pp5_stage1_iter10;
wire    ap_block_pp5_stage1_11001;
wire   [31:0] grp_fu_1353_p2;
reg   [31:0] reg_1416;
wire    ap_CS_fsm_pp3_stage3;
reg    ap_enable_reg_pp3_iter1;
wire    ap_block_state34_pp3_stage3_iter0;
wire    ap_block_state42_pp3_stage3_iter1;
wire    ap_block_pp3_stage3_11001;
wire    ap_CS_fsm_pp4_stage7;
reg    ap_enable_reg_pp4_iter0;
wire    ap_block_state52_pp4_stage7_iter0;
wire    ap_block_pp4_stage7_11001;
reg    ap_enable_reg_pp5_iter3;
wire   [0:0] exitcond9_fu_1428_p2;
reg   [0:0] exitcond9_reg_2678;
wire    ap_block_state8_pp0_stage0_iter0;
reg    ap_block_state9_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [2:0] indvar_next_fu_1434_p2;
reg   [2:0] indvar_next_reg_2682;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] exitcond7_fu_1476_p2;
reg   [0:0] exitcond7_reg_2687_pp1_iter1_reg;
wire   [10:0] indvar_next4_fu_1482_p2;
reg   [10:0] indvar_next4_reg_2691;
reg    ap_enable_reg_pp1_iter0;
reg   [31:0] FM_DDR_BUFF1_read_reg_2696;
wire   [0:0] exitcond8_fu_1493_p2;
wire    ap_block_state27_pp2_stage0_iter0;
reg    ap_block_state28_pp2_stage0_iter1;
wire    ap_block_state29_pp2_stage0_iter2;
reg    ap_block_pp2_stage0_11001;
reg   [0:0] exitcond8_reg_2701_pp2_iter1_reg;
wire   [7:0] indvar_next5_fu_1499_p2;
reg    ap_enable_reg_pp2_iter0;
wire   [15:0] next_mul_fu_1505_p2;
wire   [4:0] tmp_fu_1511_p1;
reg   [4:0] tmp_reg_2715;
reg   [4:0] tmp_reg_2715_pp2_iter1_reg;
reg   [2:0] div_t_reg_2722;
reg   [2:0] div_t_reg_2722_pp2_iter1_reg;
wire   [7:0] idx_urem_fu_1537_p3;
reg   [31:0] WEIGHT_read_reg_2731;
wire   [2:0] kc_mid_fu_1578_p3;
reg   [2:0] kc_mid_reg_2741;
wire    ap_CS_fsm_pp3_stage0;
wire    ap_block_state31_pp3_stage0_iter0;
wire    ap_block_state39_pp3_stage0_iter1;
wire    ap_block_pp3_stage0_11001;
wire   [2:0] kr_cast_mid2_v_fu_1586_p3;
reg   [2:0] kr_cast_mid2_v_reg_2747;
wire   [0:0] exitcond_flatten13_m_fu_1612_p2;
reg   [0:0] exitcond_flatten13_m_reg_2755;
wire   [4:0] r_mid_fu_1624_p3;
reg   [4:0] r_mid_reg_2760;
wire   [0:0] exitcond_flatten_mid_7_fu_1650_p2;
reg   [0:0] exitcond_flatten_mid_7_reg_2766;
wire   [4:0] c_mid3_fu_1668_p3;
reg   [4:0] c_mid3_reg_2771;
wire   [0:0] exitcond4_mid5_fu_1682_p2;
reg   [0:0] exitcond4_mid5_reg_2777;
wire   [2:0] chl_out2_mid2_fu_1700_p3;
reg   [2:0] chl_out2_mid2_reg_2782;
reg   [2:0] chl_out2_mid2_reg_2782_pp3_iter1_reg;
wire   [2:0] chl_out_3_fu_1708_p2;
reg   [2:0] chl_out_3_reg_2788;
wire   [7:0] indvar_flatten_next_fu_1720_p3;
reg   [7:0] indvar_flatten_next_reg_2793;
wire   [12:0] indvar_flatten_next9_fu_1734_p3;
reg   [12:0] indvar_flatten_next9_reg_2798;
wire   [15:0] indvar_flatten_next1_fu_1748_p3;
reg   [15:0] indvar_flatten_next1_reg_2803;
wire   [0:0] exitcond4_fu_1756_p2;
reg   [0:0] exitcond4_reg_2808;
wire   [0:0] exitcond_flatten_fu_1762_p2;
reg   [0:0] exitcond_flatten_reg_2813;
wire   [0:0] exitcond_flatten9_fu_1768_p2;
reg   [0:0] exitcond_flatten9_reg_2818;
wire   [0:0] exitcond_flatten10_fu_1774_p2;
reg   [0:0] exitcond_flatten10_reg_2823;
wire   [0:0] exitcond_flatten11_fu_1780_p2;
reg   [0:0] exitcond_flatten11_reg_2828;
wire   [2:0] kc_cast_mid2_fu_1794_p3;
reg   [2:0] kc_cast_mid2_reg_2832;
wire    ap_CS_fsm_pp3_stage1;
wire    ap_block_state32_pp3_stage1_iter0;
wire    ap_block_state40_pp3_stage1_iter1;
wire    ap_block_pp3_stage1_11001;
wire   [4:0] r_mid2_fu_1809_p3;
reg   [4:0] r_mid2_reg_2837;
wire   [4:0] c_mid2_fu_1820_p3;
reg   [4:0] c_mid2_reg_2844;
reg   [31:0] pic_in_load_reg_2885;
wire    ap_CS_fsm_pp3_stage2;
wire    ap_block_state33_pp3_stage2_iter0;
wire    ap_block_state41_pp3_stage2_iter1;
wire    ap_block_pp3_stage2_11001;
wire   [31:0] tmp_67_fu_1897_p8;
reg   [31:0] tmp_67_reg_2890;
reg   [9:0] conv1_buff_0_addr_1_reg_2895;
wire    ap_CS_fsm_pp3_stage5;
wire    ap_block_state36_pp3_stage5_iter0;
wire    ap_block_pp3_stage5_11001;
reg   [9:0] conv1_buff_1_addr_1_reg_2900;
reg   [9:0] conv1_buff_2_addr_1_reg_2905;
reg   [9:0] conv1_buff_3_addr_1_reg_2910;
reg   [9:0] conv1_buff_4_addr_1_reg_2915;
reg   [9:0] conv1_buff_5_addr_1_reg_2920;
wire   [31:0] tmp_68_fu_1961_p8;
reg   [31:0] tmp_68_reg_2925;
wire   [16:0] indvar_flatten_next1_1_fu_1978_p2;
reg   [16:0] indvar_flatten_next1_1_reg_2930;
wire    ap_CS_fsm_pp3_stage7;
wire    ap_block_state38_pp3_stage7_iter0;
wire    ap_block_pp3_stage7_11001;
wire   [4:0] c2_mid_fu_1990_p3;
reg   [4:0] c2_mid_reg_2935;
wire    ap_CS_fsm_pp4_stage0;
wire    ap_block_state45_pp4_stage0_iter0;
wire    ap_block_state54_pp4_stage0_iter1;
wire    ap_block_pp4_stage0_11001;
wire   [0:0] exitcond1_mid_fu_2004_p2;
reg   [0:0] exitcond1_mid_reg_2940;
wire   [4:0] r1_mid2_fu_2010_p3;
reg   [4:0] r1_mid2_reg_2945;
wire   [4:0] c_4_fu_2018_p2;
reg   [4:0] c_4_reg_2952;
wire   [2:0] chl_out3_mid2_fu_2030_p3;
reg   [2:0] chl_out3_mid2_reg_2957;
wire   [2:0] chl_out_fu_2038_p2;
reg   [2:0] chl_out_reg_2967;
wire   [7:0] indvar_flatten_next1_2_fu_2050_p3;
reg   [7:0] indvar_flatten_next1_2_reg_2972;
wire   [0:0] exitcond1_fu_2058_p2;
reg   [0:0] exitcond1_reg_2977;
wire   [0:0] exitcond_flatten12_fu_2064_p2;
reg   [0:0] exitcond_flatten12_reg_2982;
wire   [0:0] exitcond_flatten13_fu_2070_p2;
reg   [0:0] exitcond_flatten13_reg_2987;
wire   [4:0] c2_mid2_fu_2076_p3;
reg   [4:0] c2_mid2_reg_2991;
wire    ap_CS_fsm_pp4_stage1;
wire    ap_block_state46_pp4_stage1_iter0;
wire    ap_block_pp4_stage1_11001;
reg   [9:0] conv1_buff_0_addr_reg_2996;
reg   [9:0] conv1_buff_1_addr_reg_3001;
reg   [9:0] conv1_buff_2_addr_reg_3006;
reg   [9:0] conv1_buff_3_addr_reg_3011;
reg   [9:0] conv1_buff_4_addr_reg_3016;
reg   [9:0] conv1_buff_5_addr_reg_3021;
wire   [31:0] tmp_70_fu_2129_p8;
reg   [31:0] tmp_70_reg_3026;
wire    ap_CS_fsm_pp4_stage2;
wire    ap_block_state47_pp4_stage2_iter0;
wire    ap_block_pp4_stage2_11001;
wire   [31:0] UnifiedRetVal_i_fu_2227_p3;
reg   [31:0] UnifiedRetVal_i_reg_3031;
wire   [31:0] tmp_43_fu_2277_p3;
reg   [31:0] tmp_43_reg_3036;
wire    ap_CS_fsm_pp4_stage8;
wire    ap_block_state53_pp4_stage8_iter0;
wire    ap_block_pp4_stage8_11001;
wire   [12:0] indvar_flatten_next1_3_fu_2285_p2;
reg   [12:0] indvar_flatten_next1_3_reg_3046;
wire   [4:0] c5_mid_fu_2297_p3;
reg   [4:0] c5_mid_reg_3051;
wire    ap_CS_fsm_pp5_stage0;
wire    ap_block_state56_pp5_stage0_iter0;
wire    ap_block_state58_pp5_stage0_iter1;
wire    ap_block_state60_pp5_stage0_iter2;
wire    ap_block_state62_pp5_stage0_iter3;
wire    ap_block_state64_pp5_stage0_iter4;
wire    ap_block_state66_pp5_stage0_iter5;
wire    ap_block_state68_pp5_stage0_iter6;
wire    ap_block_state70_pp5_stage0_iter7;
wire    ap_block_state72_pp5_stage0_iter8;
wire    ap_block_state74_pp5_stage0_iter9;
wire    ap_block_state76_pp5_stage0_iter10;
wire    ap_block_state78_pp5_stage0_iter11;
wire    ap_block_pp5_stage0_11001;
wire   [0:0] exitcond_mid_fu_2311_p2;
reg   [0:0] exitcond_mid_reg_3057;
wire   [4:0] r4_mid2_fu_2317_p3;
reg   [4:0] r4_mid2_reg_3062;
reg    ap_enable_reg_pp5_iter0;
reg   [4:0] r4_mid2_reg_3062_pp5_iter1_reg;
reg   [4:0] r4_mid2_reg_3062_pp5_iter2_reg;
wire   [2:0] chl_out6_mid2_fu_2331_p3;
reg   [2:0] chl_out6_mid2_reg_3070;
reg   [2:0] chl_out6_mid2_reg_3070_pp5_iter1_reg;
reg   [2:0] chl_out6_mid2_reg_3070_pp5_iter2_reg;
reg   [2:0] chl_out6_mid2_reg_3070_pp5_iter3_reg;
reg   [2:0] chl_out6_mid2_reg_3070_pp5_iter4_reg;
reg   [2:0] chl_out6_mid2_reg_3070_pp5_iter5_reg;
reg   [2:0] chl_out6_mid2_reg_3070_pp5_iter6_reg;
reg   [2:0] chl_out6_mid2_reg_3070_pp5_iter7_reg;
reg   [2:0] chl_out6_mid2_reg_3070_pp5_iter8_reg;
reg   [2:0] chl_out6_mid2_reg_3070_pp5_iter9_reg;
reg   [2:0] chl_out6_mid2_reg_3070_pp5_iter10_reg;
reg   [3:0] tmp_84_reg_3076;
wire   [2:0] chl_out_2_fu_2349_p2;
reg   [2:0] chl_out_2_reg_3082;
wire   [6:0] indvar_flatten_next1_4_fu_2361_p3;
reg   [6:0] indvar_flatten_next1_4_reg_3087;
wire   [0:0] exitcond_fu_2369_p2;
reg   [0:0] exitcond_reg_3092;
wire   [0:0] exitcond_flatten14_fu_2375_p2;
reg   [0:0] exitcond_flatten14_reg_3097;
wire   [0:0] exitcond_flatten15_fu_2381_p2;
reg   [0:0] exitcond_flatten15_reg_3102;
wire   [4:0] c5_mid2_fu_2392_p3;
reg   [4:0] c5_mid2_reg_3106;
wire   [10:0] tmp_44_cast_fu_2398_p1;
reg   [10:0] tmp_44_cast_reg_3111;
reg   [10:0] tmp_44_cast_reg_3111_pp5_iter1_reg;
reg   [10:0] tmp_44_cast_reg_3111_pp5_iter2_reg;
wire   [10:0] tmp_47_cast_fu_2452_p1;
reg   [10:0] tmp_47_cast_reg_3146;
reg   [10:0] tmp_47_cast_reg_3146_pp5_iter1_reg;
reg   [10:0] tmp_47_cast_reg_3146_pp5_iter2_reg;
wire   [8:0] tmp_125_fu_2514_p2;
reg   [8:0] tmp_125_reg_3181;
reg   [8:0] tmp_125_reg_3181_pp5_iter1_reg;
reg   [8:0] tmp_125_reg_3181_pp5_iter2_reg;
reg   [8:0] tmp_125_reg_3181_pp5_iter3_reg;
reg   [8:0] tmp_125_reg_3181_pp5_iter4_reg;
reg   [8:0] tmp_125_reg_3181_pp5_iter5_reg;
reg   [8:0] tmp_125_reg_3181_pp5_iter6_reg;
reg   [8:0] tmp_125_reg_3181_pp5_iter7_reg;
reg   [8:0] tmp_125_reg_3181_pp5_iter8_reg;
reg   [8:0] tmp_125_reg_3181_pp5_iter9_reg;
reg   [8:0] tmp_125_reg_3181_pp5_iter10_reg;
wire   [10:0] indvar_flatten_next1_5_fu_2520_p2;
reg   [10:0] indvar_flatten_next1_5_reg_3186;
wire   [31:0] grp_fu_1371_p8;
reg   [31:0] tmp_79_reg_3191;
reg    ap_enable_reg_pp5_iter1;
wire   [31:0] grp_fu_1388_p8;
reg   [31:0] tmp_80_reg_3196;
wire   [10:0] tmp_120_fu_2576_p2;
reg   [10:0] tmp_120_reg_3206;
reg   [10:0] tmp_120_reg_3206_pp5_iter4_reg;
reg   [31:0] tmp_81_reg_3236;
reg   [31:0] tmp_82_reg_3271;
reg    ap_enable_reg_pp5_iter5;
reg   [31:0] tmp_51_reg_3276;
reg    ap_enable_reg_pp5_iter6;
wire   [31:0] grp_fu_1357_p2;
reg   [31:0] tmp_52_reg_3281;
wire   [0:0] exitcond10_fu_2599_p2;
wire    ap_CS_fsm_pp6_stage0;
wire    ap_block_state80_pp6_stage0_iter0;
wire    ap_block_state81_pp6_stage0_iter1;
wire    ap_block_state82_pp6_stage0_iter2;
reg    ap_sig_ioackin_m_axi_FM_DDR_BUFF2_WREADY;
reg    ap_block_state82_io;
reg    ap_block_pp6_stage0_11001;
wire   [10:0] indvar_next6_fu_2605_p2;
reg    ap_enable_reg_pp6_iter0;
wire   [10:0] idx_urem3_fu_2623_p3;
wire   [21:0] next_mul3_fu_2631_p2;
reg   [2:0] div54_t_reg_3335;
wire   [31:0] tmp_76_fu_2661_p8;
reg   [31:0] tmp_76_reg_3340;
wire    ap_CS_fsm_state7;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state8;
wire    ap_CS_fsm_state16;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state17;
reg    ap_enable_reg_pp1_iter2;
wire    ap_CS_fsm_state26;
reg    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state27;
reg    ap_enable_reg_pp2_iter2;
wire    ap_CS_fsm_state30;
wire    ap_block_pp3_stage7_subdone;
wire    ap_block_state35_pp3_stage4_iter0;
wire    ap_block_state43_pp3_stage4_iter1;
wire    ap_block_pp3_stage4_subdone;
wire    ap_CS_fsm_pp3_stage4;
wire    ap_CS_fsm_state44;
wire    ap_block_pp4_stage8_subdone;
reg    ap_enable_reg_pp4_iter1;
wire    ap_block_pp4_stage0_subdone;
wire    ap_CS_fsm_state55;
wire    ap_block_pp5_stage1_subdone;
wire    ap_block_pp5_stage0_subdone;
reg    ap_enable_reg_pp5_iter2;
reg    ap_enable_reg_pp5_iter4;
reg    ap_enable_reg_pp5_iter7;
reg    ap_enable_reg_pp5_iter8;
reg    ap_enable_reg_pp5_iter9;
reg    ap_enable_reg_pp5_iter11;
reg    ap_sig_ioackin_m_axi_FM_DDR_BUFF2_AWREADY;
reg    ap_block_pp6_stage0_subdone;
reg    ap_condition_pp6_exit_iter0_state80;
reg    ap_enable_reg_pp6_iter1;
reg   [2:0] ap_phi_mux_indvar_phi_fu_967_p4;
reg   [10:0] ap_phi_mux_indvar8_phi_fu_979_p4;
reg   [0:0] ap_phi_mux_exitcond_flatten16_phi_fu_1024_p4;
wire    ap_block_pp3_stage0;
reg   [0:0] ap_phi_mux_exitcond_flatten17_phi_fu_1035_p4;
reg   [0:0] ap_phi_mux_exitcond_flatten18_phi_fu_1046_p4;
reg   [0:0] ap_phi_mux_exitcond11_phi_fu_1057_p4;
reg   [2:0] ap_phi_mux_kc_cast_phi_fu_1068_p4;
reg   [2:0] ap_phi_mux_chl_out2_phi_fu_1079_p4;
reg   [4:0] ap_phi_mux_c_phi_fu_1090_p4;
reg   [7:0] ap_phi_mux_indvar_flatten_phi_fu_1101_p4;
reg   [4:0] ap_phi_mux_r_phi_fu_1112_p4;
reg   [12:0] ap_phi_mux_indvar_flatten9_phi_fu_1123_p4;
reg   [15:0] ap_phi_mux_indvar_flatten10_phi_fu_1134_p4;
reg   [2:0] ap_phi_mux_kr_phi_fu_1145_p4;
reg   [16:0] ap_phi_mux_indvar_flatten11_phi_fu_1156_p4;
reg   [0:0] ap_phi_mux_exitcond_flatten19_phi_fu_1168_p4;
wire    ap_block_pp4_stage0;
reg   [0:0] ap_phi_mux_exitcond12_phi_fu_1179_p4;
reg   [2:0] ap_phi_mux_chl_out4_phi_fu_1190_p4;
reg   [4:0] ap_phi_mux_c7_phi_fu_1201_p4;
reg   [7:0] ap_phi_mux_indvar_flatten12_phi_fu_1212_p4;
reg   [4:0] ap_phi_mux_r7_phi_fu_1223_p4;
reg   [12:0] ap_phi_mux_indvar_flatten13_phi_fu_1234_p4;
reg   [0:0] ap_phi_mux_exitcond_flatten20_phi_fu_1246_p4;
wire    ap_block_pp5_stage0;
reg   [0:0] ap_phi_mux_exitcond13_phi_fu_1257_p4;
reg   [2:0] ap_phi_mux_chl_out5_phi_fu_1268_p4;
reg   [4:0] ap_phi_mux_c8_phi_fu_1279_p4;
reg   [6:0] ap_phi_mux_indvar_flatten14_phi_fu_1290_p4;
reg   [4:0] ap_phi_mux_r8_phi_fu_1301_p4;
reg   [10:0] ap_phi_mux_indvar_flatten15_phi_fu_1312_p4;
wire   [63:0] indvar1_fu_1488_p1;
wire   [63:0] tmp_88_fu_1562_p1;
wire   [63:0] tmp_94_fu_1846_p1;
wire    ap_block_pp3_stage1;
wire  signed [63:0] tmp_106_cast_fu_1887_p1;
wire  signed [63:0] tmp_110_cast_fu_1951_p1;
wire    ap_block_pp3_stage5;
wire  signed [63:0] tmp_115_cast_fu_2119_p1;
wire    ap_block_pp4_stage1;
wire  signed [63:0] tmp_122_cast_fu_2436_p1;
wire    ap_block_pp5_stage1;
wire  signed [63:0] tmp_123_cast_fu_2462_p1;
wire  signed [63:0] tmp_127_cast_fu_2566_p1;
wire  signed [63:0] tmp_128_cast_fu_2581_p1;
wire  signed [63:0] tmp_132_cast_fu_2590_p1;
wire   [63:0] tmp_128_fu_2641_p1;
reg    ap_reg_ioackin_m_axi_BIAS_ARREADY;
reg    ap_sig_ioackin_m_axi_BIAS_ARREADY;
reg    ap_reg_ioackin_m_axi_FM_DDR_BUFF1_ARREADY;
reg    ap_sig_ioackin_m_axi_FM_DDR_BUFF1_ARREADY;
reg    ap_reg_ioackin_m_axi_WEIGHT_ARREADY;
reg    ap_sig_ioackin_m_axi_WEIGHT_ARREADY;
reg    ap_reg_ioackin_m_axi_FM_DDR_BUFF2_AWREADY;
reg    ap_reg_ioackin_m_axi_FM_DDR_BUFF2_WREADY;
wire    ap_block_pp6_stage0_01001;
wire    ap_block_pp4_stage2;
wire    ap_block_pp3_stage4_11001;
wire    ap_block_pp3_stage4;
reg   [31:0] grp_fu_1353_p0;
reg   [31:0] grp_fu_1353_p1;
wire    ap_block_pp3_stage7;
wire    ap_CS_fsm_pp4_stage3;
wire    ap_block_pp4_stage3;
reg   [31:0] grp_fu_1361_p0;
reg   [31:0] grp_fu_1361_p1;
wire    ap_block_pp3_stage3;
wire    ap_block_pp4_stage8;
reg   [2:0] grp_fu_1371_p7;
reg   [2:0] grp_fu_1388_p7;
wire   [7:0] next_urem_fu_1525_p2;
wire   [0:0] tmp_103_fu_1531_p2;
wire   [0:0] tmp_s_fu_1545_p2;
wire   [4:0] tmp_87_fu_1550_p2;
wire   [4:0] tmp_64_fu_1555_p3;
wire   [2:0] kr_2_fu_1572_p2;
wire   [0:0] not_exitcond_flatten_fu_1594_p2;
wire   [0:0] tmp_89_fu_1618_p2;
wire   [0:0] exitcond_flatten13_n_fu_1632_p2;
wire   [0:0] exitcond4_mid_fu_1600_p2;
wire   [0:0] not_exitcond_flatten_4_fu_1638_p2;
wire   [0:0] exitcond_flatten_mid_fu_1606_p2;
wire   [0:0] tmp_90_fu_1656_p2;
wire   [0:0] tmp_86_fu_1662_p2;
wire   [0:0] exitcond4_mid4_fu_1644_p2;
wire   [0:0] not_exitcond_flatten_1_fu_1676_p2;
wire   [0:0] tmp_91_fu_1688_p2;
wire   [0:0] tmp_92_fu_1694_p2;
wire   [7:0] indvar_flatten_op_fu_1714_p2;
wire   [12:0] indvar_flatten11_op_fu_1728_p2;
wire   [15:0] indvar_flatten31_op_fu_1742_p2;
wire   [2:0] kc_fu_1789_p2;
wire   [4:0] r_6_fu_1804_p2;
wire   [4:0] c_6_fu_1815_p2;
wire   [4:0] kc_cast_mid2_cast_fu_1800_p1;
wire   [4:0] kr_cast_mid2_fu_1786_p1;
wire   [4:0] tmp_58_fu_1832_p2;
wire   [4:0] tmp_56_fu_1826_p2;
wire   [9:0] tmp_93_fu_1838_p3;
wire   [4:0] tmp_95_fu_1858_p3;
wire   [5:0] tmp_61_cast_fu_1855_p1;
wire   [5:0] p_shl14_cast_fu_1865_p1;
wire   [5:0] tmp_96_fu_1869_p2;
wire   [5:0] tmp_97_fu_1875_p2;
wire   [5:0] tmp_60_cast_fu_1851_p1;
wire   [5:0] tmp_98_fu_1881_p2;
wire    ap_block_pp3_stage2;
wire   [9:0] tmp_99_fu_1917_p3;
wire   [6:0] tmp_100_fu_1928_p3;
wire   [10:0] p_shl_cast_fu_1924_p1;
wire   [10:0] p_shl15_cast_fu_1935_p1;
wire   [10:0] tmp_101_fu_1939_p2;
wire   [10:0] tmp_63_cast_fu_1914_p1;
wire   [10:0] tmp_102_fu_1945_p2;
wire    ap_block_pp3_stage6;
wire   [0:0] not_exitcond_flatten_2_fu_1998_p2;
wire   [4:0] r_4_fu_1984_p2;
wire   [0:0] tmp_104_fu_2024_p2;
wire   [7:0] indvar_flatten68_op_fu_2044_p2;
wire   [9:0] tmp_105_fu_2085_p3;
wire   [6:0] tmp_106_fu_2096_p3;
wire   [10:0] p_shl16_cast_fu_2092_p1;
wire   [10:0] p_shl17_cast_fu_2103_p1;
wire   [10:0] tmp_39_cast_fu_2081_p1;
wire   [10:0] tmp_107_fu_2107_p2;
wire   [10:0] tmp_108_fu_2113_p2;
wire   [0:0] sel_tmp_i_fu_2170_p2;
wire   [0:0] sel_tmp2_i_fu_2183_p2;
wire   [31:0] sel_tmp1_i_fu_2175_p3;
wire   [0:0] sel_tmp4_i_fu_2196_p2;
wire   [31:0] sel_tmp3_i_fu_2188_p3;
wire   [0:0] sel_tmp6_i_fu_2209_p2;
wire   [31:0] sel_tmp5_i_fu_2201_p3;
wire   [0:0] sel_tmp8_i_fu_2222_p2;
wire   [31:0] sel_tmp7_i_fu_2214_p3;
wire   [31:0] tmp_41_to_int_fu_2235_p1;
wire   [7:0] tmp_71_fu_2239_p4;
wire   [22:0] tmp_109_fu_2249_p1;
wire   [0:0] notrhs_fu_2259_p2;
wire   [0:0] notlhs_fu_2253_p2;
wire   [0:0] tmp_74_fu_2265_p2;
wire   [0:0] tmp_75_fu_1366_p2;
wire   [0:0] tmp_77_fu_2271_p2;
wire   [0:0] not_exitcond_flatten_3_fu_2305_p2;
wire   [4:0] r_5_fu_2291_p2;
wire   [0:0] tmp_110_fu_2325_p2;
wire   [6:0] indvar_flatten87_op_fu_2355_p2;
wire   [4:0] c_5_fu_2387_p2;
wire   [9:0] tmp_111_fu_2402_p3;
wire   [6:0] tmp_112_fu_2413_p3;
wire   [10:0] p_shl18_cast_fu_2409_p1;
wire   [10:0] p_shl19_cast_fu_2420_p1;
wire   [10:0] tmp_113_fu_2424_p2;
wire   [10:0] tmp_114_fu_2430_p2;
wire   [4:0] tmp_46_fu_2446_p2;
wire   [10:0] tmp_115_fu_2456_p2;
wire   [3:0] tmp_121_fu_2472_p4;
wire   [7:0] tmp_122_fu_2486_p3;
wire   [4:0] tmp_123_fu_2497_p3;
wire   [8:0] p_shl22_cast_fu_2493_p1;
wire   [8:0] p_shl23_cast_fu_2504_p1;
wire   [8:0] tmp_124_fu_2508_p2;
wire   [8:0] tmp_54_cast_fu_2482_p1;
wire   [4:0] tmp_49_fu_2526_p2;
wire   [9:0] tmp_116_fu_2531_p3;
wire   [6:0] tmp_117_fu_2543_p3;
wire   [10:0] p_shl20_cast_fu_2539_p1;
wire   [10:0] p_shl21_cast_fu_2551_p1;
wire   [10:0] tmp_118_fu_2555_p2;
wire   [10:0] tmp_119_fu_2561_p2;
wire   [10:0] next_urem3_fu_2611_p2;
wire   [0:0] tmp_126_fu_2617_p2;
wire   [7:0] tmp_127_fu_2637_p1;
wire    ap_block_pp4_stage8_00001;
reg   [52:0] ap_NS_fsm;
wire    ap_block_pp3_stage0_subdone;
wire    ap_block_pp3_stage1_subdone;
wire    ap_block_pp3_stage2_subdone;
wire    ap_block_pp3_stage3_subdone;
wire    ap_block_pp3_stage5_subdone;
wire    ap_block_pp3_stage6_subdone;
wire    ap_block_pp4_stage1_subdone;
wire    ap_block_pp4_stage2_subdone;
wire    ap_block_state48_pp4_stage3_iter0;
wire    ap_block_pp4_stage3_subdone;
wire    ap_block_state49_pp4_stage4_iter0;
wire    ap_block_pp4_stage4_subdone;
wire    ap_block_state50_pp4_stage5_iter0;
wire    ap_block_pp4_stage5_subdone;
wire    ap_block_state51_pp4_stage6_iter0;
wire    ap_block_pp4_stage6_subdone;
wire    ap_block_pp4_stage7_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;
reg    ap_idle_pp4;
wire    ap_enable_pp4;
reg    ap_idle_pp5;
wire    ap_enable_pp5;
reg    ap_idle_pp6;
wire    ap_enable_pp6;

// power-on initialization
initial begin
#0 ap_CS_fsm = 53'd1;
#0 B_CONV1_5 = 32'd0;
#0 B_CONV1_0 = 32'd0;
#0 B_CONV1_1 = 32'd0;
#0 B_CONV1_2 = 32'd0;
#0 B_CONV1_3 = 32'd0;
#0 B_CONV1_4 = 32'd0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp6_iter2 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp5_iter10 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp4_iter0 = 1'b0;
#0 ap_enable_reg_pp5_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp5_iter0 = 1'b0;
#0 ap_enable_reg_pp5_iter1 = 1'b0;
#0 ap_enable_reg_pp5_iter5 = 1'b0;
#0 ap_enable_reg_pp5_iter6 = 1'b0;
#0 ap_enable_reg_pp6_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp2_iter2 = 1'b0;
#0 ap_enable_reg_pp4_iter1 = 1'b0;
#0 ap_enable_reg_pp5_iter2 = 1'b0;
#0 ap_enable_reg_pp5_iter4 = 1'b0;
#0 ap_enable_reg_pp5_iter7 = 1'b0;
#0 ap_enable_reg_pp5_iter8 = 1'b0;
#0 ap_enable_reg_pp5_iter9 = 1'b0;
#0 ap_enable_reg_pp5_iter11 = 1'b0;
#0 ap_enable_reg_pp6_iter1 = 1'b0;
#0 ap_reg_ioackin_m_axi_BIAS_ARREADY = 1'b0;
#0 ap_reg_ioackin_m_axi_FM_DDR_BUFF1_ARREADY = 1'b0;
#0 ap_reg_ioackin_m_axi_WEIGHT_ARREADY = 1'b0;
#0 ap_reg_ioackin_m_axi_FM_DDR_BUFF2_AWREADY = 1'b0;
#0 ap_reg_ioackin_m_axi_FM_DDR_BUFF2_WREADY = 1'b0;
end

conv1_pic_in #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
pic_in_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(pic_in_address0),
    .ce0(pic_in_ce0),
    .we0(pic_in_we0),
    .d0(FM_DDR_BUFF1_read_reg_2696),
    .q0(pic_in_q0)
);

conv1_W_CONV1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
W_CONV1_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(W_CONV1_0_address0),
    .ce0(W_CONV1_0_ce0),
    .we0(W_CONV1_0_we0),
    .d0(WEIGHT_read_reg_2731),
    .q0(W_CONV1_0_q0)
);

conv1_W_CONV1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
W_CONV1_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(W_CONV1_1_address0),
    .ce0(W_CONV1_1_ce0),
    .we0(W_CONV1_1_we0),
    .d0(WEIGHT_read_reg_2731),
    .q0(W_CONV1_1_q0)
);

conv1_W_CONV1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
W_CONV1_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(W_CONV1_2_address0),
    .ce0(W_CONV1_2_ce0),
    .we0(W_CONV1_2_we0),
    .d0(WEIGHT_read_reg_2731),
    .q0(W_CONV1_2_q0)
);

conv1_W_CONV1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
W_CONV1_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(W_CONV1_3_address0),
    .ce0(W_CONV1_3_ce0),
    .we0(W_CONV1_3_we0),
    .d0(WEIGHT_read_reg_2731),
    .q0(W_CONV1_3_q0)
);

conv1_W_CONV1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
W_CONV1_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(W_CONV1_4_address0),
    .ce0(W_CONV1_4_ce0),
    .we0(W_CONV1_4_we0),
    .d0(WEIGHT_read_reg_2731),
    .q0(W_CONV1_4_q0)
);

conv1_W_CONV1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
W_CONV1_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(W_CONV1_5_address0),
    .ce0(W_CONV1_5_ce0),
    .we0(W_CONV1_5_we0),
    .d0(WEIGHT_read_reg_2731),
    .q0(W_CONV1_5_q0)
);

conv1_conv1_buff_0 #(
    .DataWidth( 32 ),
    .AddressRange( 784 ),
    .AddressWidth( 10 ))
conv1_buff_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv1_buff_0_address0),
    .ce0(conv1_buff_0_ce0),
    .we0(conv1_buff_0_we0),
    .d0(conv1_buff_0_d0),
    .q0(conv1_buff_0_q0),
    .address1(conv1_buff_0_address1),
    .ce1(conv1_buff_0_ce1),
    .q1(conv1_buff_0_q1)
);

conv1_conv1_buff_0 #(
    .DataWidth( 32 ),
    .AddressRange( 784 ),
    .AddressWidth( 10 ))
conv1_buff_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv1_buff_1_address0),
    .ce0(conv1_buff_1_ce0),
    .we0(conv1_buff_1_we0),
    .d0(conv1_buff_1_d0),
    .q0(conv1_buff_1_q0),
    .address1(conv1_buff_1_address1),
    .ce1(conv1_buff_1_ce1),
    .q1(conv1_buff_1_q1)
);

conv1_conv1_buff_0 #(
    .DataWidth( 32 ),
    .AddressRange( 784 ),
    .AddressWidth( 10 ))
conv1_buff_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv1_buff_2_address0),
    .ce0(conv1_buff_2_ce0),
    .we0(conv1_buff_2_we0),
    .d0(conv1_buff_2_d0),
    .q0(conv1_buff_2_q0),
    .address1(conv1_buff_2_address1),
    .ce1(conv1_buff_2_ce1),
    .q1(conv1_buff_2_q1)
);

conv1_conv1_buff_0 #(
    .DataWidth( 32 ),
    .AddressRange( 784 ),
    .AddressWidth( 10 ))
conv1_buff_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv1_buff_3_address0),
    .ce0(conv1_buff_3_ce0),
    .we0(conv1_buff_3_we0),
    .d0(conv1_buff_3_d0),
    .q0(conv1_buff_3_q0),
    .address1(conv1_buff_3_address1),
    .ce1(conv1_buff_3_ce1),
    .q1(conv1_buff_3_q1)
);

conv1_conv1_buff_0 #(
    .DataWidth( 32 ),
    .AddressRange( 784 ),
    .AddressWidth( 10 ))
conv1_buff_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv1_buff_4_address0),
    .ce0(conv1_buff_4_ce0),
    .we0(conv1_buff_4_we0),
    .d0(conv1_buff_4_d0),
    .q0(conv1_buff_4_q0),
    .address1(conv1_buff_4_address1),
    .ce1(conv1_buff_4_ce1),
    .q1(conv1_buff_4_q1)
);

conv1_conv1_buff_0 #(
    .DataWidth( 32 ),
    .AddressRange( 784 ),
    .AddressWidth( 10 ))
conv1_buff_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv1_buff_5_address0),
    .ce0(conv1_buff_5_ce0),
    .we0(conv1_buff_5_we0),
    .d0(conv1_buff_5_d0),
    .q0(conv1_buff_5_q0),
    .address1(conv1_buff_5_address1),
    .ce1(conv1_buff_5_ce1),
    .q1(conv1_buff_5_q1)
);

conv_top_fadd_32nbkb #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
conv_top_fadd_32nbkb_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1353_p0),
    .din1(grp_fu_1353_p1),
    .ce(1'b1),
    .dout(grp_fu_1353_p2)
);

conv_top_fadd_32nbkb #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
conv_top_fadd_32nbkb_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_51_reg_3276),
    .din1(tmp_82_reg_3271),
    .ce(1'b1),
    .dout(grp_fu_1357_p2)
);

conv_top_fmul_32ncud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
conv_top_fmul_32ncud_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1361_p0),
    .din1(grp_fu_1361_p1),
    .ce(1'b1),
    .dout(grp_fu_1361_p2)
);

conv_top_fcmp_32ndEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
conv_top_fcmp_32ndEe_U4(
    .din0(reg_1416),
    .din1(32'd0),
    .opcode(5'd2),
    .dout(tmp_75_fu_1366_p2)
);

conv_top_mux_63_3eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
conv_top_mux_63_3eOg_U5(
    .din0(conv1_buff_0_q1),
    .din1(conv1_buff_1_q1),
    .din2(conv1_buff_2_q1),
    .din3(conv1_buff_3_q1),
    .din4(conv1_buff_4_q1),
    .din5(conv1_buff_5_q1),
    .din6(grp_fu_1371_p7),
    .dout(grp_fu_1371_p8)
);

conv_top_mux_63_3eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
conv_top_mux_63_3eOg_U6(
    .din0(conv1_buff_0_q0),
    .din1(conv1_buff_1_q0),
    .din2(conv1_buff_2_q0),
    .din3(conv1_buff_3_q0),
    .din4(conv1_buff_4_q0),
    .din5(conv1_buff_5_q0),
    .din6(grp_fu_1388_p7),
    .dout(grp_fu_1388_p8)
);

conv_top_mux_63_3eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
conv_top_mux_63_3eOg_U7(
    .din0(W_CONV1_0_q0),
    .din1(W_CONV1_1_q0),
    .din2(W_CONV1_2_q0),
    .din3(W_CONV1_3_q0),
    .din4(W_CONV1_4_q0),
    .din5(W_CONV1_5_q0),
    .din6(chl_out2_mid2_reg_2782),
    .dout(tmp_67_fu_1897_p8)
);

conv_top_mux_63_3eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
conv_top_mux_63_3eOg_U8(
    .din0(conv1_buff_0_q0),
    .din1(conv1_buff_1_q0),
    .din2(conv1_buff_2_q0),
    .din3(conv1_buff_3_q0),
    .din4(conv1_buff_4_q0),
    .din5(conv1_buff_5_q0),
    .din6(chl_out2_mid2_reg_2782),
    .dout(tmp_68_fu_1961_p8)
);

conv_top_mux_63_3eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
conv_top_mux_63_3eOg_U9(
    .din0(conv1_buff_0_q0),
    .din1(conv1_buff_1_q0),
    .din2(conv1_buff_2_q0),
    .din3(conv1_buff_3_q0),
    .din4(conv1_buff_4_q0),
    .din5(conv1_buff_5_q0),
    .din6(chl_out3_mid2_reg_2957),
    .dout(tmp_70_fu_2129_p8)
);

conv_top_mux_63_3eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
conv_top_mux_63_3eOg_U10(
    .din0(conv_out1_0_q0),
    .din1(conv_out1_1_q0),
    .din2(conv_out1_2_q0),
    .din3(conv_out1_3_q0),
    .din4(conv_out1_4_q0),
    .din5(conv_out1_5_q0),
    .din6(div54_t_reg_3335),
    .dout(tmp_76_fu_2661_p8)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state8) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state7)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state8) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state8);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((1'b1 == ap_CS_fsm_state7)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_condition_pp1_exit_iter0_state17) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state16)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state17)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state17);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end else if ((1'b1 == ap_CS_fsm_state16)) begin
            ap_enable_reg_pp1_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_condition_pp2_exit_iter0_state27) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state26)) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp2_exit_iter0_state27)) begin
                ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state27);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
        end else if ((1'b1 == ap_CS_fsm_state26)) begin
            ap_enable_reg_pp2_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((exitcond_flatten11_reg_2828 == 1'd1) & (1'b1 == ap_CS_fsm_pp3_stage7) & (1'b0 == ap_block_pp3_stage7_subdone))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state30)) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_pp3_stage7) & (1'b0 == ap_block_pp3_stage7_subdone)) | ((1'b1 == ap_CS_fsm_pp3_stage4) & (1'b0 == ap_block_pp3_stage4_subdone)))) begin
            ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
        end else if ((1'b1 == ap_CS_fsm_state30)) begin
            ap_enable_reg_pp3_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter0 <= 1'b0;
    end else begin
        if (((exitcond_flatten13_reg_2987 == 1'd1) & (1'b1 == ap_CS_fsm_pp4_stage8) & (1'b0 == ap_block_pp4_stage8_subdone))) begin
            ap_enable_reg_pp4_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state44)) begin
            ap_enable_reg_pp4_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter1 <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_pp4_stage8) & (1'b0 == ap_block_pp4_stage8_subdone)) | ((1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_subdone)))) begin
            ap_enable_reg_pp4_iter1 <= ap_enable_reg_pp4_iter0;
        end else if ((1'b1 == ap_CS_fsm_state44)) begin
            ap_enable_reg_pp4_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp5_stage1) & (1'b0 == ap_block_pp5_stage1_subdone) & (exitcond_flatten15_reg_3102 == 1'd1))) begin
            ap_enable_reg_pp5_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state55)) begin
            ap_enable_reg_pp5_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp5_stage1) & (1'b0 == ap_block_pp5_stage1_subdone))) begin
            ap_enable_reg_pp5_iter1 <= ap_enable_reg_pp5_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter10 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp5_stage1) & (1'b0 == ap_block_pp5_stage1_subdone))) begin
            ap_enable_reg_pp5_iter10 <= ap_enable_reg_pp5_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter11 <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_pp5_stage1) & (1'b0 == ap_block_pp5_stage1_subdone)) | ((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_subdone)))) begin
            ap_enable_reg_pp5_iter11 <= ap_enable_reg_pp5_iter10;
        end else if ((1'b1 == ap_CS_fsm_state55)) begin
            ap_enable_reg_pp5_iter11 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter2 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp5_stage1) & (1'b0 == ap_block_pp5_stage1_subdone))) begin
            ap_enable_reg_pp5_iter2 <= ap_enable_reg_pp5_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter3 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp5_stage1) & (1'b0 == ap_block_pp5_stage1_subdone))) begin
            ap_enable_reg_pp5_iter3 <= ap_enable_reg_pp5_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter4 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp5_stage1) & (1'b0 == ap_block_pp5_stage1_subdone))) begin
            ap_enable_reg_pp5_iter4 <= ap_enable_reg_pp5_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter5 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp5_stage1) & (1'b0 == ap_block_pp5_stage1_subdone))) begin
            ap_enable_reg_pp5_iter5 <= ap_enable_reg_pp5_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter6 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp5_stage1) & (1'b0 == ap_block_pp5_stage1_subdone))) begin
            ap_enable_reg_pp5_iter6 <= ap_enable_reg_pp5_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter7 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp5_stage1) & (1'b0 == ap_block_pp5_stage1_subdone))) begin
            ap_enable_reg_pp5_iter7 <= ap_enable_reg_pp5_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter8 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp5_stage1) & (1'b0 == ap_block_pp5_stage1_subdone))) begin
            ap_enable_reg_pp5_iter8 <= ap_enable_reg_pp5_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter9 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp5_stage1) & (1'b0 == ap_block_pp5_stage1_subdone))) begin
            ap_enable_reg_pp5_iter9 <= ap_enable_reg_pp5_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp6_exit_iter0_state80) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_subdone))) begin
            ap_enable_reg_pp6_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state79) & (ap_sig_ioackin_m_axi_FM_DDR_BUFF2_AWREADY == 1'b1))) begin
            ap_enable_reg_pp6_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp6_exit_iter0_state80)) begin
                ap_enable_reg_pp6_iter1 <= (1'b1 ^ ap_condition_pp6_exit_iter0_state80);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp6_iter1 <= ap_enable_reg_pp6_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter2 <= ap_enable_reg_pp6_iter1;
        end else if (((1'b1 == ap_CS_fsm_state79) & (ap_sig_ioackin_m_axi_FM_DDR_BUFF2_AWREADY == 1'b1))) begin
            ap_enable_reg_pp6_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_m_axi_BIAS_ARREADY <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state1)) begin
            if (~((ap_start == 1'b0) | (ap_sig_ioackin_m_axi_BIAS_ARREADY == 1'b0))) begin
                ap_reg_ioackin_m_axi_BIAS_ARREADY <= 1'b0;
            end else if (((ap_start == 1'b1) & (m_axi_BIAS_ARREADY == 1'b1))) begin
                ap_reg_ioackin_m_axi_BIAS_ARREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_m_axi_FM_DDR_BUFF1_ARREADY <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state10)) begin
            if ((ap_sig_ioackin_m_axi_FM_DDR_BUFF1_ARREADY == 1'b1)) begin
                ap_reg_ioackin_m_axi_FM_DDR_BUFF1_ARREADY <= 1'b0;
            end else if ((m_axi_FM_DDR_BUFF1_ARREADY == 1'b1)) begin
                ap_reg_ioackin_m_axi_FM_DDR_BUFF1_ARREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_m_axi_FM_DDR_BUFF2_AWREADY <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state79)) begin
            if ((ap_sig_ioackin_m_axi_FM_DDR_BUFF2_AWREADY == 1'b1)) begin
                ap_reg_ioackin_m_axi_FM_DDR_BUFF2_AWREADY <= 1'b0;
            end else if ((m_axi_FM_DDR_BUFF2_AWREADY == 1'b1)) begin
                ap_reg_ioackin_m_axi_FM_DDR_BUFF2_AWREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_m_axi_FM_DDR_BUFF2_WREADY <= 1'b0;
    end else begin
        if (((ap_enable_reg_pp6_iter2 == 1'b1) & (exitcond10_reg_3286_pp6_iter1_reg == 1'd0))) begin
            if ((1'b0 == ap_block_pp6_stage0_11001)) begin
                ap_reg_ioackin_m_axi_FM_DDR_BUFF2_WREADY <= 1'b0;
            end else if (((m_axi_FM_DDR_BUFF2_WREADY == 1'b1) & (1'b0 == ap_block_pp6_stage0_01001))) begin
                ap_reg_ioackin_m_axi_FM_DDR_BUFF2_WREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_m_axi_WEIGHT_ARREADY <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state20)) begin
            if ((ap_sig_ioackin_m_axi_WEIGHT_ARREADY == 1'b1)) begin
                ap_reg_ioackin_m_axi_WEIGHT_ARREADY <= 1'b0;
            end else if ((m_axi_WEIGHT_ARREADY == 1'b1)) begin
                ap_reg_ioackin_m_axi_WEIGHT_ARREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state44)) begin
        c7_reg_1197 <= 5'd0;
    end else if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (exitcond_flatten13_reg_2987 == 1'd0))) begin
        c7_reg_1197 <= c2_mid2_reg_2991;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        c8_reg_1275 <= 5'd0;
    end else if (((ap_enable_reg_pp5_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (exitcond_flatten15_reg_3102 == 1'd0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        c8_reg_1275 <= c5_mid2_reg_3106;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        c_reg_1086 <= 5'd0;
    end else if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (exitcond_flatten11_reg_2828 == 1'd0))) begin
        c_reg_1086 <= c_mid2_reg_2844;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        chl_out2_reg_1075 <= 3'd0;
    end else if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (exitcond_flatten11_reg_2828 == 1'd0))) begin
        chl_out2_reg_1075 <= chl_out_3_reg_2788;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state44)) begin
        chl_out4_reg_1186 <= 3'd0;
    end else if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (exitcond_flatten13_reg_2987 == 1'd0))) begin
        chl_out4_reg_1186 <= chl_out_reg_2967;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        chl_out5_reg_1264 <= 3'd0;
    end else if (((ap_enable_reg_pp5_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (exitcond_flatten15_reg_3102 == 1'd0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        chl_out5_reg_1264 <= chl_out_2_reg_3082;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        exitcond11_reg_1053 <= 1'd0;
    end else if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (exitcond_flatten11_reg_2828 == 1'd0))) begin
        exitcond11_reg_1053 <= exitcond4_reg_2808;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state44)) begin
        exitcond12_reg_1175 <= 1'd0;
    end else if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (exitcond_flatten13_reg_2987 == 1'd0))) begin
        exitcond12_reg_1175 <= exitcond1_reg_2977;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        exitcond13_reg_1253 <= 1'd0;
    end else if (((ap_enable_reg_pp5_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (exitcond_flatten15_reg_3102 == 1'd0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        exitcond13_reg_1253 <= exitcond_reg_3092;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        exitcond_flatten16_reg_1020 <= 1'd0;
    end else if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (exitcond_flatten11_reg_2828 == 1'd0))) begin
        exitcond_flatten16_reg_1020 <= exitcond_flatten10_reg_2823;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        exitcond_flatten17_reg_1031 <= 1'd0;
    end else if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (exitcond_flatten11_reg_2828 == 1'd0))) begin
        exitcond_flatten17_reg_1031 <= exitcond_flatten9_reg_2818;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        exitcond_flatten18_reg_1042 <= 1'd0;
    end else if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (exitcond_flatten11_reg_2828 == 1'd0))) begin
        exitcond_flatten18_reg_1042 <= exitcond_flatten_reg_2813;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state44)) begin
        exitcond_flatten19_reg_1164 <= 1'd0;
    end else if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (exitcond_flatten13_reg_2987 == 1'd0))) begin
        exitcond_flatten19_reg_1164 <= exitcond_flatten12_reg_2982;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        exitcond_flatten20_reg_1242 <= 1'd0;
    end else if (((ap_enable_reg_pp5_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (exitcond_flatten15_reg_3102 == 1'd0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        exitcond_flatten20_reg_1242 <= exitcond_flatten14_reg_3097;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        indvar2_reg_987 <= 8'd0;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (exitcond8_fu_1493_p2 == 1'd0))) begin
        indvar2_reg_987 <= indvar_next5_fu_1499_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state79) & (ap_sig_ioackin_m_axi_FM_DDR_BUFF2_AWREADY == 1'b1))) begin
        indvar4_reg_1320 <= 11'd0;
    end else if (((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0) & (exitcond10_fu_2599_p2 == 1'd0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        indvar4_reg_1320 <= indvar_next6_fu_2605_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        indvar8_reg_975 <= 11'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond7_reg_2687 == 1'd0))) begin
        indvar8_reg_975 <= indvar_next4_reg_2691;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        indvar_flatten10_reg_1130 <= 16'd0;
    end else if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (exitcond_flatten11_reg_2828 == 1'd0))) begin
        indvar_flatten10_reg_1130 <= indvar_flatten_next1_reg_2803;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        indvar_flatten11_reg_1152 <= 17'd0;
    end else if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (exitcond_flatten11_reg_2828 == 1'd0))) begin
        indvar_flatten11_reg_1152 <= indvar_flatten_next1_1_reg_2930;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state44)) begin
        indvar_flatten12_reg_1208 <= 8'd0;
    end else if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (exitcond_flatten13_reg_2987 == 1'd0))) begin
        indvar_flatten12_reg_1208 <= indvar_flatten_next1_2_reg_2972;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state44)) begin
        indvar_flatten13_reg_1230 <= 13'd0;
    end else if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (exitcond_flatten13_reg_2987 == 1'd0))) begin
        indvar_flatten13_reg_1230 <= indvar_flatten_next1_3_reg_3046;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        indvar_flatten14_reg_1286 <= 7'd0;
    end else if (((ap_enable_reg_pp5_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (exitcond_flatten15_reg_3102 == 1'd0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        indvar_flatten14_reg_1286 <= indvar_flatten_next1_4_reg_3087;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        indvar_flatten15_reg_1308 <= 11'd0;
    end else if (((ap_enable_reg_pp5_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (exitcond_flatten15_reg_3102 == 1'd0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        indvar_flatten15_reg_1308 <= indvar_flatten_next1_5_reg_3186;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        indvar_flatten9_reg_1119 <= 13'd0;
    end else if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (exitcond_flatten11_reg_2828 == 1'd0))) begin
        indvar_flatten9_reg_1119 <= indvar_flatten_next9_reg_2798;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        indvar_flatten_reg_1097 <= 8'd0;
    end else if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (exitcond_flatten11_reg_2828 == 1'd0))) begin
        indvar_flatten_reg_1097 <= indvar_flatten_next_reg_2793;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond9_reg_2678 == 1'd0))) begin
        indvar_reg_963 <= indvar_next_reg_2682;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        indvar_reg_963 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        kc_cast_reg_1064 <= 3'd0;
    end else if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (exitcond_flatten11_reg_2828 == 1'd0))) begin
        kc_cast_reg_1064 <= kc_cast_mid2_reg_2832;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        kr_reg_1141 <= 3'd0;
    end else if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (exitcond_flatten11_reg_2828 == 1'd0))) begin
        kr_reg_1141 <= kr_cast_mid2_v_reg_2747;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state79) & (ap_sig_ioackin_m_axi_FM_DDR_BUFF2_AWREADY == 1'b1))) begin
        phi_mul3_reg_1331 <= 22'd0;
    end else if (((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0) & (exitcond10_fu_2599_p2 == 1'd0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        phi_mul3_reg_1331 <= next_mul3_fu_2631_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        phi_mul_reg_998 <= 16'd0;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (exitcond8_fu_1493_p2 == 1'd0))) begin
        phi_mul_reg_998 <= next_mul_fu_1505_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state79) & (ap_sig_ioackin_m_axi_FM_DDR_BUFF2_AWREADY == 1'b1))) begin
        phi_urem3_reg_1342 <= 11'd0;
    end else if (((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0) & (exitcond10_fu_2599_p2 == 1'd0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        phi_urem3_reg_1342 <= idx_urem3_fu_2623_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        phi_urem_reg_1009 <= 8'd0;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (exitcond8_fu_1493_p2 == 1'd0))) begin
        phi_urem_reg_1009 <= idx_urem_fu_1537_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state44)) begin
        r7_reg_1219 <= 5'd0;
    end else if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (exitcond_flatten13_reg_2987 == 1'd0))) begin
        r7_reg_1219 <= r1_mid2_reg_2945;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        r8_reg_1297 <= 5'd0;
    end else if (((ap_enable_reg_pp5_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (exitcond_flatten15_reg_3102 == 1'd0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        r8_reg_1297 <= r4_mid2_reg_3062;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        r_reg_1108 <= 5'd0;
    end else if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (exitcond_flatten11_reg_2828 == 1'd0))) begin
        r_reg_1108 <= r_mid2_reg_2837;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (indvar_reg_963 == 3'd0))) begin
        B_CONV1_0 <= m_axi_BIAS_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (indvar_reg_963 == 3'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        B_CONV1_1 <= m_axi_BIAS_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (indvar_reg_963 == 3'd2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        B_CONV1_2 <= m_axi_BIAS_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (indvar_reg_963 == 3'd3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        B_CONV1_3 <= m_axi_BIAS_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (indvar_reg_963 == 3'd4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        B_CONV1_4 <= m_axi_BIAS_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & ((indvar_reg_963 == 3'd5) | ((indvar_reg_963 == 3'd6) | (indvar_reg_963 == 3'd7))))) begin
        B_CONV1_5 <= m_axi_BIAS_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond7_reg_2687 == 1'd0))) begin
        FM_DDR_BUFF1_read_reg_2696 <= m_axi_FM_DDR_BUFF1_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage2_11001) & (1'b1 == ap_CS_fsm_pp4_stage2))) begin
        UnifiedRetVal_i_reg_3031 <= UnifiedRetVal_i_fu_2227_p3;
        tmp_70_reg_3026 <= tmp_70_fu_2129_p8;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (exitcond8_reg_2701 == 1'd0))) begin
        WEIGHT_read_reg_2731 <= m_axi_WEIGHT_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter0 == 1'b1))) begin
        c2_mid2_reg_2991 <= c2_mid2_fu_2076_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        c2_mid_reg_2935 <= c2_mid_fu_1990_p3;
        c_4_reg_2952 <= c_4_fu_2018_p2;
        chl_out3_mid2_reg_2957 <= chl_out3_mid2_fu_2030_p3;
        exitcond1_mid_reg_2940 <= exitcond1_mid_fu_2004_p2;
        exitcond_flatten13_reg_2987 <= exitcond_flatten13_fu_2070_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage1_11001) & (1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter0 == 1'b1))) begin
        c5_mid2_reg_3106 <= c5_mid2_fu_2392_p3;
        indvar_flatten_next1_5_reg_3186 <= indvar_flatten_next1_5_fu_2520_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        c5_mid_reg_3051 <= c5_mid_fu_2297_p3;
        chl_out6_mid2_reg_3070 <= chl_out6_mid2_fu_2331_p3;
        chl_out6_mid2_reg_3070_pp5_iter10_reg <= chl_out6_mid2_reg_3070_pp5_iter9_reg;
        chl_out6_mid2_reg_3070_pp5_iter1_reg <= chl_out6_mid2_reg_3070;
        chl_out6_mid2_reg_3070_pp5_iter2_reg <= chl_out6_mid2_reg_3070_pp5_iter1_reg;
        chl_out6_mid2_reg_3070_pp5_iter3_reg <= chl_out6_mid2_reg_3070_pp5_iter2_reg;
        chl_out6_mid2_reg_3070_pp5_iter4_reg <= chl_out6_mid2_reg_3070_pp5_iter3_reg;
        chl_out6_mid2_reg_3070_pp5_iter5_reg <= chl_out6_mid2_reg_3070_pp5_iter4_reg;
        chl_out6_mid2_reg_3070_pp5_iter6_reg <= chl_out6_mid2_reg_3070_pp5_iter5_reg;
        chl_out6_mid2_reg_3070_pp5_iter7_reg <= chl_out6_mid2_reg_3070_pp5_iter6_reg;
        chl_out6_mid2_reg_3070_pp5_iter8_reg <= chl_out6_mid2_reg_3070_pp5_iter7_reg;
        chl_out6_mid2_reg_3070_pp5_iter9_reg <= chl_out6_mid2_reg_3070_pp5_iter8_reg;
        exitcond_flatten15_reg_3102 <= exitcond_flatten15_fu_2381_p2;
        exitcond_mid_reg_3057 <= exitcond_mid_fu_2311_p2;
        r4_mid2_reg_3062_pp5_iter1_reg <= r4_mid2_reg_3062;
        r4_mid2_reg_3062_pp5_iter2_reg <= r4_mid2_reg_3062_pp5_iter1_reg;
        tmp_120_reg_3206[10 : 1] <= tmp_120_fu_2576_p2[10 : 1];
        tmp_120_reg_3206_pp5_iter4_reg[10 : 1] <= tmp_120_reg_3206[10 : 1];
        tmp_84_reg_3076 <= {{r4_mid2_fu_2317_p3[4:1]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage1_11001) & (1'b1 == ap_CS_fsm_pp3_stage1) & (ap_enable_reg_pp3_iter0 == 1'b1))) begin
        c_mid2_reg_2844 <= c_mid2_fu_1820_p3;
        kc_cast_mid2_reg_2832 <= kc_cast_mid2_fu_1794_p3;
        r_mid2_reg_2837 <= r_mid2_fu_1809_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        c_mid3_reg_2771 <= c_mid3_fu_1668_p3;
        chl_out2_mid2_reg_2782 <= chl_out2_mid2_fu_1700_p3;
        chl_out2_mid2_reg_2782_pp3_iter1_reg <= chl_out2_mid2_reg_2782;
        exitcond4_mid5_reg_2777 <= exitcond4_mid5_fu_1682_p2;
        exitcond_flatten11_reg_2828 <= exitcond_flatten11_fu_1780_p2;
        exitcond_flatten13_m_reg_2755 <= exitcond_flatten13_m_fu_1612_p2;
        exitcond_flatten_mid_7_reg_2766 <= exitcond_flatten_mid_7_fu_1650_p2;
        kc_mid_reg_2741 <= kc_mid_fu_1578_p3;
        r_mid_reg_2760 <= r_mid_fu_1624_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        chl_out_2_reg_3082 <= chl_out_2_fu_2349_p2;
        exitcond_flatten14_reg_3097 <= exitcond_flatten14_fu_2375_p2;
        exitcond_reg_3092 <= exitcond_fu_2369_p2;
        indvar_flatten_next1_4_reg_3087 <= indvar_flatten_next1_4_fu_2361_p3;
        r4_mid2_reg_3062 <= r4_mid2_fu_2317_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1))) begin
        chl_out_3_reg_2788 <= chl_out_3_fu_1708_p2;
        exitcond4_reg_2808 <= exitcond4_fu_1756_p2;
        exitcond_flatten10_reg_2823 <= exitcond_flatten10_fu_1774_p2;
        exitcond_flatten9_reg_2818 <= exitcond_flatten9_fu_1768_p2;
        exitcond_flatten_reg_2813 <= exitcond_flatten_fu_1762_p2;
        indvar_flatten_next1_reg_2803 <= indvar_flatten_next1_fu_1748_p3;
        indvar_flatten_next9_reg_2798 <= indvar_flatten_next9_fu_1734_p3;
        indvar_flatten_next_reg_2793 <= indvar_flatten_next_fu_1720_p3;
        kr_cast_mid2_v_reg_2747 <= kr_cast_mid2_v_fu_1586_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter0 == 1'b1))) begin
        chl_out_reg_2967 <= chl_out_fu_2038_p2;
        exitcond1_reg_2977 <= exitcond1_fu_2058_p2;
        exitcond_flatten12_reg_2982 <= exitcond_flatten12_fu_2064_p2;
        indvar_flatten_next1_2_reg_2972 <= indvar_flatten_next1_2_fu_2050_p3;
        r1_mid2_reg_2945 <= r1_mid2_fu_2010_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage5_11001) & (1'b1 == ap_CS_fsm_pp3_stage5))) begin
        conv1_buff_0_addr_1_reg_2895 <= tmp_110_cast_fu_1951_p1;
        conv1_buff_1_addr_1_reg_2900 <= tmp_110_cast_fu_1951_p1;
        conv1_buff_2_addr_1_reg_2905 <= tmp_110_cast_fu_1951_p1;
        conv1_buff_3_addr_1_reg_2910 <= tmp_110_cast_fu_1951_p1;
        conv1_buff_4_addr_1_reg_2915 <= tmp_110_cast_fu_1951_p1;
        conv1_buff_5_addr_1_reg_2920 <= tmp_110_cast_fu_1951_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
        conv1_buff_0_addr_reg_2996 <= tmp_115_cast_fu_2119_p1;
        conv1_buff_1_addr_reg_3001 <= tmp_115_cast_fu_2119_p1;
        conv1_buff_2_addr_reg_3006 <= tmp_115_cast_fu_2119_p1;
        conv1_buff_3_addr_reg_3011 <= tmp_115_cast_fu_2119_p1;
        conv1_buff_4_addr_reg_3016 <= tmp_115_cast_fu_2119_p1;
        conv1_buff_5_addr_reg_3021 <= tmp_115_cast_fu_2119_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp6_stage0) & (exitcond10_fu_2599_p2 == 1'd0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        div54_t_reg_3335 <= {{phi_mul3_reg_1331[21:19]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (exitcond8_fu_1493_p2 == 1'd0))) begin
        div_t_reg_2722 <= {{phi_mul_reg_998[15:13]}};
        tmp_reg_2715 <= tmp_fu_1511_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        div_t_reg_2722_pp2_iter1_reg <= div_t_reg_2722;
        exitcond8_reg_2701 <= exitcond8_fu_1493_p2;
        exitcond8_reg_2701_pp2_iter1_reg <= exitcond8_reg_2701;
        tmp_reg_2715_pp2_iter1_reg <= tmp_reg_2715;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        exitcond10_reg_3286 <= exitcond10_fu_2599_p2;
        exitcond10_reg_3286_pp6_iter1_reg <= exitcond10_reg_3286;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        exitcond7_reg_2687 <= exitcond7_fu_1476_p2;
        exitcond7_reg_2687_pp1_iter1_reg <= exitcond7_reg_2687;
        indvar8_reg_975_pp1_iter1_reg <= indvar8_reg_975;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exitcond9_reg_2678 <= exitcond9_fu_1428_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage7_11001) & (1'b1 == ap_CS_fsm_pp3_stage7) & (ap_enable_reg_pp3_iter0 == 1'b1))) begin
        indvar_flatten_next1_1_reg_2930 <= indvar_flatten_next1_1_fu_1978_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage8) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage8_11001))) begin
        indvar_flatten_next1_3_reg_3046 <= indvar_flatten_next1_3_fu_2285_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        indvar_next4_reg_2691 <= indvar_next4_fu_1482_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_next_reg_2682 <= indvar_next_fu_1434_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage2_11001) & (1'b1 == ap_CS_fsm_pp3_stage2) & (ap_enable_reg_pp3_iter0 == 1'b1))) begin
        pic_in_load_reg_2885 <= pic_in_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp5_stage1_11001) & (ap_enable_reg_pp5_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage1)) | ((1'b0 == ap_block_pp3_stage6_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage6)))) begin
        reg_1405 <= grp_fu_1361_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp4_stage7_11001) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage7)) | ((1'b0 == ap_block_pp3_stage3_11001) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage3)) | ((1'b0 == ap_block_pp5_stage1_11001) & (ap_enable_reg_pp5_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage1)))) begin
        reg_1416 <= grp_fu_1353_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage1_11001) & (1'b1 == ap_CS_fsm_pp5_stage1))) begin
        tmp_125_reg_3181 <= tmp_125_fu_2514_p2;
        tmp_125_reg_3181_pp5_iter10_reg <= tmp_125_reg_3181_pp5_iter9_reg;
        tmp_125_reg_3181_pp5_iter1_reg <= tmp_125_reg_3181;
        tmp_125_reg_3181_pp5_iter2_reg <= tmp_125_reg_3181_pp5_iter1_reg;
        tmp_125_reg_3181_pp5_iter3_reg <= tmp_125_reg_3181_pp5_iter2_reg;
        tmp_125_reg_3181_pp5_iter4_reg <= tmp_125_reg_3181_pp5_iter3_reg;
        tmp_125_reg_3181_pp5_iter5_reg <= tmp_125_reg_3181_pp5_iter4_reg;
        tmp_125_reg_3181_pp5_iter6_reg <= tmp_125_reg_3181_pp5_iter5_reg;
        tmp_125_reg_3181_pp5_iter7_reg <= tmp_125_reg_3181_pp5_iter6_reg;
        tmp_125_reg_3181_pp5_iter8_reg <= tmp_125_reg_3181_pp5_iter7_reg;
        tmp_125_reg_3181_pp5_iter9_reg <= tmp_125_reg_3181_pp5_iter8_reg;
        tmp_44_cast_reg_3111[4 : 0] <= tmp_44_cast_fu_2398_p1[4 : 0];
        tmp_44_cast_reg_3111_pp5_iter1_reg[4 : 0] <= tmp_44_cast_reg_3111[4 : 0];
        tmp_44_cast_reg_3111_pp5_iter2_reg[4 : 0] <= tmp_44_cast_reg_3111_pp5_iter1_reg[4 : 0];
        tmp_47_cast_reg_3146[4 : 1] <= tmp_47_cast_fu_2452_p1[4 : 1];
        tmp_47_cast_reg_3146_pp5_iter1_reg[4 : 1] <= tmp_47_cast_reg_3146[4 : 1];
        tmp_47_cast_reg_3146_pp5_iter2_reg[4 : 1] <= tmp_47_cast_reg_3146_pp5_iter1_reg[4 : 1];
        tmp_52_reg_3281 <= grp_fu_1357_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage8) & (1'b0 == ap_block_pp4_stage8_11001))) begin
        tmp_43_reg_3036 <= tmp_43_fu_2277_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp5_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        tmp_51_reg_3276 <= grp_fu_1353_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage2_11001) & (1'b1 == ap_CS_fsm_pp3_stage2))) begin
        tmp_67_reg_2890 <= tmp_67_fu_1897_p8;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage6_11001) & (1'b1 == ap_CS_fsm_pp3_stage6))) begin
        tmp_68_reg_2925 <= tmp_68_fu_1961_p8;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp6_stage0) & (exitcond10_reg_3286 == 1'd0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        tmp_76_reg_3340 <= tmp_76_fu_2661_p8;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp5_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        tmp_79_reg_3191 <= grp_fu_1371_p8;
        tmp_80_reg_3196 <= grp_fu_1388_p8;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage1_11001) & (ap_enable_reg_pp5_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage1))) begin
        tmp_81_reg_3236 <= grp_fu_1388_p8;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage1_11001) & (1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter5 == 1'b1))) begin
        tmp_82_reg_3271 <= grp_fu_1371_p8;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        BIAS_blk_n_AR = m_axi_BIAS_ARREADY;
    end else begin
        BIAS_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        BIAS_blk_n_R = m_axi_BIAS_RVALID;
    end else begin
        BIAS_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        FM_DDR_BUFF1_blk_n_AR = m_axi_FM_DDR_BUFF1_ARREADY;
    end else begin
        FM_DDR_BUFF1_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond7_reg_2687 == 1'd0))) begin
        FM_DDR_BUFF1_blk_n_R = m_axi_FM_DDR_BUFF1_RVALID;
    end else begin
        FM_DDR_BUFF1_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state79)) begin
        FM_DDR_BUFF2_blk_n_AW = m_axi_FM_DDR_BUFF2_AWREADY;
    end else begin
        FM_DDR_BUFF2_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state87)) begin
        FM_DDR_BUFF2_blk_n_B = m_axi_FM_DDR_BUFF2_BVALID;
    end else begin
        FM_DDR_BUFF2_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp6_stage0) & (ap_enable_reg_pp6_iter2 == 1'b1) & (exitcond10_reg_3286_pp6_iter1_reg == 1'd0))) begin
        FM_DDR_BUFF2_blk_n_W = m_axi_FM_DDR_BUFF2_WREADY;
    end else begin
        FM_DDR_BUFF2_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        WEIGHT_blk_n_AR = m_axi_WEIGHT_ARREADY;
    end else begin
        WEIGHT_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (exitcond8_reg_2701 == 1'd0))) begin
        WEIGHT_blk_n_R = m_axi_WEIGHT_RVALID;
    end else begin
        WEIGHT_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage1) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage1))) begin
        W_CONV1_0_address0 = tmp_106_cast_fu_1887_p1;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        W_CONV1_0_address0 = tmp_88_fu_1562_p1;
    end else begin
        W_CONV1_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1)) | ((1'b0 == ap_block_pp3_stage1_11001) & (1'b1 == ap_CS_fsm_pp3_stage1) & (ap_enable_reg_pp3_iter0 == 1'b1)))) begin
        W_CONV1_0_ce0 = 1'b1;
    end else begin
        W_CONV1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1) & (div_t_reg_2722_pp2_iter1_reg == 3'd0))) begin
        W_CONV1_0_we0 = 1'b1;
    end else begin
        W_CONV1_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage1) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage1))) begin
        W_CONV1_1_address0 = tmp_106_cast_fu_1887_p1;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        W_CONV1_1_address0 = tmp_88_fu_1562_p1;
    end else begin
        W_CONV1_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1)) | ((1'b0 == ap_block_pp3_stage1_11001) & (1'b1 == ap_CS_fsm_pp3_stage1) & (ap_enable_reg_pp3_iter0 == 1'b1)))) begin
        W_CONV1_1_ce0 = 1'b1;
    end else begin
        W_CONV1_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((div_t_reg_2722_pp2_iter1_reg == 3'd1) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        W_CONV1_1_we0 = 1'b1;
    end else begin
        W_CONV1_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage1) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage1))) begin
        W_CONV1_2_address0 = tmp_106_cast_fu_1887_p1;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        W_CONV1_2_address0 = tmp_88_fu_1562_p1;
    end else begin
        W_CONV1_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1)) | ((1'b0 == ap_block_pp3_stage1_11001) & (1'b1 == ap_CS_fsm_pp3_stage1) & (ap_enable_reg_pp3_iter0 == 1'b1)))) begin
        W_CONV1_2_ce0 = 1'b1;
    end else begin
        W_CONV1_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((div_t_reg_2722_pp2_iter1_reg == 3'd2) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        W_CONV1_2_we0 = 1'b1;
    end else begin
        W_CONV1_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage1) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage1))) begin
        W_CONV1_3_address0 = tmp_106_cast_fu_1887_p1;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        W_CONV1_3_address0 = tmp_88_fu_1562_p1;
    end else begin
        W_CONV1_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1)) | ((1'b0 == ap_block_pp3_stage1_11001) & (1'b1 == ap_CS_fsm_pp3_stage1) & (ap_enable_reg_pp3_iter0 == 1'b1)))) begin
        W_CONV1_3_ce0 = 1'b1;
    end else begin
        W_CONV1_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((div_t_reg_2722_pp2_iter1_reg == 3'd3) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        W_CONV1_3_we0 = 1'b1;
    end else begin
        W_CONV1_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage1) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage1))) begin
        W_CONV1_4_address0 = tmp_106_cast_fu_1887_p1;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        W_CONV1_4_address0 = tmp_88_fu_1562_p1;
    end else begin
        W_CONV1_4_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1)) | ((1'b0 == ap_block_pp3_stage1_11001) & (1'b1 == ap_CS_fsm_pp3_stage1) & (ap_enable_reg_pp3_iter0 == 1'b1)))) begin
        W_CONV1_4_ce0 = 1'b1;
    end else begin
        W_CONV1_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((div_t_reg_2722_pp2_iter1_reg == 3'd4) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        W_CONV1_4_we0 = 1'b1;
    end else begin
        W_CONV1_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage1) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage1))) begin
        W_CONV1_5_address0 = tmp_106_cast_fu_1887_p1;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        W_CONV1_5_address0 = tmp_88_fu_1562_p1;
    end else begin
        W_CONV1_5_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1)) | ((1'b0 == ap_block_pp3_stage1_11001) & (1'b1 == ap_CS_fsm_pp3_stage1) & (ap_enable_reg_pp3_iter0 == 1'b1)))) begin
        W_CONV1_5_ce0 = 1'b1;
    end else begin
        W_CONV1_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1) & ((div_t_reg_2722_pp2_iter1_reg == 3'd5) | ((div_t_reg_2722_pp2_iter1_reg == 3'd6) | (div_t_reg_2722_pp2_iter1_reg == 3'd7))))) begin
        W_CONV1_5_we0 = 1'b1;
    end else begin
        W_CONV1_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond9_fu_1428_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state8 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state8 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond7_fu_1476_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state17 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state17 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond8_fu_1493_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state27 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state27 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond10_fu_2599_p2 == 1'd1)) begin
        ap_condition_pp6_exit_iter0_state80 = 1'b1;
    end else begin
        ap_condition_pp6_exit_iter0_state80 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state87) & (m_axi_FM_DDR_BUFF2_BVALID == 1'b1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter0 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter2 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter0 == 1'b0) & (ap_enable_reg_pp4_iter1 == 1'b0))) begin
        ap_idle_pp4 = 1'b1;
    end else begin
        ap_idle_pp4 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter3 == 1'b0) & (ap_enable_reg_pp5_iter10 == 1'b0) & (ap_enable_reg_pp5_iter11 == 1'b0) & (ap_enable_reg_pp5_iter9 == 1'b0) & (ap_enable_reg_pp5_iter8 == 1'b0) & (ap_enable_reg_pp5_iter7 == 1'b0) & (ap_enable_reg_pp5_iter4 == 1'b0) & (ap_enable_reg_pp5_iter2 == 1'b0) & (ap_enable_reg_pp5_iter6 == 1'b0) & (ap_enable_reg_pp5_iter5 == 1'b0) & (ap_enable_reg_pp5_iter1 == 1'b0) & (ap_enable_reg_pp5_iter0 == 1'b0))) begin
        ap_idle_pp5 = 1'b1;
    end else begin
        ap_idle_pp5 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter2 == 1'b0) & (ap_enable_reg_pp6_iter1 == 1'b0) & (ap_enable_reg_pp6_iter0 == 1'b0))) begin
        ap_idle_pp6 = 1'b1;
    end else begin
        ap_idle_pp6 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b0 == ap_block_pp4_stage0) & (exitcond_flatten13_reg_2987 == 1'd0))) begin
        ap_phi_mux_c7_phi_fu_1201_p4 = c2_mid2_reg_2991;
    end else begin
        ap_phi_mux_c7_phi_fu_1201_p4 = c7_reg_1197;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0) & (exitcond_flatten15_reg_3102 == 1'd0))) begin
        ap_phi_mux_c8_phi_fu_1279_p4 = c5_mid2_reg_3106;
    end else begin
        ap_phi_mux_c8_phi_fu_1279_p4 = c8_reg_1275;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0) & (exitcond_flatten11_reg_2828 == 1'd0))) begin
        ap_phi_mux_c_phi_fu_1090_p4 = c_mid2_reg_2844;
    end else begin
        ap_phi_mux_c_phi_fu_1090_p4 = c_reg_1086;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0) & (exitcond_flatten11_reg_2828 == 1'd0))) begin
        ap_phi_mux_chl_out2_phi_fu_1079_p4 = chl_out_3_reg_2788;
    end else begin
        ap_phi_mux_chl_out2_phi_fu_1079_p4 = chl_out2_reg_1075;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b0 == ap_block_pp4_stage0) & (exitcond_flatten13_reg_2987 == 1'd0))) begin
        ap_phi_mux_chl_out4_phi_fu_1190_p4 = chl_out_reg_2967;
    end else begin
        ap_phi_mux_chl_out4_phi_fu_1190_p4 = chl_out4_reg_1186;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0) & (exitcond_flatten15_reg_3102 == 1'd0))) begin
        ap_phi_mux_chl_out5_phi_fu_1268_p4 = chl_out_2_reg_3082;
    end else begin
        ap_phi_mux_chl_out5_phi_fu_1268_p4 = chl_out5_reg_1264;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0) & (exitcond_flatten11_reg_2828 == 1'd0))) begin
        ap_phi_mux_exitcond11_phi_fu_1057_p4 = exitcond4_reg_2808;
    end else begin
        ap_phi_mux_exitcond11_phi_fu_1057_p4 = exitcond11_reg_1053;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b0 == ap_block_pp4_stage0) & (exitcond_flatten13_reg_2987 == 1'd0))) begin
        ap_phi_mux_exitcond12_phi_fu_1179_p4 = exitcond1_reg_2977;
    end else begin
        ap_phi_mux_exitcond12_phi_fu_1179_p4 = exitcond12_reg_1175;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0) & (exitcond_flatten15_reg_3102 == 1'd0))) begin
        ap_phi_mux_exitcond13_phi_fu_1257_p4 = exitcond_reg_3092;
    end else begin
        ap_phi_mux_exitcond13_phi_fu_1257_p4 = exitcond13_reg_1253;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0) & (exitcond_flatten11_reg_2828 == 1'd0))) begin
        ap_phi_mux_exitcond_flatten16_phi_fu_1024_p4 = exitcond_flatten10_reg_2823;
    end else begin
        ap_phi_mux_exitcond_flatten16_phi_fu_1024_p4 = exitcond_flatten16_reg_1020;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0) & (exitcond_flatten11_reg_2828 == 1'd0))) begin
        ap_phi_mux_exitcond_flatten17_phi_fu_1035_p4 = exitcond_flatten9_reg_2818;
    end else begin
        ap_phi_mux_exitcond_flatten17_phi_fu_1035_p4 = exitcond_flatten17_reg_1031;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0) & (exitcond_flatten11_reg_2828 == 1'd0))) begin
        ap_phi_mux_exitcond_flatten18_phi_fu_1046_p4 = exitcond_flatten_reg_2813;
    end else begin
        ap_phi_mux_exitcond_flatten18_phi_fu_1046_p4 = exitcond_flatten18_reg_1042;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b0 == ap_block_pp4_stage0) & (exitcond_flatten13_reg_2987 == 1'd0))) begin
        ap_phi_mux_exitcond_flatten19_phi_fu_1168_p4 = exitcond_flatten12_reg_2982;
    end else begin
        ap_phi_mux_exitcond_flatten19_phi_fu_1168_p4 = exitcond_flatten19_reg_1164;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0) & (exitcond_flatten15_reg_3102 == 1'd0))) begin
        ap_phi_mux_exitcond_flatten20_phi_fu_1246_p4 = exitcond_flatten14_reg_3097;
    end else begin
        ap_phi_mux_exitcond_flatten20_phi_fu_1246_p4 = exitcond_flatten20_reg_1242;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond7_reg_2687 == 1'd0))) begin
        ap_phi_mux_indvar8_phi_fu_979_p4 = indvar_next4_reg_2691;
    end else begin
        ap_phi_mux_indvar8_phi_fu_979_p4 = indvar8_reg_975;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0) & (exitcond_flatten11_reg_2828 == 1'd0))) begin
        ap_phi_mux_indvar_flatten10_phi_fu_1134_p4 = indvar_flatten_next1_reg_2803;
    end else begin
        ap_phi_mux_indvar_flatten10_phi_fu_1134_p4 = indvar_flatten10_reg_1130;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0) & (exitcond_flatten11_reg_2828 == 1'd0))) begin
        ap_phi_mux_indvar_flatten11_phi_fu_1156_p4 = indvar_flatten_next1_1_reg_2930;
    end else begin
        ap_phi_mux_indvar_flatten11_phi_fu_1156_p4 = indvar_flatten11_reg_1152;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b0 == ap_block_pp4_stage0) & (exitcond_flatten13_reg_2987 == 1'd0))) begin
        ap_phi_mux_indvar_flatten12_phi_fu_1212_p4 = indvar_flatten_next1_2_reg_2972;
    end else begin
        ap_phi_mux_indvar_flatten12_phi_fu_1212_p4 = indvar_flatten12_reg_1208;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b0 == ap_block_pp4_stage0) & (exitcond_flatten13_reg_2987 == 1'd0))) begin
        ap_phi_mux_indvar_flatten13_phi_fu_1234_p4 = indvar_flatten_next1_3_reg_3046;
    end else begin
        ap_phi_mux_indvar_flatten13_phi_fu_1234_p4 = indvar_flatten13_reg_1230;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0) & (exitcond_flatten15_reg_3102 == 1'd0))) begin
        ap_phi_mux_indvar_flatten14_phi_fu_1290_p4 = indvar_flatten_next1_4_reg_3087;
    end else begin
        ap_phi_mux_indvar_flatten14_phi_fu_1290_p4 = indvar_flatten14_reg_1286;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0) & (exitcond_flatten15_reg_3102 == 1'd0))) begin
        ap_phi_mux_indvar_flatten15_phi_fu_1312_p4 = indvar_flatten_next1_5_reg_3186;
    end else begin
        ap_phi_mux_indvar_flatten15_phi_fu_1312_p4 = indvar_flatten15_reg_1308;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0) & (exitcond_flatten11_reg_2828 == 1'd0))) begin
        ap_phi_mux_indvar_flatten9_phi_fu_1123_p4 = indvar_flatten_next9_reg_2798;
    end else begin
        ap_phi_mux_indvar_flatten9_phi_fu_1123_p4 = indvar_flatten9_reg_1119;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0) & (exitcond_flatten11_reg_2828 == 1'd0))) begin
        ap_phi_mux_indvar_flatten_phi_fu_1101_p4 = indvar_flatten_next_reg_2793;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_1101_p4 = indvar_flatten_reg_1097;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond9_reg_2678 == 1'd0))) begin
        ap_phi_mux_indvar_phi_fu_967_p4 = indvar_next_reg_2682;
    end else begin
        ap_phi_mux_indvar_phi_fu_967_p4 = indvar_reg_963;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0) & (exitcond_flatten11_reg_2828 == 1'd0))) begin
        ap_phi_mux_kc_cast_phi_fu_1068_p4 = kc_cast_mid2_reg_2832;
    end else begin
        ap_phi_mux_kc_cast_phi_fu_1068_p4 = kc_cast_reg_1064;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0) & (exitcond_flatten11_reg_2828 == 1'd0))) begin
        ap_phi_mux_kr_phi_fu_1145_p4 = kr_cast_mid2_v_reg_2747;
    end else begin
        ap_phi_mux_kr_phi_fu_1145_p4 = kr_reg_1141;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b0 == ap_block_pp4_stage0) & (exitcond_flatten13_reg_2987 == 1'd0))) begin
        ap_phi_mux_r7_phi_fu_1223_p4 = r1_mid2_reg_2945;
    end else begin
        ap_phi_mux_r7_phi_fu_1223_p4 = r7_reg_1219;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0) & (exitcond_flatten15_reg_3102 == 1'd0))) begin
        ap_phi_mux_r8_phi_fu_1301_p4 = r4_mid2_reg_3062;
    end else begin
        ap_phi_mux_r8_phi_fu_1301_p4 = r8_reg_1297;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0) & (exitcond_flatten11_reg_2828 == 1'd0))) begin
        ap_phi_mux_r_phi_fu_1112_p4 = r_mid2_reg_2837;
    end else begin
        ap_phi_mux_r_phi_fu_1112_p4 = r_reg_1108;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state87) & (m_axi_FM_DDR_BUFF2_BVALID == 1'b1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_m_axi_BIAS_ARREADY == 1'b0)) begin
        ap_sig_ioackin_m_axi_BIAS_ARREADY = m_axi_BIAS_ARREADY;
    end else begin
        ap_sig_ioackin_m_axi_BIAS_ARREADY = 1'b1;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_m_axi_FM_DDR_BUFF1_ARREADY == 1'b0)) begin
        ap_sig_ioackin_m_axi_FM_DDR_BUFF1_ARREADY = m_axi_FM_DDR_BUFF1_ARREADY;
    end else begin
        ap_sig_ioackin_m_axi_FM_DDR_BUFF1_ARREADY = 1'b1;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_m_axi_FM_DDR_BUFF2_AWREADY == 1'b0)) begin
        ap_sig_ioackin_m_axi_FM_DDR_BUFF2_AWREADY = m_axi_FM_DDR_BUFF2_AWREADY;
    end else begin
        ap_sig_ioackin_m_axi_FM_DDR_BUFF2_AWREADY = 1'b1;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_m_axi_FM_DDR_BUFF2_WREADY == 1'b0)) begin
        ap_sig_ioackin_m_axi_FM_DDR_BUFF2_WREADY = m_axi_FM_DDR_BUFF2_WREADY;
    end else begin
        ap_sig_ioackin_m_axi_FM_DDR_BUFF2_WREADY = 1'b1;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_m_axi_WEIGHT_ARREADY == 1'b0)) begin
        ap_sig_ioackin_m_axi_WEIGHT_ARREADY = m_axi_WEIGHT_ARREADY;
    end else begin
        ap_sig_ioackin_m_axi_WEIGHT_ARREADY = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0))) begin
        conv1_buff_0_address0 = tmp_127_cast_fu_2566_p1;
    end else if (((1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b0 == ap_block_pp5_stage1))) begin
        conv1_buff_0_address0 = tmp_123_cast_fu_2462_p1;
    end else if (((1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b0 == ap_block_pp4_stage0))) begin
        conv1_buff_0_address0 = conv1_buff_0_addr_reg_2996;
    end else if (((1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage1))) begin
        conv1_buff_0_address0 = tmp_115_cast_fu_2119_p1;
    end else if (((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage4) & (1'b0 == ap_block_pp3_stage4))) begin
        conv1_buff_0_address0 = conv1_buff_0_addr_1_reg_2895;
    end else if (((1'b1 == ap_CS_fsm_pp3_stage5) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage5))) begin
        conv1_buff_0_address0 = tmp_110_cast_fu_1951_p1;
    end else begin
        conv1_buff_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0))) begin
        conv1_buff_0_address1 = tmp_128_cast_fu_2581_p1;
    end else if (((1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b0 == ap_block_pp5_stage1))) begin
        conv1_buff_0_address1 = tmp_122_cast_fu_2436_p1;
    end else begin
        conv1_buff_0_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1)) | ((ap_enable_reg_pp5_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001)) | ((1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter0 == 1'b1)) | ((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage4) & (1'b0 == ap_block_pp3_stage4_11001)) | ((1'b0 == ap_block_pp5_stage1_11001) & (1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter0 == 1'b1)) | ((1'b0 == ap_block_pp3_stage5_11001) & (1'b1 == ap_CS_fsm_pp3_stage5) & (ap_enable_reg_pp3_iter0 == 1'b1)))) begin
        conv1_buff_0_ce0 = 1'b1;
    end else begin
        conv1_buff_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp5_stage1_11001) & (1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter0 == 1'b1)) | ((ap_enable_reg_pp5_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001)))) begin
        conv1_buff_0_ce1 = 1'b1;
    end else begin
        conv1_buff_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b0 == ap_block_pp4_stage0))) begin
        conv1_buff_0_d0 = tmp_43_reg_3036;
    end else if (((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage4) & (1'b0 == ap_block_pp3_stage4))) begin
        conv1_buff_0_d0 = reg_1416;
    end else begin
        conv1_buff_0_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (chl_out3_mid2_reg_2957 == 3'd0)) | ((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage4) & (1'b0 == ap_block_pp3_stage4_11001) & (chl_out2_mid2_reg_2782_pp3_iter1_reg == 3'd0)))) begin
        conv1_buff_0_we0 = 1'b1;
    end else begin
        conv1_buff_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0))) begin
        conv1_buff_1_address0 = tmp_127_cast_fu_2566_p1;
    end else if (((1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b0 == ap_block_pp5_stage1))) begin
        conv1_buff_1_address0 = tmp_123_cast_fu_2462_p1;
    end else if (((1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b0 == ap_block_pp4_stage0))) begin
        conv1_buff_1_address0 = conv1_buff_1_addr_reg_3001;
    end else if (((1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage1))) begin
        conv1_buff_1_address0 = tmp_115_cast_fu_2119_p1;
    end else if (((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage4) & (1'b0 == ap_block_pp3_stage4))) begin
        conv1_buff_1_address0 = conv1_buff_1_addr_1_reg_2900;
    end else if (((1'b1 == ap_CS_fsm_pp3_stage5) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage5))) begin
        conv1_buff_1_address0 = tmp_110_cast_fu_1951_p1;
    end else begin
        conv1_buff_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0))) begin
        conv1_buff_1_address1 = tmp_128_cast_fu_2581_p1;
    end else if (((1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b0 == ap_block_pp5_stage1))) begin
        conv1_buff_1_address1 = tmp_122_cast_fu_2436_p1;
    end else begin
        conv1_buff_1_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1)) | ((ap_enable_reg_pp5_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001)) | ((1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter0 == 1'b1)) | ((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage4) & (1'b0 == ap_block_pp3_stage4_11001)) | ((1'b0 == ap_block_pp5_stage1_11001) & (1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter0 == 1'b1)) | ((1'b0 == ap_block_pp3_stage5_11001) & (1'b1 == ap_CS_fsm_pp3_stage5) & (ap_enable_reg_pp3_iter0 == 1'b1)))) begin
        conv1_buff_1_ce0 = 1'b1;
    end else begin
        conv1_buff_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp5_stage1_11001) & (1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter0 == 1'b1)) | ((ap_enable_reg_pp5_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001)))) begin
        conv1_buff_1_ce1 = 1'b1;
    end else begin
        conv1_buff_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b0 == ap_block_pp4_stage0))) begin
        conv1_buff_1_d0 = tmp_43_reg_3036;
    end else if (((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage4) & (1'b0 == ap_block_pp3_stage4))) begin
        conv1_buff_1_d0 = reg_1416;
    end else begin
        conv1_buff_1_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((chl_out3_mid2_reg_2957 == 3'd1) & (1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1)) | ((chl_out2_mid2_reg_2782_pp3_iter1_reg == 3'd1) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage4) & (1'b0 == ap_block_pp3_stage4_11001)))) begin
        conv1_buff_1_we0 = 1'b1;
    end else begin
        conv1_buff_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0))) begin
        conv1_buff_2_address0 = tmp_127_cast_fu_2566_p1;
    end else if (((1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b0 == ap_block_pp5_stage1))) begin
        conv1_buff_2_address0 = tmp_123_cast_fu_2462_p1;
    end else if (((1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b0 == ap_block_pp4_stage0))) begin
        conv1_buff_2_address0 = conv1_buff_2_addr_reg_3006;
    end else if (((1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage1))) begin
        conv1_buff_2_address0 = tmp_115_cast_fu_2119_p1;
    end else if (((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage4) & (1'b0 == ap_block_pp3_stage4))) begin
        conv1_buff_2_address0 = conv1_buff_2_addr_1_reg_2905;
    end else if (((1'b1 == ap_CS_fsm_pp3_stage5) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage5))) begin
        conv1_buff_2_address0 = tmp_110_cast_fu_1951_p1;
    end else begin
        conv1_buff_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0))) begin
        conv1_buff_2_address1 = tmp_128_cast_fu_2581_p1;
    end else if (((1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b0 == ap_block_pp5_stage1))) begin
        conv1_buff_2_address1 = tmp_122_cast_fu_2436_p1;
    end else begin
        conv1_buff_2_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1)) | ((ap_enable_reg_pp5_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001)) | ((1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter0 == 1'b1)) | ((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage4) & (1'b0 == ap_block_pp3_stage4_11001)) | ((1'b0 == ap_block_pp5_stage1_11001) & (1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter0 == 1'b1)) | ((1'b0 == ap_block_pp3_stage5_11001) & (1'b1 == ap_CS_fsm_pp3_stage5) & (ap_enable_reg_pp3_iter0 == 1'b1)))) begin
        conv1_buff_2_ce0 = 1'b1;
    end else begin
        conv1_buff_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp5_stage1_11001) & (1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter0 == 1'b1)) | ((ap_enable_reg_pp5_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001)))) begin
        conv1_buff_2_ce1 = 1'b1;
    end else begin
        conv1_buff_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b0 == ap_block_pp4_stage0))) begin
        conv1_buff_2_d0 = tmp_43_reg_3036;
    end else if (((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage4) & (1'b0 == ap_block_pp3_stage4))) begin
        conv1_buff_2_d0 = reg_1416;
    end else begin
        conv1_buff_2_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((chl_out3_mid2_reg_2957 == 3'd2) & (1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1)) | ((chl_out2_mid2_reg_2782_pp3_iter1_reg == 3'd2) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage4) & (1'b0 == ap_block_pp3_stage4_11001)))) begin
        conv1_buff_2_we0 = 1'b1;
    end else begin
        conv1_buff_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0))) begin
        conv1_buff_3_address0 = tmp_127_cast_fu_2566_p1;
    end else if (((1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b0 == ap_block_pp5_stage1))) begin
        conv1_buff_3_address0 = tmp_123_cast_fu_2462_p1;
    end else if (((1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b0 == ap_block_pp4_stage0))) begin
        conv1_buff_3_address0 = conv1_buff_3_addr_reg_3011;
    end else if (((1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage1))) begin
        conv1_buff_3_address0 = tmp_115_cast_fu_2119_p1;
    end else if (((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage4) & (1'b0 == ap_block_pp3_stage4))) begin
        conv1_buff_3_address0 = conv1_buff_3_addr_1_reg_2910;
    end else if (((1'b1 == ap_CS_fsm_pp3_stage5) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage5))) begin
        conv1_buff_3_address0 = tmp_110_cast_fu_1951_p1;
    end else begin
        conv1_buff_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0))) begin
        conv1_buff_3_address1 = tmp_128_cast_fu_2581_p1;
    end else if (((1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b0 == ap_block_pp5_stage1))) begin
        conv1_buff_3_address1 = tmp_122_cast_fu_2436_p1;
    end else begin
        conv1_buff_3_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1)) | ((ap_enable_reg_pp5_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001)) | ((1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter0 == 1'b1)) | ((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage4) & (1'b0 == ap_block_pp3_stage4_11001)) | ((1'b0 == ap_block_pp5_stage1_11001) & (1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter0 == 1'b1)) | ((1'b0 == ap_block_pp3_stage5_11001) & (1'b1 == ap_CS_fsm_pp3_stage5) & (ap_enable_reg_pp3_iter0 == 1'b1)))) begin
        conv1_buff_3_ce0 = 1'b1;
    end else begin
        conv1_buff_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp5_stage1_11001) & (1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter0 == 1'b1)) | ((ap_enable_reg_pp5_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001)))) begin
        conv1_buff_3_ce1 = 1'b1;
    end else begin
        conv1_buff_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b0 == ap_block_pp4_stage0))) begin
        conv1_buff_3_d0 = tmp_43_reg_3036;
    end else if (((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage4) & (1'b0 == ap_block_pp3_stage4))) begin
        conv1_buff_3_d0 = reg_1416;
    end else begin
        conv1_buff_3_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((chl_out3_mid2_reg_2957 == 3'd3) & (1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1)) | ((chl_out2_mid2_reg_2782_pp3_iter1_reg == 3'd3) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage4) & (1'b0 == ap_block_pp3_stage4_11001)))) begin
        conv1_buff_3_we0 = 1'b1;
    end else begin
        conv1_buff_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0))) begin
        conv1_buff_4_address0 = tmp_127_cast_fu_2566_p1;
    end else if (((1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b0 == ap_block_pp5_stage1))) begin
        conv1_buff_4_address0 = tmp_123_cast_fu_2462_p1;
    end else if (((1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b0 == ap_block_pp4_stage0))) begin
        conv1_buff_4_address0 = conv1_buff_4_addr_reg_3016;
    end else if (((1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage1))) begin
        conv1_buff_4_address0 = tmp_115_cast_fu_2119_p1;
    end else if (((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage4) & (1'b0 == ap_block_pp3_stage4))) begin
        conv1_buff_4_address0 = conv1_buff_4_addr_1_reg_2915;
    end else if (((1'b1 == ap_CS_fsm_pp3_stage5) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage5))) begin
        conv1_buff_4_address0 = tmp_110_cast_fu_1951_p1;
    end else begin
        conv1_buff_4_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0))) begin
        conv1_buff_4_address1 = tmp_128_cast_fu_2581_p1;
    end else if (((1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b0 == ap_block_pp5_stage1))) begin
        conv1_buff_4_address1 = tmp_122_cast_fu_2436_p1;
    end else begin
        conv1_buff_4_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1)) | ((ap_enable_reg_pp5_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001)) | ((1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter0 == 1'b1)) | ((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage4) & (1'b0 == ap_block_pp3_stage4_11001)) | ((1'b0 == ap_block_pp5_stage1_11001) & (1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter0 == 1'b1)) | ((1'b0 == ap_block_pp3_stage5_11001) & (1'b1 == ap_CS_fsm_pp3_stage5) & (ap_enable_reg_pp3_iter0 == 1'b1)))) begin
        conv1_buff_4_ce0 = 1'b1;
    end else begin
        conv1_buff_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp5_stage1_11001) & (1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter0 == 1'b1)) | ((ap_enable_reg_pp5_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001)))) begin
        conv1_buff_4_ce1 = 1'b1;
    end else begin
        conv1_buff_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b0 == ap_block_pp4_stage0))) begin
        conv1_buff_4_d0 = tmp_43_reg_3036;
    end else if (((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage4) & (1'b0 == ap_block_pp3_stage4))) begin
        conv1_buff_4_d0 = reg_1416;
    end else begin
        conv1_buff_4_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((chl_out3_mid2_reg_2957 == 3'd4) & (1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1)) | ((chl_out2_mid2_reg_2782_pp3_iter1_reg == 3'd4) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage4) & (1'b0 == ap_block_pp3_stage4_11001)))) begin
        conv1_buff_4_we0 = 1'b1;
    end else begin
        conv1_buff_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0))) begin
        conv1_buff_5_address0 = tmp_127_cast_fu_2566_p1;
    end else if (((1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b0 == ap_block_pp5_stage1))) begin
        conv1_buff_5_address0 = tmp_123_cast_fu_2462_p1;
    end else if (((1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b0 == ap_block_pp4_stage0))) begin
        conv1_buff_5_address0 = conv1_buff_5_addr_reg_3021;
    end else if (((1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage1))) begin
        conv1_buff_5_address0 = tmp_115_cast_fu_2119_p1;
    end else if (((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage4) & (1'b0 == ap_block_pp3_stage4))) begin
        conv1_buff_5_address0 = conv1_buff_5_addr_1_reg_2920;
    end else if (((1'b1 == ap_CS_fsm_pp3_stage5) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage5))) begin
        conv1_buff_5_address0 = tmp_110_cast_fu_1951_p1;
    end else begin
        conv1_buff_5_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0))) begin
        conv1_buff_5_address1 = tmp_128_cast_fu_2581_p1;
    end else if (((1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b0 == ap_block_pp5_stage1))) begin
        conv1_buff_5_address1 = tmp_122_cast_fu_2436_p1;
    end else begin
        conv1_buff_5_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1)) | ((ap_enable_reg_pp5_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001)) | ((1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter0 == 1'b1)) | ((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage4) & (1'b0 == ap_block_pp3_stage4_11001)) | ((1'b0 == ap_block_pp5_stage1_11001) & (1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter0 == 1'b1)) | ((1'b0 == ap_block_pp3_stage5_11001) & (1'b1 == ap_CS_fsm_pp3_stage5) & (ap_enable_reg_pp3_iter0 == 1'b1)))) begin
        conv1_buff_5_ce0 = 1'b1;
    end else begin
        conv1_buff_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp5_stage1_11001) & (1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter0 == 1'b1)) | ((ap_enable_reg_pp5_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001)))) begin
        conv1_buff_5_ce1 = 1'b1;
    end else begin
        conv1_buff_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b0 == ap_block_pp4_stage0))) begin
        conv1_buff_5_d0 = tmp_43_reg_3036;
    end else if (((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage4) & (1'b0 == ap_block_pp3_stage4))) begin
        conv1_buff_5_d0 = reg_1416;
    end else begin
        conv1_buff_5_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & ((chl_out3_mid2_reg_2957 == 3'd5) | ((chl_out3_mid2_reg_2957 == 3'd6) | (chl_out3_mid2_reg_2957 == 3'd7)))) | ((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage4) & (1'b0 == ap_block_pp3_stage4_11001) & ((chl_out2_mid2_reg_2782_pp3_iter1_reg == 3'd5) | ((chl_out2_mid2_reg_2782_pp3_iter1_reg == 3'd6) | (chl_out2_mid2_reg_2782_pp3_iter1_reg == 3'd7)))))) begin
        conv1_buff_5_we0 = 1'b1;
    end else begin
        conv1_buff_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp6_stage0) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0))) begin
        conv_out1_0_address0 = tmp_128_fu_2641_p1;
    end else if (((ap_enable_reg_pp5_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0))) begin
        conv_out1_0_address0 = tmp_132_cast_fu_2590_p1;
    end else begin
        conv_out1_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_11001)) | ((ap_enable_reg_pp5_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001)))) begin
        conv_out1_0_ce0 = 1'b1;
    end else begin
        conv_out1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (chl_out6_mid2_reg_3070_pp5_iter10_reg == 3'd0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        conv_out1_0_we0 = 1'b1;
    end else begin
        conv_out1_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp6_stage0) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0))) begin
        conv_out1_1_address0 = tmp_128_fu_2641_p1;
    end else if (((ap_enable_reg_pp5_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0))) begin
        conv_out1_1_address0 = tmp_132_cast_fu_2590_p1;
    end else begin
        conv_out1_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_11001)) | ((ap_enable_reg_pp5_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001)))) begin
        conv_out1_1_ce0 = 1'b1;
    end else begin
        conv_out1_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (chl_out6_mid2_reg_3070_pp5_iter10_reg == 3'd1) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        conv_out1_1_we0 = 1'b1;
    end else begin
        conv_out1_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp6_stage0) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0))) begin
        conv_out1_2_address0 = tmp_128_fu_2641_p1;
    end else if (((ap_enable_reg_pp5_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0))) begin
        conv_out1_2_address0 = tmp_132_cast_fu_2590_p1;
    end else begin
        conv_out1_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_11001)) | ((ap_enable_reg_pp5_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001)))) begin
        conv_out1_2_ce0 = 1'b1;
    end else begin
        conv_out1_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (chl_out6_mid2_reg_3070_pp5_iter10_reg == 3'd2) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        conv_out1_2_we0 = 1'b1;
    end else begin
        conv_out1_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp6_stage0) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0))) begin
        conv_out1_3_address0 = tmp_128_fu_2641_p1;
    end else if (((ap_enable_reg_pp5_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0))) begin
        conv_out1_3_address0 = tmp_132_cast_fu_2590_p1;
    end else begin
        conv_out1_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_11001)) | ((ap_enable_reg_pp5_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001)))) begin
        conv_out1_3_ce0 = 1'b1;
    end else begin
        conv_out1_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (chl_out6_mid2_reg_3070_pp5_iter10_reg == 3'd3) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        conv_out1_3_we0 = 1'b1;
    end else begin
        conv_out1_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp6_stage0) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0))) begin
        conv_out1_4_address0 = tmp_128_fu_2641_p1;
    end else if (((ap_enable_reg_pp5_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0))) begin
        conv_out1_4_address0 = tmp_132_cast_fu_2590_p1;
    end else begin
        conv_out1_4_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_11001)) | ((ap_enable_reg_pp5_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001)))) begin
        conv_out1_4_ce0 = 1'b1;
    end else begin
        conv_out1_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (chl_out6_mid2_reg_3070_pp5_iter10_reg == 3'd4) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        conv_out1_4_we0 = 1'b1;
    end else begin
        conv_out1_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp6_stage0) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0))) begin
        conv_out1_5_address0 = tmp_128_fu_2641_p1;
    end else if (((ap_enable_reg_pp5_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0))) begin
        conv_out1_5_address0 = tmp_132_cast_fu_2590_p1;
    end else begin
        conv_out1_5_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_11001)) | ((ap_enable_reg_pp5_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001)))) begin
        conv_out1_5_ce0 = 1'b1;
    end else begin
        conv_out1_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001) & ((chl_out6_mid2_reg_3070_pp5_iter10_reg == 3'd5) | ((chl_out6_mid2_reg_3070_pp5_iter10_reg == 3'd6) | (chl_out6_mid2_reg_3070_pp5_iter10_reg == 3'd7))))) begin
        conv_out1_5_we0 = 1'b1;
    end else begin
        conv_out1_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0))) begin
        grp_fu_1353_p0 = reg_1416;
    end else if (((1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter1 == 1'b1) & (1'b0 == ap_block_pp5_stage1))) begin
        grp_fu_1353_p0 = tmp_79_reg_3191;
    end else if (((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage3) & (1'b0 == ap_block_pp4_stage3))) begin
        grp_fu_1353_p0 = tmp_70_reg_3026;
    end else if (((1'b1 == ap_CS_fsm_pp3_stage7) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage7))) begin
        grp_fu_1353_p0 = tmp_68_reg_2925;
    end else begin
        grp_fu_1353_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0))) begin
        grp_fu_1353_p1 = tmp_81_reg_3236;
    end else if (((1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter1 == 1'b1) & (1'b0 == ap_block_pp5_stage1))) begin
        grp_fu_1353_p1 = tmp_80_reg_3196;
    end else if (((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage3) & (1'b0 == ap_block_pp4_stage3))) begin
        grp_fu_1353_p1 = UnifiedRetVal_i_reg_3031;
    end else if (((1'b1 == ap_CS_fsm_pp3_stage7) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage7))) begin
        grp_fu_1353_p1 = reg_1405;
    end else begin
        grp_fu_1353_p1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0))) begin
        grp_fu_1361_p0 = tmp_52_reg_3281;
    end else if (((1'b1 == ap_CS_fsm_pp3_stage3) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage3))) begin
        grp_fu_1361_p0 = pic_in_load_reg_2885;
    end else begin
        grp_fu_1361_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0))) begin
        grp_fu_1361_p1 = 32'd1048576000;
    end else if (((1'b1 == ap_CS_fsm_pp3_stage3) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage3))) begin
        grp_fu_1361_p1 = tmp_67_reg_2890;
    end else begin
        grp_fu_1361_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter5 == 1'b1) & (1'b0 == ap_block_pp5_stage1))) begin
        grp_fu_1371_p7 = chl_out6_mid2_reg_3070_pp5_iter5_reg;
    end else if (((ap_enable_reg_pp5_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0))) begin
        grp_fu_1371_p7 = chl_out6_mid2_reg_3070;
    end else begin
        grp_fu_1371_p7 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage1) & (1'b0 == ap_block_pp5_stage1))) begin
        grp_fu_1388_p7 = chl_out6_mid2_reg_3070_pp5_iter3_reg;
    end else if (((ap_enable_reg_pp5_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0))) begin
        grp_fu_1388_p7 = chl_out6_mid2_reg_3070;
    end else begin
        grp_fu_1388_p7 = 'bx;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (ap_reg_ioackin_m_axi_BIAS_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        m_axi_BIAS_ARVALID = 1'b1;
    end else begin
        m_axi_BIAS_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        m_axi_BIAS_RREADY = 1'b1;
    end else begin
        m_axi_BIAS_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((ap_reg_ioackin_m_axi_FM_DDR_BUFF1_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_state10))) begin
        m_axi_FM_DDR_BUFF1_ARVALID = 1'b1;
    end else begin
        m_axi_FM_DDR_BUFF1_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond7_reg_2687 == 1'd0))) begin
        m_axi_FM_DDR_BUFF1_RREADY = 1'b1;
    end else begin
        m_axi_FM_DDR_BUFF1_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((ap_reg_ioackin_m_axi_FM_DDR_BUFF2_AWREADY == 1'b0) & (1'b1 == ap_CS_fsm_state79))) begin
        m_axi_FM_DDR_BUFF2_AWVALID = 1'b1;
    end else begin
        m_axi_FM_DDR_BUFF2_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state87) & (m_axi_FM_DDR_BUFF2_BVALID == 1'b1))) begin
        m_axi_FM_DDR_BUFF2_BREADY = 1'b1;
    end else begin
        m_axi_FM_DDR_BUFF2_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((ap_reg_ioackin_m_axi_FM_DDR_BUFF2_WREADY == 1'b0) & (ap_enable_reg_pp6_iter2 == 1'b1) & (1'b0 == ap_block_pp6_stage0_01001) & (exitcond10_reg_3286_pp6_iter1_reg == 1'd0))) begin
        m_axi_FM_DDR_BUFF2_WVALID = 1'b1;
    end else begin
        m_axi_FM_DDR_BUFF2_WVALID = 1'b0;
    end
end

always @ (*) begin
    if (((ap_reg_ioackin_m_axi_WEIGHT_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_state20))) begin
        m_axi_WEIGHT_ARVALID = 1'b1;
    end else begin
        m_axi_WEIGHT_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (exitcond8_reg_2701 == 1'd0))) begin
        m_axi_WEIGHT_RREADY = 1'b1;
    end else begin
        m_axi_WEIGHT_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage1) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage1))) begin
        pic_in_address0 = tmp_94_fu_1846_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        pic_in_address0 = indvar1_fu_1488_p1;
    end else begin
        pic_in_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage1_11001) & (1'b1 == ap_CS_fsm_pp3_stage1) & (ap_enable_reg_pp3_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
        pic_in_ce0 = 1'b1;
    end else begin
        pic_in_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1) & (exitcond7_reg_2687_pp1_iter1_reg == 1'd0))) begin
        pic_in_we0 = 1'b1;
    end else begin
        pic_in_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (ap_sig_ioackin_m_axi_BIAS_ARREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((exitcond9_fu_1428_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((exitcond9_fu_1428_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state10 : begin
            if (((1'b1 == ap_CS_fsm_state10) & (ap_sig_ioackin_m_axi_FM_DDR_BUFF1_ARREADY == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((exitcond7_fu_1476_p2 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone)) & ~((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((exitcond7_fu_1476_p2 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone)) | ((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state20 : begin
            if (((1'b1 == ap_CS_fsm_state20) & (ap_sig_ioackin_m_axi_WEIGHT_ARREADY == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((exitcond8_fu_1493_p2 == 1'd1) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_subdone)) & ~((ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter2 == 1'b1) & (1'b0 == ap_block_pp2_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if ((((exitcond8_fu_1493_p2 == 1'd1) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_subdone)) | ((ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter2 == 1'b1) & (1'b0 == ap_block_pp2_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage0;
        end
        ap_ST_fsm_pp3_stage0 : begin
            if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_pp3_stage1 : begin
            if ((1'b0 == ap_block_pp3_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage1;
            end
        end
        ap_ST_fsm_pp3_stage2 : begin
            if ((1'b0 == ap_block_pp3_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage2;
            end
        end
        ap_ST_fsm_pp3_stage3 : begin
            if ((1'b0 == ap_block_pp3_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage3;
            end
        end
        ap_ST_fsm_pp3_stage4 : begin
            if ((~((ap_enable_reg_pp3_iter0 == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage4) & (1'b0 == ap_block_pp3_stage4_subdone)) & (1'b0 == ap_block_pp3_stage4_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage5;
            end else if (((ap_enable_reg_pp3_iter0 == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage4) & (1'b0 == ap_block_pp3_stage4_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state44;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage4;
            end
        end
        ap_ST_fsm_pp3_stage5 : begin
            if ((1'b0 == ap_block_pp3_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage5;
            end
        end
        ap_ST_fsm_pp3_stage6 : begin
            if ((1'b0 == ap_block_pp3_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage6;
            end
        end
        ap_ST_fsm_pp3_stage7 : begin
            if ((1'b0 == ap_block_pp3_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage7;
            end
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage0;
        end
        ap_ST_fsm_pp4_stage0 : begin
            if ((~((ap_enable_reg_pp4_iter0 == 1'b0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b0 == ap_block_pp4_stage0_subdone)) & (1'b0 == ap_block_pp4_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage1;
            end else if (((ap_enable_reg_pp4_iter0 == 1'b0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b0 == ap_block_pp4_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state55;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end
        end
        ap_ST_fsm_pp4_stage1 : begin
            if ((1'b0 == ap_block_pp4_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage1;
            end
        end
        ap_ST_fsm_pp4_stage2 : begin
            if ((1'b0 == ap_block_pp4_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage2;
            end
        end
        ap_ST_fsm_pp4_stage3 : begin
            if ((1'b0 == ap_block_pp4_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage3;
            end
        end
        ap_ST_fsm_pp4_stage4 : begin
            if ((1'b0 == ap_block_pp4_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage4;
            end
        end
        ap_ST_fsm_pp4_stage5 : begin
            if ((1'b0 == ap_block_pp4_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage5;
            end
        end
        ap_ST_fsm_pp4_stage6 : begin
            if ((1'b0 == ap_block_pp4_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage6;
            end
        end
        ap_ST_fsm_pp4_stage7 : begin
            if ((1'b0 == ap_block_pp4_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage7;
            end
        end
        ap_ST_fsm_pp4_stage8 : begin
            if ((1'b0 == ap_block_pp4_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage8;
            end
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_pp5_stage0;
        end
        ap_ST_fsm_pp5_stage0 : begin
            if ((~((ap_enable_reg_pp5_iter10 == 1'b0) & (ap_enable_reg_pp5_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_subdone)) & (1'b0 == ap_block_pp5_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage1;
            end else if (((ap_enable_reg_pp5_iter10 == 1'b0) & (ap_enable_reg_pp5_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state79;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end
        end
        ap_ST_fsm_pp5_stage1 : begin
            if ((1'b0 == ap_block_pp5_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage1;
            end
        end
        ap_ST_fsm_state79 : begin
            if (((1'b1 == ap_CS_fsm_state79) & (ap_sig_ioackin_m_axi_FM_DDR_BUFF2_AWREADY == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state79;
            end
        end
        ap_ST_fsm_pp6_stage0 : begin
            if ((~((ap_enable_reg_pp6_iter0 == 1'b1) & (ap_enable_reg_pp6_iter1 == 1'b0) & (1'b0 == ap_block_pp6_stage0_subdone) & (exitcond10_fu_2599_p2 == 1'd1)) & ~((ap_enable_reg_pp6_iter2 == 1'b1) & (ap_enable_reg_pp6_iter1 == 1'b0) & (1'b0 == ap_block_pp6_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end else if ((((ap_enable_reg_pp6_iter2 == 1'b1) & (ap_enable_reg_pp6_iter1 == 1'b0) & (1'b0 == ap_block_pp6_stage0_subdone)) | ((ap_enable_reg_pp6_iter0 == 1'b1) & (ap_enable_reg_pp6_iter1 == 1'b0) & (1'b0 == ap_block_pp6_stage0_subdone) & (exitcond10_fu_2599_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state83;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            if (((1'b1 == ap_CS_fsm_state87) & (m_axi_FM_DDR_BUFF2_BVALID == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state87;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign UnifiedRetVal_i_fu_2227_p3 = ((sel_tmp8_i_fu_2222_p2[0:0] === 1'b1) ? B_CONV1_4 : sel_tmp7_i_fu_2214_p3);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_pp3_stage1 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_pp3_stage2 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_pp3_stage3 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_pp3_stage4 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_pp3_stage5 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_pp3_stage6 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_pp3_stage7 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_pp4_stage0 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_pp4_stage1 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_pp4_stage2 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_pp4_stage3 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_pp4_stage7 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_pp4_stage8 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_pp5_stage0 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_pp5_stage1 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_pp6_stage0 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state79 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state87 = ap_CS_fsm[32'd52];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((m_axi_BIAS_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((m_axi_BIAS_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_11001 = ((m_axi_FM_DDR_BUFF1_RVALID == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (exitcond7_reg_2687 == 1'd0));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = ((m_axi_FM_DDR_BUFF1_RVALID == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (exitcond7_reg_2687 == 1'd0));
end

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp2_stage0_11001 = ((m_axi_WEIGHT_RVALID == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (exitcond8_reg_2701 == 1'd0));
end

always @ (*) begin
    ap_block_pp2_stage0_subdone = ((m_axi_WEIGHT_RVALID == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (exitcond8_reg_2701 == 1'd0));
end

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage8 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage8_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage8_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage8_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage0_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp6_stage0_11001 = ((1'b1 == ap_block_state82_io) & (ap_enable_reg_pp6_iter2 == 1'b1));
end

always @ (*) begin
    ap_block_pp6_stage0_subdone = ((1'b1 == ap_block_state82_io) & (ap_enable_reg_pp6_iter2 == 1'b1));
end

assign ap_block_state17_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state18_pp1_stage0_iter1 = ((m_axi_FM_DDR_BUFF1_RVALID == 1'b0) & (exitcond7_reg_2687 == 1'd0));
end

assign ap_block_state19_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state28_pp2_stage0_iter1 = ((m_axi_WEIGHT_RVALID == 1'b0) & (exitcond8_reg_2701 == 1'd0));
end

assign ap_block_state29_pp2_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp3_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp3_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp3_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp3_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp3_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp3_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp3_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp3_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp3_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp3_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp3_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp3_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp3_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp4_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp4_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp4_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp4_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp4_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp4_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp4_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp4_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp4_stage8_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp4_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp5_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp5_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state58_pp5_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp5_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp5_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state61_pp5_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state62_pp5_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state63_pp5_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state64_pp5_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state65_pp5_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state66_pp5_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state67_pp5_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state68_pp5_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state69_pp5_stage1_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state70_pp5_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state71_pp5_stage1_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state72_pp5_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state73_pp5_stage1_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state74_pp5_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state75_pp5_stage1_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state76_pp5_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state77_pp5_stage1_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state78_pp5_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state80_pp6_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state81_pp6_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state82_io = ((ap_sig_ioackin_m_axi_FM_DDR_BUFF2_WREADY == 1'b0) & (exitcond10_reg_3286_pp6_iter1_reg == 1'd0));
end

assign ap_block_state82_pp6_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state9_pp0_stage0_iter1 = (m_axi_BIAS_RVALID == 1'b0);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

assign ap_enable_pp4 = (ap_idle_pp4 ^ 1'b1);

assign ap_enable_pp5 = (ap_idle_pp5 ^ 1'b1);

assign ap_enable_pp6 = (ap_idle_pp6 ^ 1'b1);

assign c2_mid2_fu_2076_p3 = ((exitcond1_mid_reg_2940[0:0] === 1'b1) ? c_4_reg_2952 : c2_mid_reg_2935);

assign c2_mid_fu_1990_p3 = ((ap_phi_mux_exitcond_flatten19_phi_fu_1168_p4[0:0] === 1'b1) ? 5'd0 : ap_phi_mux_c7_phi_fu_1201_p4);

assign c5_mid2_fu_2392_p3 = ((exitcond_mid_reg_3057[0:0] === 1'b1) ? c_5_fu_2387_p2 : c5_mid_reg_3051);

assign c5_mid_fu_2297_p3 = ((ap_phi_mux_exitcond_flatten20_phi_fu_1246_p4[0:0] === 1'b1) ? 5'd0 : ap_phi_mux_c8_phi_fu_1279_p4);

assign c_4_fu_2018_p2 = (5'd1 + c2_mid_fu_1990_p3);

assign c_5_fu_2387_p2 = (c5_mid_reg_3051 + 5'd2);

assign c_6_fu_1815_p2 = (c_mid3_reg_2771 + 5'd1);

assign c_mid2_fu_1820_p3 = ((exitcond4_mid5_reg_2777[0:0] === 1'b1) ? c_6_fu_1815_p2 : c_mid3_reg_2771);

assign c_mid3_fu_1668_p3 = ((tmp_86_fu_1662_p2[0:0] === 1'b1) ? 5'd0 : ap_phi_mux_c_phi_fu_1090_p4);

assign chl_out2_mid2_fu_1700_p3 = ((tmp_92_fu_1694_p2[0:0] === 1'b1) ? 3'd0 : ap_phi_mux_chl_out2_phi_fu_1079_p4);

assign chl_out3_mid2_fu_2030_p3 = ((tmp_104_fu_2024_p2[0:0] === 1'b1) ? 3'd0 : ap_phi_mux_chl_out4_phi_fu_1190_p4);

assign chl_out6_mid2_fu_2331_p3 = ((tmp_110_fu_2325_p2[0:0] === 1'b1) ? 3'd0 : ap_phi_mux_chl_out5_phi_fu_1268_p4);

assign chl_out_2_fu_2349_p2 = (chl_out6_mid2_fu_2331_p3 + 3'd1);

assign chl_out_3_fu_1708_p2 = (chl_out2_mid2_fu_1700_p3 + 3'd1);

assign chl_out_fu_2038_p2 = (chl_out3_mid2_fu_2030_p3 + 3'd1);

assign conv_out1_0_d0 = reg_1405;

assign conv_out1_1_d0 = reg_1405;

assign conv_out1_2_d0 = reg_1405;

assign conv_out1_3_d0 = reg_1405;

assign conv_out1_4_d0 = reg_1405;

assign conv_out1_5_d0 = reg_1405;

assign exitcond10_fu_2599_p2 = ((indvar4_reg_1320 == 11'd1176) ? 1'b1 : 1'b0);

assign exitcond1_fu_2058_p2 = ((chl_out_fu_2038_p2 == 3'd6) ? 1'b1 : 1'b0);

assign exitcond1_mid_fu_2004_p2 = (not_exitcond_flatten_2_fu_1998_p2 & ap_phi_mux_exitcond12_phi_fu_1179_p4);

assign exitcond4_fu_1756_p2 = ((chl_out_3_fu_1708_p2 == 3'd6) ? 1'b1 : 1'b0);

assign exitcond4_mid4_fu_1644_p2 = (not_exitcond_flatten_4_fu_1638_p2 & exitcond4_mid_fu_1600_p2);

assign exitcond4_mid5_fu_1682_p2 = (not_exitcond_flatten_1_fu_1676_p2 & exitcond4_mid4_fu_1644_p2);

assign exitcond4_mid_fu_1600_p2 = (not_exitcond_flatten_fu_1594_p2 & ap_phi_mux_exitcond11_phi_fu_1057_p4);

assign exitcond7_fu_1476_p2 = ((ap_phi_mux_indvar8_phi_fu_979_p4 == 11'd1024) ? 1'b1 : 1'b0);

assign exitcond8_fu_1493_p2 = ((indvar2_reg_987 == 8'd150) ? 1'b1 : 1'b0);

assign exitcond9_fu_1428_p2 = ((ap_phi_mux_indvar_phi_fu_967_p4 == 3'd6) ? 1'b1 : 1'b0);

assign exitcond_flatten10_fu_1774_p2 = ((indvar_flatten_next1_fu_1748_p3 == 16'd23520) ? 1'b1 : 1'b0);

assign exitcond_flatten11_fu_1780_p2 = ((ap_phi_mux_indvar_flatten11_phi_fu_1156_p4 == 17'd117599) ? 1'b1 : 1'b0);

assign exitcond_flatten12_fu_2064_p2 = ((indvar_flatten_next1_2_fu_2050_p3 == 8'd168) ? 1'b1 : 1'b0);

assign exitcond_flatten13_fu_2070_p2 = ((ap_phi_mux_indvar_flatten13_phi_fu_1234_p4 == 13'd4703) ? 1'b1 : 1'b0);

assign exitcond_flatten13_m_fu_1612_p2 = (not_exitcond_flatten_fu_1594_p2 & ap_phi_mux_exitcond_flatten17_phi_fu_1035_p4);

assign exitcond_flatten13_n_fu_1632_p2 = (ap_phi_mux_exitcond_flatten17_phi_fu_1035_p4 ^ 1'd1);

assign exitcond_flatten14_fu_2375_p2 = ((indvar_flatten_next1_4_fu_2361_p3 == 7'd84) ? 1'b1 : 1'b0);

assign exitcond_flatten15_fu_2381_p2 = ((ap_phi_mux_indvar_flatten15_phi_fu_1312_p4 == 11'd1175) ? 1'b1 : 1'b0);

assign exitcond_flatten9_fu_1768_p2 = ((indvar_flatten_next9_fu_1734_p3 == 13'd4704) ? 1'b1 : 1'b0);

assign exitcond_flatten_fu_1762_p2 = ((indvar_flatten_next_fu_1720_p3 == 8'd168) ? 1'b1 : 1'b0);

assign exitcond_flatten_mid_7_fu_1650_p2 = (not_exitcond_flatten_4_fu_1638_p2 & exitcond_flatten_mid_fu_1606_p2);

assign exitcond_flatten_mid_fu_1606_p2 = (not_exitcond_flatten_fu_1594_p2 & ap_phi_mux_exitcond_flatten18_phi_fu_1046_p4);

assign exitcond_fu_2369_p2 = ((chl_out_2_fu_2349_p2 == 3'd6) ? 1'b1 : 1'b0);

assign exitcond_mid_fu_2311_p2 = (not_exitcond_flatten_3_fu_2305_p2 & ap_phi_mux_exitcond13_phi_fu_1257_p4);

assign idx_urem3_fu_2623_p3 = ((tmp_126_fu_2617_p2[0:0] === 1'b1) ? next_urem3_fu_2611_p2 : 11'd0);

assign idx_urem_fu_1537_p3 = ((tmp_103_fu_1531_p2[0:0] === 1'b1) ? next_urem_fu_1525_p2 : 8'd0);

assign indvar1_fu_1488_p1 = indvar8_reg_975_pp1_iter1_reg;

assign indvar_flatten11_op_fu_1728_p2 = (ap_phi_mux_indvar_flatten9_phi_fu_1123_p4 + 13'd1);

assign indvar_flatten31_op_fu_1742_p2 = (ap_phi_mux_indvar_flatten10_phi_fu_1134_p4 + 16'd1);

assign indvar_flatten68_op_fu_2044_p2 = (ap_phi_mux_indvar_flatten12_phi_fu_1212_p4 + 8'd1);

assign indvar_flatten87_op_fu_2355_p2 = (ap_phi_mux_indvar_flatten14_phi_fu_1290_p4 + 7'd1);

assign indvar_flatten_next1_1_fu_1978_p2 = (indvar_flatten11_reg_1152 + 17'd1);

assign indvar_flatten_next1_2_fu_2050_p3 = ((ap_phi_mux_exitcond_flatten19_phi_fu_1168_p4[0:0] === 1'b1) ? 8'd1 : indvar_flatten68_op_fu_2044_p2);

assign indvar_flatten_next1_3_fu_2285_p2 = (13'd1 + indvar_flatten13_reg_1230);

assign indvar_flatten_next1_4_fu_2361_p3 = ((ap_phi_mux_exitcond_flatten20_phi_fu_1246_p4[0:0] === 1'b1) ? 7'd1 : indvar_flatten87_op_fu_2355_p2);

assign indvar_flatten_next1_5_fu_2520_p2 = (indvar_flatten15_reg_1308 + 11'd1);

assign indvar_flatten_next1_fu_1748_p3 = ((ap_phi_mux_exitcond_flatten16_phi_fu_1024_p4[0:0] === 1'b1) ? 16'd1 : indvar_flatten31_op_fu_1742_p2);

assign indvar_flatten_next9_fu_1734_p3 = ((tmp_89_fu_1618_p2[0:0] === 1'b1) ? 13'd1 : indvar_flatten11_op_fu_1728_p2);

assign indvar_flatten_next_fu_1720_p3 = ((tmp_86_fu_1662_p2[0:0] === 1'b1) ? 8'd1 : indvar_flatten_op_fu_1714_p2);

assign indvar_flatten_op_fu_1714_p2 = (ap_phi_mux_indvar_flatten_phi_fu_1101_p4 + 8'd1);

assign indvar_next4_fu_1482_p2 = (ap_phi_mux_indvar8_phi_fu_979_p4 + 11'd1);

assign indvar_next5_fu_1499_p2 = (indvar2_reg_987 + 8'd1);

assign indvar_next6_fu_2605_p2 = (indvar4_reg_1320 + 11'd1);

assign indvar_next_fu_1434_p2 = (ap_phi_mux_indvar_phi_fu_967_p4 + 3'd1);

assign kc_cast_mid2_cast_fu_1800_p1 = kc_cast_mid2_fu_1794_p3;

assign kc_cast_mid2_fu_1794_p3 = ((exitcond_flatten13_m_reg_2755[0:0] === 1'b1) ? kc_fu_1789_p2 : kc_mid_reg_2741);

assign kc_fu_1789_p2 = (kc_mid_reg_2741 + 3'd1);

assign kc_mid_fu_1578_p3 = ((ap_phi_mux_exitcond_flatten16_phi_fu_1024_p4[0:0] === 1'b1) ? 3'd0 : ap_phi_mux_kc_cast_phi_fu_1068_p4);

assign kr_2_fu_1572_p2 = (ap_phi_mux_kr_phi_fu_1145_p4 + 3'd1);

assign kr_cast_mid2_fu_1786_p1 = kr_cast_mid2_v_reg_2747;

assign kr_cast_mid2_v_fu_1586_p3 = ((ap_phi_mux_exitcond_flatten16_phi_fu_1024_p4[0:0] === 1'b1) ? kr_2_fu_1572_p2 : ap_phi_mux_kr_phi_fu_1145_p4);

assign m_axi_BIAS_ARADDR = 32'd0;

assign m_axi_BIAS_ARBURST = 2'd0;

assign m_axi_BIAS_ARCACHE = 4'd0;

assign m_axi_BIAS_ARID = 1'd0;

assign m_axi_BIAS_ARLEN = 32'd6;

assign m_axi_BIAS_ARLOCK = 2'd0;

assign m_axi_BIAS_ARPROT = 3'd0;

assign m_axi_BIAS_ARQOS = 4'd0;

assign m_axi_BIAS_ARREGION = 4'd0;

assign m_axi_BIAS_ARSIZE = 3'd0;

assign m_axi_BIAS_ARUSER = 1'd0;

assign m_axi_BIAS_AWADDR = 32'd0;

assign m_axi_BIAS_AWBURST = 2'd0;

assign m_axi_BIAS_AWCACHE = 4'd0;

assign m_axi_BIAS_AWID = 1'd0;

assign m_axi_BIAS_AWLEN = 32'd0;

assign m_axi_BIAS_AWLOCK = 2'd0;

assign m_axi_BIAS_AWPROT = 3'd0;

assign m_axi_BIAS_AWQOS = 4'd0;

assign m_axi_BIAS_AWREGION = 4'd0;

assign m_axi_BIAS_AWSIZE = 3'd0;

assign m_axi_BIAS_AWUSER = 1'd0;

assign m_axi_BIAS_AWVALID = 1'b0;

assign m_axi_BIAS_BREADY = 1'b0;

assign m_axi_BIAS_WDATA = 32'd0;

assign m_axi_BIAS_WID = 1'd0;

assign m_axi_BIAS_WLAST = 1'b0;

assign m_axi_BIAS_WSTRB = 4'd0;

assign m_axi_BIAS_WUSER = 1'd0;

assign m_axi_BIAS_WVALID = 1'b0;

assign m_axi_FM_DDR_BUFF1_ARADDR = 32'd0;

assign m_axi_FM_DDR_BUFF1_ARBURST = 2'd0;

assign m_axi_FM_DDR_BUFF1_ARCACHE = 4'd0;

assign m_axi_FM_DDR_BUFF1_ARID = 1'd0;

assign m_axi_FM_DDR_BUFF1_ARLEN = 32'd1024;

assign m_axi_FM_DDR_BUFF1_ARLOCK = 2'd0;

assign m_axi_FM_DDR_BUFF1_ARPROT = 3'd0;

assign m_axi_FM_DDR_BUFF1_ARQOS = 4'd0;

assign m_axi_FM_DDR_BUFF1_ARREGION = 4'd0;

assign m_axi_FM_DDR_BUFF1_ARSIZE = 3'd0;

assign m_axi_FM_DDR_BUFF1_ARUSER = 1'd0;

assign m_axi_FM_DDR_BUFF1_AWADDR = 32'd0;

assign m_axi_FM_DDR_BUFF1_AWBURST = 2'd0;

assign m_axi_FM_DDR_BUFF1_AWCACHE = 4'd0;

assign m_axi_FM_DDR_BUFF1_AWID = 1'd0;

assign m_axi_FM_DDR_BUFF1_AWLEN = 32'd0;

assign m_axi_FM_DDR_BUFF1_AWLOCK = 2'd0;

assign m_axi_FM_DDR_BUFF1_AWPROT = 3'd0;

assign m_axi_FM_DDR_BUFF1_AWQOS = 4'd0;

assign m_axi_FM_DDR_BUFF1_AWREGION = 4'd0;

assign m_axi_FM_DDR_BUFF1_AWSIZE = 3'd0;

assign m_axi_FM_DDR_BUFF1_AWUSER = 1'd0;

assign m_axi_FM_DDR_BUFF1_AWVALID = 1'b0;

assign m_axi_FM_DDR_BUFF1_BREADY = 1'b0;

assign m_axi_FM_DDR_BUFF1_WDATA = 32'd0;

assign m_axi_FM_DDR_BUFF1_WID = 1'd0;

assign m_axi_FM_DDR_BUFF1_WLAST = 1'b0;

assign m_axi_FM_DDR_BUFF1_WSTRB = 4'd0;

assign m_axi_FM_DDR_BUFF1_WUSER = 1'd0;

assign m_axi_FM_DDR_BUFF1_WVALID = 1'b0;

assign m_axi_FM_DDR_BUFF2_ARADDR = 32'd0;

assign m_axi_FM_DDR_BUFF2_ARBURST = 2'd0;

assign m_axi_FM_DDR_BUFF2_ARCACHE = 4'd0;

assign m_axi_FM_DDR_BUFF2_ARID = 1'd0;

assign m_axi_FM_DDR_BUFF2_ARLEN = 32'd0;

assign m_axi_FM_DDR_BUFF2_ARLOCK = 2'd0;

assign m_axi_FM_DDR_BUFF2_ARPROT = 3'd0;

assign m_axi_FM_DDR_BUFF2_ARQOS = 4'd0;

assign m_axi_FM_DDR_BUFF2_ARREGION = 4'd0;

assign m_axi_FM_DDR_BUFF2_ARSIZE = 3'd0;

assign m_axi_FM_DDR_BUFF2_ARUSER = 1'd0;

assign m_axi_FM_DDR_BUFF2_ARVALID = 1'b0;

assign m_axi_FM_DDR_BUFF2_AWADDR = 32'd0;

assign m_axi_FM_DDR_BUFF2_AWBURST = 2'd0;

assign m_axi_FM_DDR_BUFF2_AWCACHE = 4'd0;

assign m_axi_FM_DDR_BUFF2_AWID = 1'd0;

assign m_axi_FM_DDR_BUFF2_AWLEN = 32'd1176;

assign m_axi_FM_DDR_BUFF2_AWLOCK = 2'd0;

assign m_axi_FM_DDR_BUFF2_AWPROT = 3'd0;

assign m_axi_FM_DDR_BUFF2_AWQOS = 4'd0;

assign m_axi_FM_DDR_BUFF2_AWREGION = 4'd0;

assign m_axi_FM_DDR_BUFF2_AWSIZE = 3'd0;

assign m_axi_FM_DDR_BUFF2_AWUSER = 1'd0;

assign m_axi_FM_DDR_BUFF2_RREADY = 1'b0;

assign m_axi_FM_DDR_BUFF2_WDATA = tmp_76_reg_3340;

assign m_axi_FM_DDR_BUFF2_WID = 1'd0;

assign m_axi_FM_DDR_BUFF2_WLAST = 1'b0;

assign m_axi_FM_DDR_BUFF2_WSTRB = 4'd15;

assign m_axi_FM_DDR_BUFF2_WUSER = 1'd0;

assign m_axi_WEIGHT_ARADDR = 32'd0;

assign m_axi_WEIGHT_ARBURST = 2'd0;

assign m_axi_WEIGHT_ARCACHE = 4'd0;

assign m_axi_WEIGHT_ARID = 1'd0;

assign m_axi_WEIGHT_ARLEN = 32'd150;

assign m_axi_WEIGHT_ARLOCK = 2'd0;

assign m_axi_WEIGHT_ARPROT = 3'd0;

assign m_axi_WEIGHT_ARQOS = 4'd0;

assign m_axi_WEIGHT_ARREGION = 4'd0;

assign m_axi_WEIGHT_ARSIZE = 3'd0;

assign m_axi_WEIGHT_ARUSER = 1'd0;

assign m_axi_WEIGHT_AWADDR = 32'd0;

assign m_axi_WEIGHT_AWBURST = 2'd0;

assign m_axi_WEIGHT_AWCACHE = 4'd0;

assign m_axi_WEIGHT_AWID = 1'd0;

assign m_axi_WEIGHT_AWLEN = 32'd0;

assign m_axi_WEIGHT_AWLOCK = 2'd0;

assign m_axi_WEIGHT_AWPROT = 3'd0;

assign m_axi_WEIGHT_AWQOS = 4'd0;

assign m_axi_WEIGHT_AWREGION = 4'd0;

assign m_axi_WEIGHT_AWSIZE = 3'd0;

assign m_axi_WEIGHT_AWUSER = 1'd0;

assign m_axi_WEIGHT_AWVALID = 1'b0;

assign m_axi_WEIGHT_BREADY = 1'b0;

assign m_axi_WEIGHT_WDATA = 32'd0;

assign m_axi_WEIGHT_WID = 1'd0;

assign m_axi_WEIGHT_WLAST = 1'b0;

assign m_axi_WEIGHT_WSTRB = 4'd0;

assign m_axi_WEIGHT_WUSER = 1'd0;

assign m_axi_WEIGHT_WVALID = 1'b0;

assign next_mul3_fu_2631_p2 = (22'd2675 + phi_mul3_reg_1331);

assign next_mul_fu_1505_p2 = (16'd328 + phi_mul_reg_998);

assign next_urem3_fu_2611_p2 = (11'd1 + phi_urem3_reg_1342);

assign next_urem_fu_1525_p2 = (phi_urem_reg_1009 + 8'd1);

assign not_exitcond_flatten_1_fu_1676_p2 = (exitcond_flatten_mid_7_fu_1650_p2 ^ 1'd1);

assign not_exitcond_flatten_2_fu_1998_p2 = (ap_phi_mux_exitcond_flatten19_phi_fu_1168_p4 ^ 1'd1);

assign not_exitcond_flatten_3_fu_2305_p2 = (ap_phi_mux_exitcond_flatten20_phi_fu_1246_p4 ^ 1'd1);

assign not_exitcond_flatten_4_fu_1638_p2 = (exitcond_flatten13_n_fu_1632_p2 | ap_phi_mux_exitcond_flatten16_phi_fu_1024_p4);

assign not_exitcond_flatten_fu_1594_p2 = (ap_phi_mux_exitcond_flatten16_phi_fu_1024_p4 ^ 1'd1);

assign notlhs_fu_2253_p2 = ((tmp_71_fu_2239_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notrhs_fu_2259_p2 = ((tmp_109_fu_2249_p1 == 23'd0) ? 1'b1 : 1'b0);

assign p_shl14_cast_fu_1865_p1 = tmp_95_fu_1858_p3;

assign p_shl15_cast_fu_1935_p1 = tmp_100_fu_1928_p3;

assign p_shl16_cast_fu_2092_p1 = tmp_105_fu_2085_p3;

assign p_shl17_cast_fu_2103_p1 = tmp_106_fu_2096_p3;

assign p_shl18_cast_fu_2409_p1 = tmp_111_fu_2402_p3;

assign p_shl19_cast_fu_2420_p1 = tmp_112_fu_2413_p3;

assign p_shl20_cast_fu_2539_p1 = tmp_116_fu_2531_p3;

assign p_shl21_cast_fu_2551_p1 = tmp_117_fu_2543_p3;

assign p_shl22_cast_fu_2493_p1 = tmp_122_fu_2486_p3;

assign p_shl23_cast_fu_2504_p1 = tmp_123_fu_2497_p3;

assign p_shl_cast_fu_1924_p1 = tmp_99_fu_1917_p3;

assign r1_mid2_fu_2010_p3 = ((ap_phi_mux_exitcond_flatten19_phi_fu_1168_p4[0:0] === 1'b1) ? r_4_fu_1984_p2 : ap_phi_mux_r7_phi_fu_1223_p4);

assign r4_mid2_fu_2317_p3 = ((ap_phi_mux_exitcond_flatten20_phi_fu_1246_p4[0:0] === 1'b1) ? r_5_fu_2291_p2 : ap_phi_mux_r8_phi_fu_1301_p4);

assign r_4_fu_1984_p2 = (5'd1 + ap_phi_mux_r7_phi_fu_1223_p4);

assign r_5_fu_2291_p2 = (ap_phi_mux_r8_phi_fu_1301_p4 + 5'd2);

assign r_6_fu_1804_p2 = (r_mid_reg_2760 + 5'd1);

assign r_mid2_fu_1809_p3 = ((exitcond_flatten_mid_7_reg_2766[0:0] === 1'b1) ? r_6_fu_1804_p2 : r_mid_reg_2760);

assign r_mid_fu_1624_p3 = ((tmp_89_fu_1618_p2[0:0] === 1'b1) ? 5'd0 : ap_phi_mux_r_phi_fu_1112_p4);

assign sel_tmp1_i_fu_2175_p3 = ((sel_tmp_i_fu_2170_p2[0:0] === 1'b1) ? B_CONV1_0 : B_CONV1_5);

assign sel_tmp2_i_fu_2183_p2 = ((chl_out3_mid2_reg_2957 == 3'd1) ? 1'b1 : 1'b0);

assign sel_tmp3_i_fu_2188_p3 = ((sel_tmp2_i_fu_2183_p2[0:0] === 1'b1) ? B_CONV1_1 : sel_tmp1_i_fu_2175_p3);

assign sel_tmp4_i_fu_2196_p2 = ((chl_out3_mid2_reg_2957 == 3'd2) ? 1'b1 : 1'b0);

assign sel_tmp5_i_fu_2201_p3 = ((sel_tmp4_i_fu_2196_p2[0:0] === 1'b1) ? B_CONV1_2 : sel_tmp3_i_fu_2188_p3);

assign sel_tmp6_i_fu_2209_p2 = ((chl_out3_mid2_reg_2957 == 3'd3) ? 1'b1 : 1'b0);

assign sel_tmp7_i_fu_2214_p3 = ((sel_tmp6_i_fu_2209_p2[0:0] === 1'b1) ? B_CONV1_3 : sel_tmp5_i_fu_2201_p3);

assign sel_tmp8_i_fu_2222_p2 = ((chl_out3_mid2_reg_2957 == 3'd4) ? 1'b1 : 1'b0);

assign sel_tmp_i_fu_2170_p2 = ((chl_out3_mid2_reg_2957 == 3'd0) ? 1'b1 : 1'b0);

assign tmp_100_fu_1928_p3 = {{r_mid2_reg_2837}, {2'd0}};

assign tmp_101_fu_1939_p2 = (p_shl_cast_fu_1924_p1 - p_shl15_cast_fu_1935_p1);

assign tmp_102_fu_1945_p2 = (tmp_101_fu_1939_p2 + tmp_63_cast_fu_1914_p1);

assign tmp_103_fu_1531_p2 = ((next_urem_fu_1525_p2 < 8'd25) ? 1'b1 : 1'b0);

assign tmp_104_fu_2024_p2 = (exitcond1_mid_fu_2004_p2 | ap_phi_mux_exitcond_flatten19_phi_fu_1168_p4);

assign tmp_105_fu_2085_p3 = {{r1_mid2_reg_2945}, {5'd0}};

assign tmp_106_cast_fu_1887_p1 = $signed(tmp_98_fu_1881_p2);

assign tmp_106_fu_2096_p3 = {{r1_mid2_reg_2945}, {2'd0}};

assign tmp_107_fu_2107_p2 = (p_shl16_cast_fu_2092_p1 - p_shl17_cast_fu_2103_p1);

assign tmp_108_fu_2113_p2 = (tmp_39_cast_fu_2081_p1 + tmp_107_fu_2107_p2);

assign tmp_109_fu_2249_p1 = tmp_41_to_int_fu_2235_p1[22:0];

assign tmp_110_cast_fu_1951_p1 = $signed(tmp_102_fu_1945_p2);

assign tmp_110_fu_2325_p2 = (exitcond_mid_fu_2311_p2 | ap_phi_mux_exitcond_flatten20_phi_fu_1246_p4);

assign tmp_111_fu_2402_p3 = {{r4_mid2_reg_3062}, {5'd0}};

assign tmp_112_fu_2413_p3 = {{r4_mid2_reg_3062}, {2'd0}};

assign tmp_113_fu_2424_p2 = (p_shl18_cast_fu_2409_p1 - p_shl19_cast_fu_2420_p1);

assign tmp_114_fu_2430_p2 = (tmp_113_fu_2424_p2 + tmp_44_cast_fu_2398_p1);

assign tmp_115_cast_fu_2119_p1 = $signed(tmp_108_fu_2113_p2);

assign tmp_115_fu_2456_p2 = (tmp_113_fu_2424_p2 + tmp_47_cast_fu_2452_p1);

assign tmp_116_fu_2531_p3 = {{tmp_49_fu_2526_p2}, {5'd0}};

assign tmp_117_fu_2543_p3 = {{tmp_49_fu_2526_p2}, {2'd0}};

assign tmp_118_fu_2555_p2 = (p_shl20_cast_fu_2539_p1 - p_shl21_cast_fu_2551_p1);

assign tmp_119_fu_2561_p2 = (tmp_118_fu_2555_p2 + tmp_44_cast_reg_3111_pp5_iter2_reg);

assign tmp_120_fu_2576_p2 = (tmp_118_fu_2555_p2 + tmp_47_cast_reg_3146_pp5_iter2_reg);

assign tmp_121_fu_2472_p4 = {{c5_mid2_fu_2392_p3[4:1]}};

assign tmp_122_cast_fu_2436_p1 = $signed(tmp_114_fu_2430_p2);

assign tmp_122_fu_2486_p3 = {{tmp_84_reg_3076}, {4'd0}};

assign tmp_123_cast_fu_2462_p1 = $signed(tmp_115_fu_2456_p2);

assign tmp_123_fu_2497_p3 = {{tmp_84_reg_3076}, {1'd0}};

assign tmp_124_fu_2508_p2 = (p_shl22_cast_fu_2493_p1 - p_shl23_cast_fu_2504_p1);

assign tmp_125_fu_2514_p2 = (tmp_124_fu_2508_p2 + tmp_54_cast_fu_2482_p1);

assign tmp_126_fu_2617_p2 = ((next_urem3_fu_2611_p2 < 11'd196) ? 1'b1 : 1'b0);

assign tmp_127_cast_fu_2566_p1 = $signed(tmp_119_fu_2561_p2);

assign tmp_127_fu_2637_p1 = phi_urem3_reg_1342[7:0];

assign tmp_128_cast_fu_2581_p1 = $signed(tmp_120_reg_3206_pp5_iter4_reg);

assign tmp_128_fu_2641_p1 = tmp_127_fu_2637_p1;

assign tmp_132_cast_fu_2590_p1 = $signed(tmp_125_reg_3181_pp5_iter10_reg);

assign tmp_39_cast_fu_2081_p1 = c2_mid2_fu_2076_p3;

assign tmp_41_to_int_fu_2235_p1 = reg_1416;

assign tmp_43_fu_2277_p3 = ((tmp_77_fu_2271_p2[0:0] === 1'b1) ? reg_1416 : 32'd0);

assign tmp_44_cast_fu_2398_p1 = c5_mid2_fu_2392_p3;

assign tmp_46_fu_2446_p2 = (c5_mid2_fu_2392_p3 | 5'd1);

assign tmp_47_cast_fu_2452_p1 = tmp_46_fu_2446_p2;

assign tmp_49_fu_2526_p2 = (r4_mid2_reg_3062_pp5_iter2_reg | 5'd1);

assign tmp_54_cast_fu_2482_p1 = tmp_121_fu_2472_p4;

assign tmp_56_fu_1826_p2 = (c_mid2_fu_1820_p3 + kc_cast_mid2_cast_fu_1800_p1);

assign tmp_58_fu_1832_p2 = (r_mid2_fu_1809_p3 + kr_cast_mid2_fu_1786_p1);

assign tmp_60_cast_fu_1851_p1 = kc_cast_mid2_fu_1794_p3;

assign tmp_61_cast_fu_1855_p1 = kr_cast_mid2_v_reg_2747;

assign tmp_63_cast_fu_1914_p1 = c_mid2_reg_2844;

assign tmp_64_fu_1555_p3 = ((tmp_s_fu_1545_p2[0:0] === 1'b1) ? tmp_reg_2715_pp2_iter1_reg : tmp_87_fu_1550_p2);

assign tmp_71_fu_2239_p4 = {{tmp_41_to_int_fu_2235_p1[30:23]}};

assign tmp_74_fu_2265_p2 = (notrhs_fu_2259_p2 | notlhs_fu_2253_p2);

assign tmp_77_fu_2271_p2 = (tmp_75_fu_1366_p2 & tmp_74_fu_2265_p2);

assign tmp_86_fu_1662_p2 = (tmp_90_fu_1656_p2 | ap_phi_mux_exitcond_flatten16_phi_fu_1024_p4);

assign tmp_87_fu_1550_p2 = (5'd7 + tmp_reg_2715_pp2_iter1_reg);

assign tmp_88_fu_1562_p1 = tmp_64_fu_1555_p3;

assign tmp_89_fu_1618_p2 = (exitcond_flatten13_m_fu_1612_p2 | ap_phi_mux_exitcond_flatten16_phi_fu_1024_p4);

assign tmp_90_fu_1656_p2 = (exitcond_flatten_mid_7_fu_1650_p2 | exitcond_flatten13_m_fu_1612_p2);

assign tmp_91_fu_1688_p2 = (exitcond_flatten_mid_7_fu_1650_p2 | exitcond4_mid5_fu_1682_p2);

assign tmp_92_fu_1694_p2 = (tmp_91_fu_1688_p2 | tmp_89_fu_1618_p2);

assign tmp_93_fu_1838_p3 = {{tmp_58_fu_1832_p2}, {tmp_56_fu_1826_p2}};

assign tmp_94_fu_1846_p1 = tmp_93_fu_1838_p3;

assign tmp_95_fu_1858_p3 = {{kr_cast_mid2_v_reg_2747}, {2'd0}};

assign tmp_96_fu_1869_p2 = (tmp_61_cast_fu_1855_p1 + p_shl14_cast_fu_1865_p1);

assign tmp_97_fu_1875_p2 = (tmp_96_fu_1869_p2 + 6'd25);

assign tmp_98_fu_1881_p2 = (tmp_97_fu_1875_p2 + tmp_60_cast_fu_1851_p1);

assign tmp_99_fu_1917_p3 = {{r_mid2_reg_2837}, {5'd0}};

assign tmp_fu_1511_p1 = phi_urem_reg_1009[4:0];

assign tmp_s_fu_1545_p2 = ((tmp_reg_2715_pp2_iter1_reg < 5'd25) ? 1'b1 : 1'b0);

always @ (posedge ap_clk) begin
    tmp_44_cast_reg_3111[10:5] <= 6'b000000;
    tmp_44_cast_reg_3111_pp5_iter1_reg[10:5] <= 6'b000000;
    tmp_44_cast_reg_3111_pp5_iter2_reg[10:5] <= 6'b000000;
    tmp_47_cast_reg_3146[0] <= 1'b1;
    tmp_47_cast_reg_3146[10:5] <= 6'b000000;
    tmp_47_cast_reg_3146_pp5_iter1_reg[0] <= 1'b1;
    tmp_47_cast_reg_3146_pp5_iter1_reg[10:5] <= 6'b000000;
    tmp_47_cast_reg_3146_pp5_iter2_reg[0] <= 1'b1;
    tmp_47_cast_reg_3146_pp5_iter2_reg[10:5] <= 6'b000000;
    tmp_120_reg_3206[0] <= 1'b1;
    tmp_120_reg_3206_pp5_iter4_reg[0] <= 1'b1;
end

endmodule //conv1
