-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity conv1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    m_axi_FM_DDR_BUFF1_AWVALID : OUT STD_LOGIC;
    m_axi_FM_DDR_BUFF1_AWREADY : IN STD_LOGIC;
    m_axi_FM_DDR_BUFF1_AWADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_FM_DDR_BUFF1_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_FM_DDR_BUFF1_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_FM_DDR_BUFF1_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_FM_DDR_BUFF1_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_FM_DDR_BUFF1_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_FM_DDR_BUFF1_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_FM_DDR_BUFF1_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_FM_DDR_BUFF1_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_FM_DDR_BUFF1_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_FM_DDR_BUFF1_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_FM_DDR_BUFF1_WVALID : OUT STD_LOGIC;
    m_axi_FM_DDR_BUFF1_WREADY : IN STD_LOGIC;
    m_axi_FM_DDR_BUFF1_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_FM_DDR_BUFF1_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_FM_DDR_BUFF1_WLAST : OUT STD_LOGIC;
    m_axi_FM_DDR_BUFF1_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_FM_DDR_BUFF1_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_FM_DDR_BUFF1_ARVALID : OUT STD_LOGIC;
    m_axi_FM_DDR_BUFF1_ARREADY : IN STD_LOGIC;
    m_axi_FM_DDR_BUFF1_ARADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_FM_DDR_BUFF1_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_FM_DDR_BUFF1_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_FM_DDR_BUFF1_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_FM_DDR_BUFF1_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_FM_DDR_BUFF1_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_FM_DDR_BUFF1_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_FM_DDR_BUFF1_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_FM_DDR_BUFF1_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_FM_DDR_BUFF1_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_FM_DDR_BUFF1_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_FM_DDR_BUFF1_RVALID : IN STD_LOGIC;
    m_axi_FM_DDR_BUFF1_RREADY : OUT STD_LOGIC;
    m_axi_FM_DDR_BUFF1_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_FM_DDR_BUFF1_RLAST : IN STD_LOGIC;
    m_axi_FM_DDR_BUFF1_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_FM_DDR_BUFF1_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_FM_DDR_BUFF1_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_FM_DDR_BUFF1_BVALID : IN STD_LOGIC;
    m_axi_FM_DDR_BUFF1_BREADY : OUT STD_LOGIC;
    m_axi_FM_DDR_BUFF1_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_FM_DDR_BUFF1_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_FM_DDR_BUFF1_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_FM_DDR_BUFF2_AWVALID : OUT STD_LOGIC;
    m_axi_FM_DDR_BUFF2_AWREADY : IN STD_LOGIC;
    m_axi_FM_DDR_BUFF2_AWADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_FM_DDR_BUFF2_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_FM_DDR_BUFF2_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_FM_DDR_BUFF2_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_FM_DDR_BUFF2_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_FM_DDR_BUFF2_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_FM_DDR_BUFF2_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_FM_DDR_BUFF2_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_FM_DDR_BUFF2_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_FM_DDR_BUFF2_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_FM_DDR_BUFF2_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_FM_DDR_BUFF2_WVALID : OUT STD_LOGIC;
    m_axi_FM_DDR_BUFF2_WREADY : IN STD_LOGIC;
    m_axi_FM_DDR_BUFF2_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_FM_DDR_BUFF2_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_FM_DDR_BUFF2_WLAST : OUT STD_LOGIC;
    m_axi_FM_DDR_BUFF2_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_FM_DDR_BUFF2_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_FM_DDR_BUFF2_ARVALID : OUT STD_LOGIC;
    m_axi_FM_DDR_BUFF2_ARREADY : IN STD_LOGIC;
    m_axi_FM_DDR_BUFF2_ARADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_FM_DDR_BUFF2_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_FM_DDR_BUFF2_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_FM_DDR_BUFF2_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_FM_DDR_BUFF2_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_FM_DDR_BUFF2_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_FM_DDR_BUFF2_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_FM_DDR_BUFF2_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_FM_DDR_BUFF2_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_FM_DDR_BUFF2_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_FM_DDR_BUFF2_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_FM_DDR_BUFF2_RVALID : IN STD_LOGIC;
    m_axi_FM_DDR_BUFF2_RREADY : OUT STD_LOGIC;
    m_axi_FM_DDR_BUFF2_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_FM_DDR_BUFF2_RLAST : IN STD_LOGIC;
    m_axi_FM_DDR_BUFF2_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_FM_DDR_BUFF2_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_FM_DDR_BUFF2_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_FM_DDR_BUFF2_BVALID : IN STD_LOGIC;
    m_axi_FM_DDR_BUFF2_BREADY : OUT STD_LOGIC;
    m_axi_FM_DDR_BUFF2_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_FM_DDR_BUFF2_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_FM_DDR_BUFF2_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_WEIGHT_AWVALID : OUT STD_LOGIC;
    m_axi_WEIGHT_AWREADY : IN STD_LOGIC;
    m_axi_WEIGHT_AWADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_WEIGHT_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_WEIGHT_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_WEIGHT_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_WEIGHT_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_WEIGHT_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_WEIGHT_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_WEIGHT_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_WEIGHT_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_WEIGHT_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_WEIGHT_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_WEIGHT_WVALID : OUT STD_LOGIC;
    m_axi_WEIGHT_WREADY : IN STD_LOGIC;
    m_axi_WEIGHT_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_WEIGHT_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_WEIGHT_WLAST : OUT STD_LOGIC;
    m_axi_WEIGHT_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_WEIGHT_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_WEIGHT_ARVALID : OUT STD_LOGIC;
    m_axi_WEIGHT_ARREADY : IN STD_LOGIC;
    m_axi_WEIGHT_ARADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_WEIGHT_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_WEIGHT_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_WEIGHT_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_WEIGHT_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_WEIGHT_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_WEIGHT_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_WEIGHT_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_WEIGHT_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_WEIGHT_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_WEIGHT_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_WEIGHT_RVALID : IN STD_LOGIC;
    m_axi_WEIGHT_RREADY : OUT STD_LOGIC;
    m_axi_WEIGHT_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_WEIGHT_RLAST : IN STD_LOGIC;
    m_axi_WEIGHT_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_WEIGHT_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_WEIGHT_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_WEIGHT_BVALID : IN STD_LOGIC;
    m_axi_WEIGHT_BREADY : OUT STD_LOGIC;
    m_axi_WEIGHT_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_WEIGHT_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_WEIGHT_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_BIAS_AWVALID : OUT STD_LOGIC;
    m_axi_BIAS_AWREADY : IN STD_LOGIC;
    m_axi_BIAS_AWADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_BIAS_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_BIAS_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_BIAS_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_BIAS_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_BIAS_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_BIAS_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_BIAS_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_BIAS_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_BIAS_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_BIAS_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_BIAS_WVALID : OUT STD_LOGIC;
    m_axi_BIAS_WREADY : IN STD_LOGIC;
    m_axi_BIAS_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_BIAS_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_BIAS_WLAST : OUT STD_LOGIC;
    m_axi_BIAS_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_BIAS_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_BIAS_ARVALID : OUT STD_LOGIC;
    m_axi_BIAS_ARREADY : IN STD_LOGIC;
    m_axi_BIAS_ARADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_BIAS_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_BIAS_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_BIAS_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_BIAS_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_BIAS_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_BIAS_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_BIAS_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_BIAS_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_BIAS_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_BIAS_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_BIAS_RVALID : IN STD_LOGIC;
    m_axi_BIAS_RREADY : OUT STD_LOGIC;
    m_axi_BIAS_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_BIAS_RLAST : IN STD_LOGIC;
    m_axi_BIAS_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_BIAS_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_BIAS_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_BIAS_BVALID : IN STD_LOGIC;
    m_axi_BIAS_BREADY : OUT STD_LOGIC;
    m_axi_BIAS_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_BIAS_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_BIAS_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    conv_out1_0_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    conv_out1_0_ce0 : OUT STD_LOGIC;
    conv_out1_0_we0 : OUT STD_LOGIC;
    conv_out1_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    conv_out1_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    conv_out1_1_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    conv_out1_1_ce0 : OUT STD_LOGIC;
    conv_out1_1_we0 : OUT STD_LOGIC;
    conv_out1_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    conv_out1_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    conv_out1_2_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    conv_out1_2_ce0 : OUT STD_LOGIC;
    conv_out1_2_we0 : OUT STD_LOGIC;
    conv_out1_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    conv_out1_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    conv_out1_3_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    conv_out1_3_ce0 : OUT STD_LOGIC;
    conv_out1_3_we0 : OUT STD_LOGIC;
    conv_out1_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    conv_out1_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    conv_out1_4_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    conv_out1_4_ce0 : OUT STD_LOGIC;
    conv_out1_4_we0 : OUT STD_LOGIC;
    conv_out1_4_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    conv_out1_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    conv_out1_5_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    conv_out1_5_ce0 : OUT STD_LOGIC;
    conv_out1_5_we0 : OUT STD_LOGIC;
    conv_out1_5_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    conv_out1_5_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of conv1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (52 downto 0) := "00000000000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (52 downto 0) := "00000000000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (52 downto 0) := "00000000000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (52 downto 0) := "00000000000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (52 downto 0) := "00000000000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (52 downto 0) := "00000000000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (52 downto 0) := "00000000000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (52 downto 0) := "00000000000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (52 downto 0) := "00000000000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (52 downto 0) := "00000000000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (52 downto 0) := "00000000000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (52 downto 0) := "00000000000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (52 downto 0) := "00000000000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (52 downto 0) := "00000000000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (52 downto 0) := "00000000000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (52 downto 0) := "00000000000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (52 downto 0) := "00000000000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (52 downto 0) := "00000000000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (52 downto 0) := "00000000000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (52 downto 0) := "00000000000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (52 downto 0) := "00000000000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (52 downto 0) := "00000000000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (52 downto 0) := "00000000000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_pp2_stage0 : STD_LOGIC_VECTOR (52 downto 0) := "00000000000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (52 downto 0) := "00000000000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_pp3_stage0 : STD_LOGIC_VECTOR (52 downto 0) := "00000000000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_pp3_stage1 : STD_LOGIC_VECTOR (52 downto 0) := "00000000000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_pp3_stage2 : STD_LOGIC_VECTOR (52 downto 0) := "00000000000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_pp3_stage3 : STD_LOGIC_VECTOR (52 downto 0) := "00000000000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_pp3_stage4 : STD_LOGIC_VECTOR (52 downto 0) := "00000000000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_pp3_stage5 : STD_LOGIC_VECTOR (52 downto 0) := "00000000000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_pp3_stage6 : STD_LOGIC_VECTOR (52 downto 0) := "00000000000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_pp3_stage7 : STD_LOGIC_VECTOR (52 downto 0) := "00000000000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (52 downto 0) := "00000000000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_pp4_stage0 : STD_LOGIC_VECTOR (52 downto 0) := "00000000000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_pp4_stage1 : STD_LOGIC_VECTOR (52 downto 0) := "00000000000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_pp4_stage2 : STD_LOGIC_VECTOR (52 downto 0) := "00000000000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_pp4_stage3 : STD_LOGIC_VECTOR (52 downto 0) := "00000000000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_pp4_stage4 : STD_LOGIC_VECTOR (52 downto 0) := "00000000000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_pp4_stage5 : STD_LOGIC_VECTOR (52 downto 0) := "00000000000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp4_stage6 : STD_LOGIC_VECTOR (52 downto 0) := "00000000000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp4_stage7 : STD_LOGIC_VECTOR (52 downto 0) := "00000000000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp4_stage8 : STD_LOGIC_VECTOR (52 downto 0) := "00000000001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state55 : STD_LOGIC_VECTOR (52 downto 0) := "00000000010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp5_stage0 : STD_LOGIC_VECTOR (52 downto 0) := "00000000100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp5_stage1 : STD_LOGIC_VECTOR (52 downto 0) := "00000001000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state79 : STD_LOGIC_VECTOR (52 downto 0) := "00000010000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp6_stage0 : STD_LOGIC_VECTOR (52 downto 0) := "00000100000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state83 : STD_LOGIC_VECTOR (52 downto 0) := "00001000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state84 : STD_LOGIC_VECTOR (52 downto 0) := "00010000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state85 : STD_LOGIC_VECTOR (52 downto 0) := "00100000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state86 : STD_LOGIC_VECTOR (52 downto 0) := "01000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state87 : STD_LOGIC_VECTOR (52 downto 0) := "10000000000000000000000000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_2E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101110";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv17_0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000000";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv22_0 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000000000";
    constant ap_const_lv32_400 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000010000000000";
    constant ap_const_lv32_96 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010110";
    constant ap_const_lv32_498 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000010010011000";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_3E800000 : STD_LOGIC_VECTOR (31 downto 0) := "00111110100000000000000000000000";
    constant ap_const_lv11_400 : STD_LOGIC_VECTOR (10 downto 0) := "10000000000";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv8_96 : STD_LOGIC_VECTOR (7 downto 0) := "10010110";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv16_148 : STD_LOGIC_VECTOR (15 downto 0) := "0000000101001000";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv8_19 : STD_LOGIC_VECTOR (7 downto 0) := "00011001";
    constant ap_const_lv5_19 : STD_LOGIC_VECTOR (4 downto 0) := "11001";
    constant ap_const_lv5_7 : STD_LOGIC_VECTOR (4 downto 0) := "00111";
    constant ap_const_lv17_1CB60 : STD_LOGIC_VECTOR (16 downto 0) := "11100101101100000";
    constant ap_const_lv17_1 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    constant ap_const_lv16_5BE0 : STD_LOGIC_VECTOR (15 downto 0) := "0101101111100000";
    constant ap_const_lv8_A8 : STD_LOGIC_VECTOR (7 downto 0) := "10101000";
    constant ap_const_lv13_1260 : STD_LOGIC_VECTOR (12 downto 0) := "1001001100000";
    constant ap_const_lv13_1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_const_lv6_19 : STD_LOGIC_VECTOR (5 downto 0) := "011001";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv11_498 : STD_LOGIC_VECTOR (10 downto 0) := "10010011000";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv7_54 : STD_LOGIC_VECTOR (6 downto 0) := "1010100";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv11_C4 : STD_LOGIC_VECTOR (10 downto 0) := "00011000100";
    constant ap_const_lv22_A73 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000101001110011";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (52 downto 0) := "00000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal pic_in_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal pic_in_ce0 : STD_LOGIC;
    signal pic_in_we0 : STD_LOGIC;
    signal pic_in_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal W_CONV1_0_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal W_CONV1_0_ce0 : STD_LOGIC;
    signal W_CONV1_0_we0 : STD_LOGIC;
    signal W_CONV1_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal W_CONV1_1_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal W_CONV1_1_ce0 : STD_LOGIC;
    signal W_CONV1_1_we0 : STD_LOGIC;
    signal W_CONV1_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal W_CONV1_2_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal W_CONV1_2_ce0 : STD_LOGIC;
    signal W_CONV1_2_we0 : STD_LOGIC;
    signal W_CONV1_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal W_CONV1_3_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal W_CONV1_3_ce0 : STD_LOGIC;
    signal W_CONV1_3_we0 : STD_LOGIC;
    signal W_CONV1_3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal W_CONV1_4_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal W_CONV1_4_ce0 : STD_LOGIC;
    signal W_CONV1_4_we0 : STD_LOGIC;
    signal W_CONV1_4_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal W_CONV1_5_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal W_CONV1_5_ce0 : STD_LOGIC;
    signal W_CONV1_5_we0 : STD_LOGIC;
    signal W_CONV1_5_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_buff_0_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal conv1_buff_0_ce0 : STD_LOGIC;
    signal conv1_buff_0_we0 : STD_LOGIC;
    signal conv1_buff_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_buff_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_buff_0_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal conv1_buff_0_ce1 : STD_LOGIC;
    signal conv1_buff_0_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_buff_1_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal conv1_buff_1_ce0 : STD_LOGIC;
    signal conv1_buff_1_we0 : STD_LOGIC;
    signal conv1_buff_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_buff_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_buff_1_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal conv1_buff_1_ce1 : STD_LOGIC;
    signal conv1_buff_1_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_buff_2_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal conv1_buff_2_ce0 : STD_LOGIC;
    signal conv1_buff_2_we0 : STD_LOGIC;
    signal conv1_buff_2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_buff_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_buff_2_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal conv1_buff_2_ce1 : STD_LOGIC;
    signal conv1_buff_2_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_buff_3_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal conv1_buff_3_ce0 : STD_LOGIC;
    signal conv1_buff_3_we0 : STD_LOGIC;
    signal conv1_buff_3_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_buff_3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_buff_3_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal conv1_buff_3_ce1 : STD_LOGIC;
    signal conv1_buff_3_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_buff_4_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal conv1_buff_4_ce0 : STD_LOGIC;
    signal conv1_buff_4_we0 : STD_LOGIC;
    signal conv1_buff_4_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_buff_4_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_buff_4_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal conv1_buff_4_ce1 : STD_LOGIC;
    signal conv1_buff_4_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_buff_5_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal conv1_buff_5_ce0 : STD_LOGIC;
    signal conv1_buff_5_we0 : STD_LOGIC;
    signal conv1_buff_5_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_buff_5_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_buff_5_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal conv1_buff_5_ce1 : STD_LOGIC;
    signal conv1_buff_5_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal B_CONV1_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal B_CONV1_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal B_CONV1_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal B_CONV1_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal B_CONV1_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal B_CONV1_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal FM_DDR_BUFF1_blk_n_AR : STD_LOGIC;
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal FM_DDR_BUFF1_blk_n_R : STD_LOGIC;
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal exitcond7_reg_2696 : STD_LOGIC_VECTOR (0 downto 0);
    signal FM_DDR_BUFF2_blk_n_AW : STD_LOGIC;
    signal ap_CS_fsm_state79 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state79 : signal is "none";
    signal FM_DDR_BUFF2_blk_n_W : STD_LOGIC;
    signal ap_enable_reg_pp6_iter2 : STD_LOGIC := '0';
    signal ap_block_pp6_stage0 : BOOLEAN;
    signal exitcond10_reg_3352 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond10_reg_3352_pp6_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal FM_DDR_BUFF2_blk_n_B : STD_LOGIC;
    signal ap_CS_fsm_state87 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state87 : signal is "none";
    signal WEIGHT_blk_n_AR : STD_LOGIC;
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal WEIGHT_blk_n_R : STD_LOGIC;
    signal ap_CS_fsm_pp2_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage0 : signal is "none";
    signal ap_enable_reg_pp2_iter1 : STD_LOGIC := '0';
    signal ap_block_pp2_stage0 : BOOLEAN;
    signal exitcond8_reg_2710 : STD_LOGIC_VECTOR (0 downto 0);
    signal BIAS_blk_n_AR : STD_LOGIC;
    signal BIAS_blk_n_R : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal indvar_reg_955 : STD_LOGIC_VECTOR (2 downto 0);
    signal indvar8_reg_967 : STD_LOGIC_VECTOR (10 downto 0);
    signal indvar8_reg_967_pp1_iter1_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_block_state17_pp1_stage0_iter0 : BOOLEAN;
    signal ap_block_state18_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_state19_pp1_stage0_iter2 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal indvar2_reg_979 : STD_LOGIC_VECTOR (7 downto 0);
    signal phi_mul_reg_990 : STD_LOGIC_VECTOR (15 downto 0);
    signal phi_urem_reg_1001 : STD_LOGIC_VECTOR (7 downto 0);
    signal indvar_flatten9_reg_1012 : STD_LOGIC_VECTOR (16 downto 0);
    signal kr_reg_1023 : STD_LOGIC_VECTOR (2 downto 0);
    signal indvar_flatten1_reg_1035 : STD_LOGIC_VECTOR (15 downto 0);
    signal kc_reg_1047 : STD_LOGIC_VECTOR (2 downto 0);
    signal indvar_flatten2_reg_1058 : STD_LOGIC_VECTOR (12 downto 0);
    signal r_reg_1069 : STD_LOGIC_VECTOR (4 downto 0);
    signal indvar_flatten_reg_1080 : STD_LOGIC_VECTOR (7 downto 0);
    signal c_reg_1092 : STD_LOGIC_VECTOR (4 downto 0);
    signal chl_out2_reg_1103 : STD_LOGIC_VECTOR (2 downto 0);
    signal indvar_flatten3_reg_1115 : STD_LOGIC_VECTOR (12 downto 0);
    signal r1_reg_1126 : STD_LOGIC_VECTOR (4 downto 0);
    signal indvar_flatten4_reg_1137 : STD_LOGIC_VECTOR (7 downto 0);
    signal c2_reg_1148 : STD_LOGIC_VECTOR (4 downto 0);
    signal chl_out3_reg_1159 : STD_LOGIC_VECTOR (2 downto 0);
    signal indvar_flatten5_reg_1170 : STD_LOGIC_VECTOR (10 downto 0);
    signal r4_reg_1181 : STD_LOGIC_VECTOR (4 downto 0);
    signal indvar_flatten6_reg_1192 : STD_LOGIC_VECTOR (6 downto 0);
    signal c5_reg_1203 : STD_LOGIC_VECTOR (4 downto 0);
    signal chl_out6_reg_1214 : STD_LOGIC_VECTOR (2 downto 0);
    signal indvar4_reg_1226 : STD_LOGIC_VECTOR (10 downto 0);
    signal phi_mul3_reg_1237 : STD_LOGIC_VECTOR (21 downto 0);
    signal phi_urem3_reg_1248 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_1267_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1311 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp3_stage6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp3_stage6 : signal is "none";
    signal ap_enable_reg_pp3_iter0 : STD_LOGIC := '0';
    signal ap_block_state37_pp3_stage6_iter0 : BOOLEAN;
    signal ap_block_pp3_stage6_11001 : BOOLEAN;
    signal exitcond_flatten_reg_2755 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp5_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp5_stage1 : signal is "none";
    signal ap_enable_reg_pp5_iter10 : STD_LOGIC := '0';
    signal ap_block_state57_pp5_stage1_iter0 : BOOLEAN;
    signal ap_block_state59_pp5_stage1_iter1 : BOOLEAN;
    signal ap_block_state61_pp5_stage1_iter2 : BOOLEAN;
    signal ap_block_state63_pp5_stage1_iter3 : BOOLEAN;
    signal ap_block_state65_pp5_stage1_iter4 : BOOLEAN;
    signal ap_block_state67_pp5_stage1_iter5 : BOOLEAN;
    signal ap_block_state69_pp5_stage1_iter6 : BOOLEAN;
    signal ap_block_state71_pp5_stage1_iter7 : BOOLEAN;
    signal ap_block_state73_pp5_stage1_iter8 : BOOLEAN;
    signal ap_block_state75_pp5_stage1_iter9 : BOOLEAN;
    signal ap_block_state77_pp5_stage1_iter10 : BOOLEAN;
    signal ap_block_pp5_stage1_11001 : BOOLEAN;
    signal exitcond_flatten13_reg_3118 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten13_reg_3118_pp5_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1259_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1322 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp3_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp3_stage3 : signal is "none";
    signal ap_enable_reg_pp3_iter1 : STD_LOGIC := '0';
    signal ap_block_state34_pp3_stage3_iter0 : BOOLEAN;
    signal ap_block_state42_pp3_stage3_iter1 : BOOLEAN;
    signal ap_block_pp3_stage3_11001 : BOOLEAN;
    signal exitcond_flatten_reg_2755_pp3_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp4_stage7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp4_stage7 : signal is "none";
    signal ap_enable_reg_pp4_iter0 : STD_LOGIC := '0';
    signal ap_block_state52_pp4_stage7_iter0 : BOOLEAN;
    signal ap_block_pp4_stage7_11001 : BOOLEAN;
    signal exitcond_flatten11_reg_2991 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp5_iter3 : STD_LOGIC := '0';
    signal exitcond_flatten13_reg_3118_pp5_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond9_fu_1334_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond9_reg_2687 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state8_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal indvar_next_fu_1340_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal indvar_next_reg_2691 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal exitcond7_fu_1382_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond7_reg_2696_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_next4_fu_1388_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal indvar_next4_reg_2700 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal FM_DDR_BUFF1_read_reg_2705 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond8_fu_1399_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state27_pp2_stage0_iter0 : BOOLEAN;
    signal ap_block_state28_pp2_stage0_iter1 : BOOLEAN;
    signal ap_block_state29_pp2_stage0_iter2 : BOOLEAN;
    signal ap_block_pp2_stage0_11001 : BOOLEAN;
    signal exitcond8_reg_2710_pp2_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_next5_fu_1405_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_enable_reg_pp2_iter0 : STD_LOGIC := '0';
    signal next_mul_fu_1411_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_fu_1417_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_reg_2724 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_reg_2724_pp2_iter1_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal div_t_reg_2731 : STD_LOGIC_VECTOR (2 downto 0);
    signal div_t_reg_2731_pp2_iter1_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal idx_urem_fu_1443_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal WEIGHT_read_reg_2740 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_61_fu_1486_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_61_reg_2750 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_pp3_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp3_stage0 : signal is "none";
    signal ap_block_state31_pp3_stage0_iter0 : BOOLEAN;
    signal ap_block_state39_pp3_stage0_iter1 : BOOLEAN;
    signal ap_block_pp3_stage0_11001 : BOOLEAN;
    signal exitcond_flatten_fu_1492_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_next1_1_fu_1498_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal indvar_flatten_next1_1_reg_2759 : STD_LOGIC_VECTOR (16 downto 0);
    signal kr_2_fu_1504_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal kr_2_reg_2764 : STD_LOGIC_VECTOR (2 downto 0);
    signal exitcond_flatten8_fu_1510_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten8_reg_2770 : STD_LOGIC_VECTOR (0 downto 0);
    signal kc_mid_fu_1516_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal kc_mid_reg_2778 : STD_LOGIC_VECTOR (2 downto 0);
    signal not_exitcond_flatten_fu_1524_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_exitcond_flatten_reg_2783 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten32_m_fu_1548_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten32_m_reg_2788 : STD_LOGIC_VECTOR (0 downto 0);
    signal kc_2_fu_1554_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal kc_2_reg_2795 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_92_fu_1560_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_92_reg_2801 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_mid_fu_1566_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_mid_reg_2807 : STD_LOGIC_VECTOR (4 downto 0);
    signal not_exitcond_flatten_4_fu_1580_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_exitcond_flatten_4_reg_2813 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_mid_7_fu_1586_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_mid_7_reg_2818 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_86_fu_1598_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_86_reg_2827 : STD_LOGIC_VECTOR (0 downto 0);
    signal c_mid3_fu_1604_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal c_mid3_reg_2832 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_95_fu_1612_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_95_reg_2838 : STD_LOGIC_VECTOR (4 downto 0);
    signal indvar_flatten30_op_fu_1618_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal indvar_flatten30_op_reg_2843 : STD_LOGIC_VECTOR (12 downto 0);
    signal kr_cast_mid2_fu_1624_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal kr_cast_mid2_reg_2848 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_pp3_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp3_stage1 : signal is "none";
    signal ap_block_state32_pp3_stage1_iter0 : BOOLEAN;
    signal ap_block_state40_pp3_stage1_iter1 : BOOLEAN;
    signal ap_block_pp3_stage1_11001 : BOOLEAN;
    signal kc_cast_mid2_fu_1679_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal kc_cast_mid2_reg_2853 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_52_mid2_fu_1757_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_52_mid2_reg_2888 : STD_LOGIC_VECTOR (4 downto 0);
    signal exitcond4_mid5_fu_1775_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond4_mid5_reg_2895 : STD_LOGIC_VECTOR (0 downto 0);
    signal c_6_fu_1781_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal c_6_reg_2900 : STD_LOGIC_VECTOR (4 downto 0);
    signal chl_out2_mid2_fu_1796_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal chl_out2_mid2_reg_2905 : STD_LOGIC_VECTOR (2 downto 0);
    signal chl_out2_mid2_reg_2905_pp3_iter1_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal chl_out_3_fu_1831_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal chl_out_3_reg_2916 : STD_LOGIC_VECTOR (2 downto 0);
    signal indvar_flatten_next_fu_1843_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal indvar_flatten_next_reg_2921 : STD_LOGIC_VECTOR (7 downto 0);
    signal indvar_flatten68_op_fu_1850_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal indvar_flatten68_op_reg_2926 : STD_LOGIC_VECTOR (15 downto 0);
    signal pic_in_load_reg_2931 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp3_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp3_stage2 : signal is "none";
    signal ap_block_state33_pp3_stage2_iter0 : BOOLEAN;
    signal ap_block_state41_pp3_stage2_iter1 : BOOLEAN;
    signal ap_block_pp3_stage2_11001 : BOOLEAN;
    signal tmp_68_fu_1856_p8 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_68_reg_2936 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_63_mid2_fu_1901_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_63_mid2_reg_2941 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_pp3_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp3_stage5 : signal is "none";
    signal ap_block_state36_pp3_stage5_iter0 : BOOLEAN;
    signal ap_block_pp3_stage5_11001 : BOOLEAN;
    signal conv1_buff_0_addr_reg_2946 : STD_LOGIC_VECTOR (9 downto 0);
    signal conv1_buff_1_addr_reg_2951 : STD_LOGIC_VECTOR (9 downto 0);
    signal conv1_buff_2_addr_reg_2956 : STD_LOGIC_VECTOR (9 downto 0);
    signal conv1_buff_3_addr_reg_2961 : STD_LOGIC_VECTOR (9 downto 0);
    signal conv1_buff_4_addr_reg_2966 : STD_LOGIC_VECTOR (9 downto 0);
    signal conv1_buff_5_addr_reg_2971 : STD_LOGIC_VECTOR (9 downto 0);
    signal indvar_flatten_next9_fu_1926_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal indvar_flatten_next9_reg_2976 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_69_fu_1932_p8 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_69_reg_2981 : STD_LOGIC_VECTOR (31 downto 0);
    signal indvar_flatten_next1_fu_1949_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal indvar_flatten_next1_reg_2986 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_pp3_stage7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp3_stage7 : signal is "none";
    signal ap_block_state38_pp3_stage7_iter0 : BOOLEAN;
    signal ap_block_pp3_stage7_11001 : BOOLEAN;
    signal exitcond_flatten11_fu_1955_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp4_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp4_stage0 : signal is "none";
    signal ap_block_state45_pp4_stage0_iter0 : BOOLEAN;
    signal ap_block_state54_pp4_stage0_iter1 : BOOLEAN;
    signal ap_block_pp4_stage0_11001 : BOOLEAN;
    signal indvar_flatten_next1_3_fu_1961_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal indvar_flatten_next1_3_reg_2995 : STD_LOGIC_VECTOR (12 downto 0);
    signal exitcond_flatten12_fu_1973_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten12_reg_3000 : STD_LOGIC_VECTOR (0 downto 0);
    signal c2_mid_fu_1979_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal c2_mid_reg_3005 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_39_mid2_v_fu_1987_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_39_mid2_v_reg_3010 : STD_LOGIC_VECTOR (4 downto 0);
    signal exitcond1_mid_fu_2007_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond1_mid_reg_3017 : STD_LOGIC_VECTOR (0 downto 0);
    signal c_4_fu_2013_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal c_4_reg_3022 : STD_LOGIC_VECTOR (4 downto 0);
    signal chl_out3_mid2_fu_2025_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal chl_out3_mid2_reg_3027 : STD_LOGIC_VECTOR (2 downto 0);
    signal indvar_flatten131_op_fu_2033_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal indvar_flatten131_op_reg_3038 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_46_mid2_fu_2067_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_46_mid2_reg_3043 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_pp4_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp4_stage1 : signal is "none";
    signal ap_block_state46_pp4_stage1_iter0 : BOOLEAN;
    signal ap_block_pp4_stage1_11001 : BOOLEAN;
    signal conv1_buff_0_addr_1_reg_3048 : STD_LOGIC_VECTOR (9 downto 0);
    signal conv1_buff_1_addr_1_reg_3053 : STD_LOGIC_VECTOR (9 downto 0);
    signal conv1_buff_2_addr_1_reg_3058 : STD_LOGIC_VECTOR (9 downto 0);
    signal conv1_buff_3_addr_1_reg_3063 : STD_LOGIC_VECTOR (9 downto 0);
    signal conv1_buff_4_addr_1_reg_3068 : STD_LOGIC_VECTOR (9 downto 0);
    signal conv1_buff_5_addr_1_reg_3073 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_71_fu_2092_p8 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_71_reg_3078 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp4_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp4_stage2 : signal is "none";
    signal ap_block_state47_pp4_stage2_iter0 : BOOLEAN;
    signal ap_block_pp4_stage2_11001 : BOOLEAN;
    signal UnifiedRetVal_i_fu_2190_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal UnifiedRetVal_i_reg_3083 : STD_LOGIC_VECTOR (31 downto 0);
    signal chl_out_fu_2198_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal chl_out_reg_3088 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_56_fu_2245_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_56_reg_3093 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp4_stage8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp4_stage8 : signal is "none";
    signal ap_block_state53_pp4_stage8_iter0 : BOOLEAN;
    signal ap_block_pp4_stage8_11001 : BOOLEAN;
    signal indvar_flatten_next1_2_fu_2253_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal indvar_flatten_next1_2_reg_3103 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_48_fu_2259_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_48_reg_3108 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_pp5_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp5_stage0 : signal is "none";
    signal ap_block_state56_pp5_stage0_iter0 : BOOLEAN;
    signal ap_block_state58_pp5_stage0_iter1 : BOOLEAN;
    signal ap_block_state60_pp5_stage0_iter2 : BOOLEAN;
    signal ap_block_state62_pp5_stage0_iter3 : BOOLEAN;
    signal ap_block_state64_pp5_stage0_iter4 : BOOLEAN;
    signal ap_block_state66_pp5_stage0_iter5 : BOOLEAN;
    signal ap_block_state68_pp5_stage0_iter6 : BOOLEAN;
    signal ap_block_state70_pp5_stage0_iter7 : BOOLEAN;
    signal ap_block_state72_pp5_stage0_iter8 : BOOLEAN;
    signal ap_block_state74_pp5_stage0_iter9 : BOOLEAN;
    signal ap_block_state76_pp5_stage0_iter10 : BOOLEAN;
    signal ap_block_state78_pp5_stage0_iter11 : BOOLEAN;
    signal ap_block_pp5_stage0_11001 : BOOLEAN;
    signal tmp_73_reg_3113 : STD_LOGIC_VECTOR (3 downto 0);
    signal exitcond_flatten13_fu_2275_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten13_reg_3118_pp5_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten13_reg_3118_pp5_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten13_reg_3118_pp5_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten13_reg_3118_pp5_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten13_reg_3118_pp5_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten13_reg_3118_pp5_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten13_reg_3118_pp5_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten13_reg_3118_pp5_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_next1_5_fu_2281_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal indvar_flatten_next1_5_reg_3122 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_enable_reg_pp5_iter0 : STD_LOGIC := '0';
    signal exitcond_flatten14_fu_2293_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten14_reg_3127 : STD_LOGIC_VECTOR (0 downto 0);
    signal c5_mid_fu_2299_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal c5_mid_reg_3136 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_40_mid2_v_fu_2307_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_40_mid2_v_reg_3142 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_40_mid2_v_reg_3142_pp5_iter1_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_40_mid2_v_reg_3142_pp5_iter2_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_44_mid2_v_reg_3150 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_44_mid2_v_reg_3150_pp5_iter1_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_44_mid2_v_reg_3150_pp5_iter2_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_44_mid2_v_reg_3150_pp5_iter3_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_44_mid2_v_reg_3150_pp5_iter4_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_44_mid2_v_reg_3150_pp5_iter5_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_44_mid2_v_reg_3150_pp5_iter6_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_44_mid2_v_reg_3150_pp5_iter7_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_44_mid2_v_reg_3150_pp5_iter8_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_44_mid2_v_reg_3150_pp5_iter9_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_44_mid2_v_reg_3150_pp5_iter10_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal indvar_flatten182_op_fu_2325_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal indvar_flatten182_op_reg_3156 : STD_LOGIC_VECTOR (6 downto 0);
    signal chl_out6_mid2_fu_2398_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal chl_out6_mid2_reg_3161 : STD_LOGIC_VECTOR (2 downto 0);
    signal chl_out6_mid2_reg_3161_pp5_iter1_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal chl_out6_mid2_reg_3161_pp5_iter2_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal chl_out6_mid2_reg_3161_pp5_iter3_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal chl_out6_mid2_reg_3161_pp5_iter4_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal chl_out6_mid2_reg_3161_pp5_iter5_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal chl_out6_mid2_reg_3161_pp5_iter6_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal chl_out6_mid2_reg_3161_pp5_iter7_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal chl_out6_mid2_reg_3161_pp5_iter8_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal chl_out6_mid2_reg_3161_pp5_iter9_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal chl_out6_mid2_reg_3161_pp5_iter10_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_47_mid2_fu_2406_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_47_mid2_reg_3167 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_47_mid2_cast_fu_2413_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_47_mid2_cast_reg_3172 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_47_mid2_cast_reg_3172_pp5_iter1_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_47_mid2_cast_reg_3172_pp5_iter2_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_49_mid2_cast_fu_2447_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_49_mid2_cast_reg_3207 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_49_mid2_cast_reg_3207_pp5_iter1_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_49_mid2_cast_reg_3207_pp5_iter2_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_53_mid2_fu_2477_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_53_mid2_reg_3242 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_53_mid2_reg_3242_pp5_iter1_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_53_mid2_reg_3242_pp5_iter2_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_53_mid2_reg_3242_pp5_iter3_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_53_mid2_reg_3242_pp5_iter4_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_53_mid2_reg_3242_pp5_iter5_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_53_mid2_reg_3242_pp5_iter6_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_53_mid2_reg_3242_pp5_iter7_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_53_mid2_reg_3242_pp5_iter8_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_53_mid2_reg_3242_pp5_iter9_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_53_mid2_reg_3242_pp5_iter10_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal chl_out_2_fu_2485_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal chl_out_2_reg_3247 : STD_LOGIC_VECTOR (2 downto 0);
    signal indvar_flatten_next1_4_fu_2491_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal indvar_flatten_next1_4_reg_3252 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fu_1277_p8 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_81_reg_3257 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp5_iter1 : STD_LOGIC := '0';
    signal grp_fu_1294_p8 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_82_reg_3262 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_126_fu_2547_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_126_reg_3297 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_126_reg_3297_pp5_iter4_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_83_reg_3302 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_84_reg_3337 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp5_iter5 : STD_LOGIC := '0';
    signal tmp_58_reg_3342 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp5_iter6 : STD_LOGIC := '0';
    signal grp_fu_1263_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_59_reg_3347 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond10_fu_2608_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp6_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp6_stage0 : signal is "none";
    signal ap_block_state80_pp6_stage0_iter0 : BOOLEAN;
    signal ap_block_state81_pp6_stage0_iter1 : BOOLEAN;
    signal ap_block_state82_pp6_stage0_iter2 : BOOLEAN;
    signal ap_sig_ioackin_m_axi_FM_DDR_BUFF2_WREADY : STD_LOGIC;
    signal ap_block_state82_io : BOOLEAN;
    signal ap_block_pp6_stage0_11001 : BOOLEAN;
    signal indvar_next6_fu_2614_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_enable_reg_pp6_iter0 : STD_LOGIC := '0';
    signal idx_urem3_fu_2632_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal next_mul3_fu_2640_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal div54_t_reg_3401 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_78_fu_2670_p8 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_78_reg_3406 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state8 : STD_LOGIC;
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_condition_pp1_exit_iter0_state17 : STD_LOGIC;
    signal ap_enable_reg_pp1_iter2 : STD_LOGIC := '0';
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal ap_block_pp2_stage0_subdone : BOOLEAN;
    signal ap_condition_pp2_exit_iter0_state27 : STD_LOGIC;
    signal ap_enable_reg_pp2_iter2 : STD_LOGIC := '0';
    signal ap_CS_fsm_state30 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state30 : signal is "none";
    signal ap_block_pp3_stage0_subdone : BOOLEAN;
    signal ap_condition_pp3_exit_iter0_state31 : STD_LOGIC;
    signal ap_block_pp3_stage7_subdone : BOOLEAN;
    signal ap_block_state35_pp3_stage4_iter0 : BOOLEAN;
    signal ap_block_state43_pp3_stage4_iter1 : BOOLEAN;
    signal ap_block_pp3_stage4_subdone : BOOLEAN;
    signal ap_CS_fsm_pp3_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp3_stage4 : signal is "none";
    signal ap_CS_fsm_state44 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state44 : signal is "none";
    signal ap_block_pp4_stage0_subdone : BOOLEAN;
    signal ap_condition_pp4_exit_iter0_state45 : STD_LOGIC;
    signal ap_enable_reg_pp4_iter1 : STD_LOGIC := '0';
    signal ap_block_pp4_stage8_subdone : BOOLEAN;
    signal ap_CS_fsm_state55 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state55 : signal is "none";
    signal ap_block_pp5_stage0_subdone : BOOLEAN;
    signal ap_condition_pp5_exit_iter0_state56 : STD_LOGIC;
    signal ap_block_pp5_stage1_subdone : BOOLEAN;
    signal ap_enable_reg_pp5_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp5_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp5_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp5_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp5_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp5_iter11 : STD_LOGIC := '0';
    signal ap_sig_ioackin_m_axi_FM_DDR_BUFF2_AWREADY : STD_LOGIC;
    signal ap_block_pp6_stage0_subdone : BOOLEAN;
    signal ap_condition_pp6_exit_iter0_state80 : STD_LOGIC;
    signal ap_enable_reg_pp6_iter1 : STD_LOGIC := '0';
    signal ap_phi_mux_indvar_phi_fu_959_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_phi_mux_indvar8_phi_fu_971_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_phi_mux_indvar_flatten9_phi_fu_1016_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_block_pp3_stage0 : BOOLEAN;
    signal ap_phi_mux_kr_phi_fu_1027_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_phi_mux_indvar_flatten1_phi_fu_1039_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_mux_kc_phi_fu_1051_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_phi_mux_indvar_flatten2_phi_fu_1062_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_phi_mux_r_phi_fu_1073_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_phi_mux_indvar_flatten_phi_fu_1084_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_c_phi_fu_1096_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_phi_mux_chl_out2_phi_fu_1107_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_block_pp3_stage1 : BOOLEAN;
    signal ap_phi_mux_indvar_flatten3_phi_fu_1119_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_block_pp4_stage0 : BOOLEAN;
    signal ap_phi_mux_r1_phi_fu_1130_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_phi_mux_indvar_flatten4_phi_fu_1141_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_c2_phi_fu_1152_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_phi_mux_chl_out3_phi_fu_1163_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_phi_mux_indvar_flatten5_phi_fu_1174_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_block_pp5_stage0 : BOOLEAN;
    signal ap_phi_mux_r4_phi_fu_1185_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_phi_mux_indvar_flatten6_phi_fu_1196_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_phi_mux_c5_phi_fu_1207_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_phi_mux_chl_out6_phi_fu_1218_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_block_pp5_stage1 : BOOLEAN;
    signal indvar1_fu_1394_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_88_fu_1468_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_105_cast_fu_1701_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_121_cast_fu_1826_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_122_cast_fu_1916_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp3_stage5 : BOOLEAN;
    signal tmp_127_cast_fu_2082_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp4_stage1 : BOOLEAN;
    signal tmp_140_cast_fu_2423_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_142_cast_fu_2457_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_141_cast_fu_2537_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_143_cast_fu_2552_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_144_cast_fu_2598_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_130_fu_2650_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ioackin_m_axi_BIAS_ARREADY : STD_LOGIC := '0';
    signal ap_sig_ioackin_m_axi_BIAS_ARREADY : STD_LOGIC;
    signal ap_reg_ioackin_m_axi_FM_DDR_BUFF1_ARREADY : STD_LOGIC := '0';
    signal ap_sig_ioackin_m_axi_FM_DDR_BUFF1_ARREADY : STD_LOGIC;
    signal ap_reg_ioackin_m_axi_WEIGHT_ARREADY : STD_LOGIC := '0';
    signal ap_sig_ioackin_m_axi_WEIGHT_ARREADY : STD_LOGIC;
    signal ap_reg_ioackin_m_axi_FM_DDR_BUFF2_AWREADY : STD_LOGIC := '0';
    signal ap_reg_ioackin_m_axi_FM_DDR_BUFF2_WREADY : STD_LOGIC := '0';
    signal ap_block_pp6_stage0_01001 : BOOLEAN;
    signal ap_block_pp4_stage2 : BOOLEAN;
    signal ap_block_pp3_stage4_11001 : BOOLEAN;
    signal ap_block_pp3_stage4 : BOOLEAN;
    signal grp_fu_1259_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1259_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp3_stage7 : BOOLEAN;
    signal ap_CS_fsm_pp4_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp4_stage3 : signal is "none";
    signal ap_block_pp4_stage3 : BOOLEAN;
    signal grp_fu_1267_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1267_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp3_stage3 : BOOLEAN;
    signal ap_block_pp4_stage8 : BOOLEAN;
    signal grp_fu_1277_p7 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fu_1294_p7 : STD_LOGIC_VECTOR (2 downto 0);
    signal next_urem_fu_1431_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_106_fu_1437_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_fu_1451_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_87_fu_1456_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_66_fu_1461_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal kc_cast_fu_1482_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal exitcond_flatten9_fu_1530_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten10_fu_1542_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten32_n_fu_1574_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_mid_fu_1536_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_94_fu_1592_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal kr_cast_fu_1478_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_89_fu_1638_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_mid2_cast_fu_1634_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_shl14_cast_fu_1646_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_90_fu_1650_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal exitcond_fu_1668_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_91_fu_1656_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_41_mid2_cast_fu_1691_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_93_fu_1695_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_41_mid1_cast_fu_1688_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_62_mid_fu_1662_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal exitcond4_mid_fu_1674_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_6_fu_1723_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal kr_cast_mid2_cast_fu_1630_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_110_cast_fu_1734_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_96_fu_1737_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_50_mid1_fu_1728_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_97_fu_1743_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal kc_cast_mid2_cast_fu_1684_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_62_mid3_fu_1711_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal exitcond4_mid4_fu_1718_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_exitcond_flatten_1_fu_1770_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_102_fu_1786_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_103_fu_1791_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_61_mid1_fu_1804_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_62_mid5_fu_1763_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_98_fu_1750_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_62_mid2_fu_1810_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_104_fu_1818_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal indvar_flatten_op_fu_1837_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp3_stage2 : BOOLEAN;
    signal tmp_99_fu_1873_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_100_fu_1884_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_shl_cast_fu_1880_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_shl15_cast_fu_1891_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_101_fu_1895_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_63_mid2_cast_fu_1906_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_105_fu_1910_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_block_pp3_stage6 : BOOLEAN;
    signal r_4_fu_1967_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal exitcond5_fu_2001_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_exitcond_flatten_2_fu_1995_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_110_fu_2019_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_107_fu_2039_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_108_fu_2050_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_shl16_cast_fu_2046_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_shl17_cast_fu_2057_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_46_mid2_cast_fu_2072_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_109_fu_2061_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_111_fu_2076_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal sel_tmp_i_fu_2133_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp2_i_fu_2146_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp1_i_fu_2138_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp4_i_fu_2159_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp3_i_fu_2151_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp6_i_fu_2172_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp5_i_fu_2164_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp8_i_fu_2185_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp7_i_fu_2177_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_54_to_int_fu_2203_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_72_fu_2207_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_112_fu_2217_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal notrhs_fu_2227_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs_fu_2221_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_76_fu_2233_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_77_fu_1272_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_79_fu_2239_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_5_fu_2287_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_113_fu_2331_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_114_fu_2342_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_shl18_cast_fu_2338_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_shl19_cast_fu_2349_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal exitcond6_fu_2376_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_exitcond_flatten_3_fu_2371_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_mid_fu_2382_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_122_fu_2393_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal c_5_fu_2388_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_115_fu_2353_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_123_fu_2417_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_48_mid1_fu_2433_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_49_mid_fu_2359_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_49_mid2_fu_2439_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_125_fu_2451_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_73_mid1_fu_2467_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_53_mid_fu_2365_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_43_mid2_v_fu_2497_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_116_fu_2502_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_117_fu_2514_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_shl20_cast_fu_2510_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_shl21_cast_fu_2522_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_118_fu_2526_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_124_fu_2532_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_119_fu_2561_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_120_fu_2572_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_shl22_cast_fu_2568_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_shl23_cast_fu_2579_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_121_fu_2583_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_53_mid2_cast_fu_2589_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_127_fu_2592_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal next_urem3_fu_2620_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_128_fu_2626_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_129_fu_2646_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp4_stage8_00001 : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (52 downto 0);
    signal ap_block_pp3_stage1_subdone : BOOLEAN;
    signal ap_block_pp3_stage2_subdone : BOOLEAN;
    signal ap_block_pp3_stage3_subdone : BOOLEAN;
    signal ap_block_pp3_stage5_subdone : BOOLEAN;
    signal ap_block_pp3_stage6_subdone : BOOLEAN;
    signal ap_block_pp4_stage1_subdone : BOOLEAN;
    signal ap_block_pp4_stage2_subdone : BOOLEAN;
    signal ap_block_state48_pp4_stage3_iter0 : BOOLEAN;
    signal ap_block_pp4_stage3_subdone : BOOLEAN;
    signal ap_block_state49_pp4_stage4_iter0 : BOOLEAN;
    signal ap_block_pp4_stage4_subdone : BOOLEAN;
    signal ap_block_state50_pp4_stage5_iter0 : BOOLEAN;
    signal ap_block_pp4_stage5_subdone : BOOLEAN;
    signal ap_block_state51_pp4_stage6_iter0 : BOOLEAN;
    signal ap_block_pp4_stage6_subdone : BOOLEAN;
    signal ap_block_pp4_stage7_subdone : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;
    signal ap_idle_pp2 : STD_LOGIC;
    signal ap_enable_pp2 : STD_LOGIC;
    signal ap_idle_pp3 : STD_LOGIC;
    signal ap_enable_pp3 : STD_LOGIC;
    signal ap_idle_pp4 : STD_LOGIC;
    signal ap_enable_pp4 : STD_LOGIC;
    signal ap_idle_pp5 : STD_LOGIC;
    signal ap_enable_pp5 : STD_LOGIC;
    signal ap_idle_pp6 : STD_LOGIC;
    signal ap_enable_pp6 : STD_LOGIC;

    component conv_top_fadd_32nbkb IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component conv_top_fmul_32ncud IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component conv_top_fcmp_32ndEe IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component conv_top_mux_63_3eOg IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (2 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component conv1_pic_in IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component conv1_W_CONV1_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component conv1_conv1_buff_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    pic_in_U : component conv1_pic_in
    generic map (
        DataWidth => 32,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => pic_in_address0,
        ce0 => pic_in_ce0,
        we0 => pic_in_we0,
        d0 => FM_DDR_BUFF1_read_reg_2705,
        q0 => pic_in_q0);

    W_CONV1_0_U : component conv1_W_CONV1_0
    generic map (
        DataWidth => 32,
        AddressRange => 25,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => W_CONV1_0_address0,
        ce0 => W_CONV1_0_ce0,
        we0 => W_CONV1_0_we0,
        d0 => WEIGHT_read_reg_2740,
        q0 => W_CONV1_0_q0);

    W_CONV1_1_U : component conv1_W_CONV1_0
    generic map (
        DataWidth => 32,
        AddressRange => 25,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => W_CONV1_1_address0,
        ce0 => W_CONV1_1_ce0,
        we0 => W_CONV1_1_we0,
        d0 => WEIGHT_read_reg_2740,
        q0 => W_CONV1_1_q0);

    W_CONV1_2_U : component conv1_W_CONV1_0
    generic map (
        DataWidth => 32,
        AddressRange => 25,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => W_CONV1_2_address0,
        ce0 => W_CONV1_2_ce0,
        we0 => W_CONV1_2_we0,
        d0 => WEIGHT_read_reg_2740,
        q0 => W_CONV1_2_q0);

    W_CONV1_3_U : component conv1_W_CONV1_0
    generic map (
        DataWidth => 32,
        AddressRange => 25,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => W_CONV1_3_address0,
        ce0 => W_CONV1_3_ce0,
        we0 => W_CONV1_3_we0,
        d0 => WEIGHT_read_reg_2740,
        q0 => W_CONV1_3_q0);

    W_CONV1_4_U : component conv1_W_CONV1_0
    generic map (
        DataWidth => 32,
        AddressRange => 25,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => W_CONV1_4_address0,
        ce0 => W_CONV1_4_ce0,
        we0 => W_CONV1_4_we0,
        d0 => WEIGHT_read_reg_2740,
        q0 => W_CONV1_4_q0);

    W_CONV1_5_U : component conv1_W_CONV1_0
    generic map (
        DataWidth => 32,
        AddressRange => 25,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => W_CONV1_5_address0,
        ce0 => W_CONV1_5_ce0,
        we0 => W_CONV1_5_we0,
        d0 => WEIGHT_read_reg_2740,
        q0 => W_CONV1_5_q0);

    conv1_buff_0_U : component conv1_conv1_buff_0
    generic map (
        DataWidth => 32,
        AddressRange => 784,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv1_buff_0_address0,
        ce0 => conv1_buff_0_ce0,
        we0 => conv1_buff_0_we0,
        d0 => conv1_buff_0_d0,
        q0 => conv1_buff_0_q0,
        address1 => conv1_buff_0_address1,
        ce1 => conv1_buff_0_ce1,
        q1 => conv1_buff_0_q1);

    conv1_buff_1_U : component conv1_conv1_buff_0
    generic map (
        DataWidth => 32,
        AddressRange => 784,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv1_buff_1_address0,
        ce0 => conv1_buff_1_ce0,
        we0 => conv1_buff_1_we0,
        d0 => conv1_buff_1_d0,
        q0 => conv1_buff_1_q0,
        address1 => conv1_buff_1_address1,
        ce1 => conv1_buff_1_ce1,
        q1 => conv1_buff_1_q1);

    conv1_buff_2_U : component conv1_conv1_buff_0
    generic map (
        DataWidth => 32,
        AddressRange => 784,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv1_buff_2_address0,
        ce0 => conv1_buff_2_ce0,
        we0 => conv1_buff_2_we0,
        d0 => conv1_buff_2_d0,
        q0 => conv1_buff_2_q0,
        address1 => conv1_buff_2_address1,
        ce1 => conv1_buff_2_ce1,
        q1 => conv1_buff_2_q1);

    conv1_buff_3_U : component conv1_conv1_buff_0
    generic map (
        DataWidth => 32,
        AddressRange => 784,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv1_buff_3_address0,
        ce0 => conv1_buff_3_ce0,
        we0 => conv1_buff_3_we0,
        d0 => conv1_buff_3_d0,
        q0 => conv1_buff_3_q0,
        address1 => conv1_buff_3_address1,
        ce1 => conv1_buff_3_ce1,
        q1 => conv1_buff_3_q1);

    conv1_buff_4_U : component conv1_conv1_buff_0
    generic map (
        DataWidth => 32,
        AddressRange => 784,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv1_buff_4_address0,
        ce0 => conv1_buff_4_ce0,
        we0 => conv1_buff_4_we0,
        d0 => conv1_buff_4_d0,
        q0 => conv1_buff_4_q0,
        address1 => conv1_buff_4_address1,
        ce1 => conv1_buff_4_ce1,
        q1 => conv1_buff_4_q1);

    conv1_buff_5_U : component conv1_conv1_buff_0
    generic map (
        DataWidth => 32,
        AddressRange => 784,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv1_buff_5_address0,
        ce0 => conv1_buff_5_ce0,
        we0 => conv1_buff_5_we0,
        d0 => conv1_buff_5_d0,
        q0 => conv1_buff_5_q0,
        address1 => conv1_buff_5_address1,
        ce1 => conv1_buff_5_ce1,
        q1 => conv1_buff_5_q1);

    conv_top_fadd_32nbkb_U1 : component conv_top_fadd_32nbkb
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1259_p0,
        din1 => grp_fu_1259_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_1259_p2);

    conv_top_fadd_32nbkb_U2 : component conv_top_fadd_32nbkb
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_58_reg_3342,
        din1 => tmp_84_reg_3337,
        ce => ap_const_logic_1,
        dout => grp_fu_1263_p2);

    conv_top_fmul_32ncud_U3 : component conv_top_fmul_32ncud
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1267_p0,
        din1 => grp_fu_1267_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_1267_p2);

    conv_top_fcmp_32ndEe_U4 : component conv_top_fcmp_32ndEe
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        din0 => reg_1322,
        din1 => ap_const_lv32_0,
        opcode => ap_const_lv5_2,
        dout => tmp_77_fu_1272_p2);

    conv_top_mux_63_3eOg_U5 : component conv_top_mux_63_3eOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => conv1_buff_0_q1,
        din1 => conv1_buff_1_q1,
        din2 => conv1_buff_2_q1,
        din3 => conv1_buff_3_q1,
        din4 => conv1_buff_4_q1,
        din5 => conv1_buff_5_q1,
        din6 => grp_fu_1277_p7,
        dout => grp_fu_1277_p8);

    conv_top_mux_63_3eOg_U6 : component conv_top_mux_63_3eOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => conv1_buff_0_q0,
        din1 => conv1_buff_1_q0,
        din2 => conv1_buff_2_q0,
        din3 => conv1_buff_3_q0,
        din4 => conv1_buff_4_q0,
        din5 => conv1_buff_5_q0,
        din6 => grp_fu_1294_p7,
        dout => grp_fu_1294_p8);

    conv_top_mux_63_3eOg_U7 : component conv_top_mux_63_3eOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => W_CONV1_0_q0,
        din1 => W_CONV1_1_q0,
        din2 => W_CONV1_2_q0,
        din3 => W_CONV1_3_q0,
        din4 => W_CONV1_4_q0,
        din5 => W_CONV1_5_q0,
        din6 => chl_out2_mid2_reg_2905,
        dout => tmp_68_fu_1856_p8);

    conv_top_mux_63_3eOg_U8 : component conv_top_mux_63_3eOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => conv1_buff_0_q0,
        din1 => conv1_buff_1_q0,
        din2 => conv1_buff_2_q0,
        din3 => conv1_buff_3_q0,
        din4 => conv1_buff_4_q0,
        din5 => conv1_buff_5_q0,
        din6 => chl_out2_mid2_reg_2905,
        dout => tmp_69_fu_1932_p8);

    conv_top_mux_63_3eOg_U9 : component conv_top_mux_63_3eOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => conv1_buff_0_q0,
        din1 => conv1_buff_1_q0,
        din2 => conv1_buff_2_q0,
        din3 => conv1_buff_3_q0,
        din4 => conv1_buff_4_q0,
        din5 => conv1_buff_5_q0,
        din6 => chl_out3_mid2_reg_3027,
        dout => tmp_71_fu_2092_p8);

    conv_top_mux_63_3eOg_U10 : component conv_top_mux_63_3eOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => conv_out1_0_q0,
        din1 => conv_out1_1_q0,
        din2 => conv_out1_2_q0,
        din3 => conv_out1_3_q0,
        din4 => conv_out1_4_q0,
        din5 => conv_out1_5_q0,
        din6 => div54_t_reg_3401,
        dout => tmp_78_fu_2670_p8);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state8) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state8) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state8);
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state17) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp1_exit_iter0_state17)) then 
                        ap_enable_reg_pp1_iter1 <= (ap_const_logic_1 xor ap_condition_pp1_exit_iter0_state17);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                    ap_enable_reg_pp1_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_condition_pp2_exit_iter0_state27) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone))) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp2_exit_iter0_state27)) then 
                        ap_enable_reg_pp2_iter1 <= (ap_const_logic_1 xor ap_condition_pp2_exit_iter0_state27);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
                    ap_enable_reg_pp2_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_logic_1 = ap_condition_pp3_exit_iter0_state31) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone))) then 
                    ap_enable_reg_pp3_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
                    ap_enable_reg_pp3_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter1 <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_CS_fsm_pp3_stage7) and (ap_const_boolean_0 = ap_block_pp3_stage7_subdone)) or ((ap_const_logic_1 = ap_CS_fsm_pp3_stage4) and (ap_const_boolean_0 = ap_block_pp3_stage4_subdone)))) then 
                    ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
                    ap_enable_reg_pp3_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp4_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp4_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_const_logic_1 = ap_condition_pp4_exit_iter0_state45) and (ap_const_boolean_0 = ap_block_pp4_stage0_subdone))) then 
                    ap_enable_reg_pp4_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
                    ap_enable_reg_pp4_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp4_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp4_iter1 <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_const_boolean_0 = ap_block_pp4_stage0_subdone)) or ((ap_const_logic_1 = ap_CS_fsm_pp4_stage8) and (ap_const_boolean_0 = ap_block_pp4_stage8_subdone)))) then 
                    ap_enable_reg_pp4_iter1 <= ap_enable_reg_pp4_iter0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
                    ap_enable_reg_pp4_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp5_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp5_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp5_exit_iter0_state56) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_const_boolean_0 = ap_block_pp5_stage0_subdone))) then 
                    ap_enable_reg_pp5_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
                    ap_enable_reg_pp5_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp5_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp5_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp5_stage1) and (ap_const_boolean_0 = ap_block_pp5_stage1_subdone))) then 
                    ap_enable_reg_pp5_iter1 <= ap_enable_reg_pp5_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp5_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp5_iter10 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp5_stage1) and (ap_const_boolean_0 = ap_block_pp5_stage1_subdone))) then 
                    ap_enable_reg_pp5_iter10 <= ap_enable_reg_pp5_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp5_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp5_iter11 <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_CS_fsm_pp5_stage1) and (ap_const_boolean_0 = ap_block_pp5_stage1_subdone)) or ((ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_const_boolean_0 = ap_block_pp5_stage0_subdone)))) then 
                    ap_enable_reg_pp5_iter11 <= ap_enable_reg_pp5_iter10;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
                    ap_enable_reg_pp5_iter11 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp5_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp5_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp5_stage1) and (ap_const_boolean_0 = ap_block_pp5_stage1_subdone))) then 
                    ap_enable_reg_pp5_iter2 <= ap_enable_reg_pp5_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp5_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp5_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp5_stage1) and (ap_const_boolean_0 = ap_block_pp5_stage1_subdone))) then 
                    ap_enable_reg_pp5_iter3 <= ap_enable_reg_pp5_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp5_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp5_iter4 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp5_stage1) and (ap_const_boolean_0 = ap_block_pp5_stage1_subdone))) then 
                    ap_enable_reg_pp5_iter4 <= ap_enable_reg_pp5_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp5_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp5_iter5 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp5_stage1) and (ap_const_boolean_0 = ap_block_pp5_stage1_subdone))) then 
                    ap_enable_reg_pp5_iter5 <= ap_enable_reg_pp5_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp5_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp5_iter6 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp5_stage1) and (ap_const_boolean_0 = ap_block_pp5_stage1_subdone))) then 
                    ap_enable_reg_pp5_iter6 <= ap_enable_reg_pp5_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp5_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp5_iter7 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp5_stage1) and (ap_const_boolean_0 = ap_block_pp5_stage1_subdone))) then 
                    ap_enable_reg_pp5_iter7 <= ap_enable_reg_pp5_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp5_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp5_iter8 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp5_stage1) and (ap_const_boolean_0 = ap_block_pp5_stage1_subdone))) then 
                    ap_enable_reg_pp5_iter8 <= ap_enable_reg_pp5_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp5_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp5_iter9 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp5_stage1) and (ap_const_boolean_0 = ap_block_pp5_stage1_subdone))) then 
                    ap_enable_reg_pp5_iter9 <= ap_enable_reg_pp5_iter8;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp6_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp6_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp6_exit_iter0_state80) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0) and (ap_const_boolean_0 = ap_block_pp6_stage0_subdone))) then 
                    ap_enable_reg_pp6_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state79) and (ap_sig_ioackin_m_axi_FM_DDR_BUFF2_AWREADY = ap_const_logic_1))) then 
                    ap_enable_reg_pp6_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp6_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp6_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp6_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp6_exit_iter0_state80)) then 
                        ap_enable_reg_pp6_iter1 <= (ap_const_logic_1 xor ap_condition_pp6_exit_iter0_state80);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp6_iter1 <= ap_enable_reg_pp6_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp6_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp6_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp6_stage0_subdone)) then 
                    ap_enable_reg_pp6_iter2 <= ap_enable_reg_pp6_iter1;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state79) and (ap_sig_ioackin_m_axi_FM_DDR_BUFF2_AWREADY = ap_const_logic_1))) then 
                    ap_enable_reg_pp6_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_m_axi_BIAS_ARREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ioackin_m_axi_BIAS_ARREADY <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                    if (not(((ap_start = ap_const_logic_0) or (ap_sig_ioackin_m_axi_BIAS_ARREADY = ap_const_logic_0)))) then 
                        ap_reg_ioackin_m_axi_BIAS_ARREADY <= ap_const_logic_0;
                    elsif (((ap_start = ap_const_logic_1) and (m_axi_BIAS_ARREADY = ap_const_logic_1))) then 
                        ap_reg_ioackin_m_axi_BIAS_ARREADY <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_m_axi_FM_DDR_BUFF1_ARREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ioackin_m_axi_FM_DDR_BUFF1_ARREADY <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
                    if ((ap_sig_ioackin_m_axi_FM_DDR_BUFF1_ARREADY = ap_const_logic_1)) then 
                        ap_reg_ioackin_m_axi_FM_DDR_BUFF1_ARREADY <= ap_const_logic_0;
                    elsif ((m_axi_FM_DDR_BUFF1_ARREADY = ap_const_logic_1)) then 
                        ap_reg_ioackin_m_axi_FM_DDR_BUFF1_ARREADY <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_m_axi_FM_DDR_BUFF2_AWREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ioackin_m_axi_FM_DDR_BUFF2_AWREADY <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state79)) then
                    if ((ap_sig_ioackin_m_axi_FM_DDR_BUFF2_AWREADY = ap_const_logic_1)) then 
                        ap_reg_ioackin_m_axi_FM_DDR_BUFF2_AWREADY <= ap_const_logic_0;
                    elsif ((m_axi_FM_DDR_BUFF2_AWREADY = ap_const_logic_1)) then 
                        ap_reg_ioackin_m_axi_FM_DDR_BUFF2_AWREADY <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_m_axi_FM_DDR_BUFF2_WREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ioackin_m_axi_FM_DDR_BUFF2_WREADY <= ap_const_logic_0;
            else
                if (((ap_enable_reg_pp6_iter2 = ap_const_logic_1) and (exitcond10_reg_3352_pp6_iter1_reg = ap_const_lv1_0))) then
                    if ((ap_const_boolean_0 = ap_block_pp6_stage0_11001)) then 
                        ap_reg_ioackin_m_axi_FM_DDR_BUFF2_WREADY <= ap_const_logic_0;
                    elsif (((m_axi_FM_DDR_BUFF2_WREADY = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp6_stage0_01001))) then 
                        ap_reg_ioackin_m_axi_FM_DDR_BUFF2_WREADY <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_m_axi_WEIGHT_ARREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ioackin_m_axi_WEIGHT_ARREADY <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state20)) then
                    if ((ap_sig_ioackin_m_axi_WEIGHT_ARREADY = ap_const_logic_1)) then 
                        ap_reg_ioackin_m_axi_WEIGHT_ARREADY <= ap_const_logic_0;
                    elsif ((m_axi_WEIGHT_ARREADY = ap_const_logic_1)) then 
                        ap_reg_ioackin_m_axi_WEIGHT_ARREADY <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    c2_reg_1148_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
                c2_reg_1148 <= ap_const_lv5_0;
            elsif (((ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (exitcond_flatten11_reg_2991 = ap_const_lv1_0))) then 
                c2_reg_1148 <= tmp_46_mid2_reg_3043;
            end if; 
        end if;
    end process;

    c5_reg_1203_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
                c5_reg_1203 <= ap_const_lv5_0;
            elsif (((ap_enable_reg_pp5_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (exitcond_flatten13_reg_3118 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp5_stage0_11001))) then 
                c5_reg_1203 <= tmp_47_mid2_reg_3167;
            end if; 
        end if;
    end process;

    c_reg_1092_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
                c_reg_1092 <= ap_const_lv5_0;
            elsif (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (exitcond_flatten_reg_2755 = ap_const_lv1_0))) then 
                c_reg_1092 <= tmp_63_mid2_reg_2941;
            end if; 
        end if;
    end process;

    chl_out2_reg_1103_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
                chl_out2_reg_1103 <= ap_const_lv3_0;
            elsif (((ap_const_boolean_0 = ap_block_pp3_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage1) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (exitcond_flatten_reg_2755_pp3_iter1_reg = ap_const_lv1_0))) then 
                chl_out2_reg_1103 <= chl_out_3_reg_2916;
            end if; 
        end if;
    end process;

    chl_out3_reg_1159_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
                chl_out3_reg_1159 <= ap_const_lv3_0;
            elsif (((ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (exitcond_flatten11_reg_2991 = ap_const_lv1_0))) then 
                chl_out3_reg_1159 <= chl_out_reg_3088;
            end if; 
        end if;
    end process;

    chl_out6_reg_1214_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
                chl_out6_reg_1214 <= ap_const_lv3_0;
            elsif (((ap_const_boolean_0 = ap_block_pp5_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage1) and (ap_enable_reg_pp5_iter1 = ap_const_logic_1) and (exitcond_flatten13_reg_3118_pp5_iter1_reg = ap_const_lv1_0))) then 
                chl_out6_reg_1214 <= chl_out_2_reg_3247;
            end if; 
        end if;
    end process;

    indvar2_reg_979_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
                indvar2_reg_979 <= ap_const_lv8_0;
            elsif (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (exitcond8_fu_1399_p2 = ap_const_lv1_0))) then 
                indvar2_reg_979 <= indvar_next5_fu_1405_p2;
            end if; 
        end if;
    end process;

    indvar4_reg_1226_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state79) and (ap_sig_ioackin_m_axi_FM_DDR_BUFF2_AWREADY = ap_const_logic_1))) then 
                indvar4_reg_1226 <= ap_const_lv11_0;
            elsif (((ap_enable_reg_pp6_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0) and (ap_const_boolean_0 = ap_block_pp6_stage0_11001) and (exitcond10_fu_2608_p2 = ap_const_lv1_0))) then 
                indvar4_reg_1226 <= indvar_next6_fu_2614_p2;
            end if; 
        end if;
    end process;

    indvar8_reg_967_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                indvar8_reg_967 <= ap_const_lv11_0;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (exitcond7_reg_2696 = ap_const_lv1_0))) then 
                indvar8_reg_967 <= indvar_next4_reg_2700;
            end if; 
        end if;
    end process;

    indvar_flatten1_reg_1035_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
                indvar_flatten1_reg_1035 <= ap_const_lv16_0;
            elsif (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (exitcond_flatten_reg_2755 = ap_const_lv1_0))) then 
                indvar_flatten1_reg_1035 <= indvar_flatten_next1_reg_2986;
            end if; 
        end if;
    end process;

    indvar_flatten2_reg_1058_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
                indvar_flatten2_reg_1058 <= ap_const_lv13_0;
            elsif (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (exitcond_flatten_reg_2755 = ap_const_lv1_0))) then 
                indvar_flatten2_reg_1058 <= indvar_flatten_next9_reg_2976;
            end if; 
        end if;
    end process;

    indvar_flatten3_reg_1115_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
                indvar_flatten3_reg_1115 <= ap_const_lv13_0;
            elsif (((ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (exitcond_flatten11_reg_2991 = ap_const_lv1_0))) then 
                indvar_flatten3_reg_1115 <= indvar_flatten_next1_3_reg_2995;
            end if; 
        end if;
    end process;

    indvar_flatten4_reg_1137_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
                indvar_flatten4_reg_1137 <= ap_const_lv8_0;
            elsif (((ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (exitcond_flatten11_reg_2991 = ap_const_lv1_0))) then 
                indvar_flatten4_reg_1137 <= indvar_flatten_next1_2_reg_3103;
            end if; 
        end if;
    end process;

    indvar_flatten5_reg_1170_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
                indvar_flatten5_reg_1170 <= ap_const_lv11_0;
            elsif (((ap_enable_reg_pp5_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (exitcond_flatten13_reg_3118 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp5_stage0_11001))) then 
                indvar_flatten5_reg_1170 <= indvar_flatten_next1_5_reg_3122;
            end if; 
        end if;
    end process;

    indvar_flatten6_reg_1192_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
                indvar_flatten6_reg_1192 <= ap_const_lv7_0;
            elsif (((ap_enable_reg_pp5_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (exitcond_flatten13_reg_3118 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp5_stage0_11001))) then 
                indvar_flatten6_reg_1192 <= indvar_flatten_next1_4_reg_3252;
            end if; 
        end if;
    end process;

    indvar_flatten9_reg_1012_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
                indvar_flatten9_reg_1012 <= ap_const_lv17_0;
            elsif (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (exitcond_flatten_reg_2755 = ap_const_lv1_0))) then 
                indvar_flatten9_reg_1012 <= indvar_flatten_next1_1_reg_2759;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_1080_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
                indvar_flatten_reg_1080 <= ap_const_lv8_0;
            elsif (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (exitcond_flatten_reg_2755 = ap_const_lv1_0))) then 
                indvar_flatten_reg_1080 <= indvar_flatten_next_reg_2921;
            end if; 
        end if;
    end process;

    indvar_reg_955_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond9_reg_2687 = ap_const_lv1_0))) then 
                indvar_reg_955 <= indvar_next_reg_2691;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                indvar_reg_955 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    kc_reg_1047_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
                kc_reg_1047 <= ap_const_lv3_0;
            elsif (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (exitcond_flatten_reg_2755 = ap_const_lv1_0))) then 
                kc_reg_1047 <= kc_cast_mid2_reg_2853;
            end if; 
        end if;
    end process;

    kr_reg_1023_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
                kr_reg_1023 <= ap_const_lv3_0;
            elsif (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (exitcond_flatten_reg_2755 = ap_const_lv1_0))) then 
                kr_reg_1023 <= kr_cast_mid2_reg_2848;
            end if; 
        end if;
    end process;

    phi_mul3_reg_1237_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state79) and (ap_sig_ioackin_m_axi_FM_DDR_BUFF2_AWREADY = ap_const_logic_1))) then 
                phi_mul3_reg_1237 <= ap_const_lv22_0;
            elsif (((ap_enable_reg_pp6_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0) and (ap_const_boolean_0 = ap_block_pp6_stage0_11001) and (exitcond10_fu_2608_p2 = ap_const_lv1_0))) then 
                phi_mul3_reg_1237 <= next_mul3_fu_2640_p2;
            end if; 
        end if;
    end process;

    phi_mul_reg_990_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
                phi_mul_reg_990 <= ap_const_lv16_0;
            elsif (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (exitcond8_fu_1399_p2 = ap_const_lv1_0))) then 
                phi_mul_reg_990 <= next_mul_fu_1411_p2;
            end if; 
        end if;
    end process;

    phi_urem3_reg_1248_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state79) and (ap_sig_ioackin_m_axi_FM_DDR_BUFF2_AWREADY = ap_const_logic_1))) then 
                phi_urem3_reg_1248 <= ap_const_lv11_0;
            elsif (((ap_enable_reg_pp6_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0) and (ap_const_boolean_0 = ap_block_pp6_stage0_11001) and (exitcond10_fu_2608_p2 = ap_const_lv1_0))) then 
                phi_urem3_reg_1248 <= idx_urem3_fu_2632_p3;
            end if; 
        end if;
    end process;

    phi_urem_reg_1001_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
                phi_urem_reg_1001 <= ap_const_lv8_0;
            elsif (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (exitcond8_fu_1399_p2 = ap_const_lv1_0))) then 
                phi_urem_reg_1001 <= idx_urem_fu_1443_p3;
            end if; 
        end if;
    end process;

    r1_reg_1126_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
                r1_reg_1126 <= ap_const_lv5_0;
            elsif (((ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (exitcond_flatten11_reg_2991 = ap_const_lv1_0))) then 
                r1_reg_1126 <= tmp_39_mid2_v_reg_3010;
            end if; 
        end if;
    end process;

    r4_reg_1181_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
                r4_reg_1181 <= ap_const_lv5_0;
            elsif (((ap_enable_reg_pp5_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (exitcond_flatten13_reg_3118 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp5_stage0_11001))) then 
                r4_reg_1181 <= tmp_40_mid2_v_reg_3142;
            end if; 
        end if;
    end process;

    r_reg_1069_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
                r_reg_1069 <= ap_const_lv5_0;
            elsif (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (exitcond_flatten_reg_2755 = ap_const_lv1_0))) then 
                r_reg_1069 <= tmp_52_mid2_reg_2888;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (indvar_reg_955 = ap_const_lv3_0))) then
                B_CONV1_0 <= m_axi_BIAS_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (indvar_reg_955 = ap_const_lv3_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                B_CONV1_1 <= m_axi_BIAS_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (indvar_reg_955 = ap_const_lv3_2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                B_CONV1_2 <= m_axi_BIAS_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (indvar_reg_955 = ap_const_lv3_3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                B_CONV1_3 <= m_axi_BIAS_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (indvar_reg_955 = ap_const_lv3_4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                B_CONV1_4 <= m_axi_BIAS_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and ((indvar_reg_955 = ap_const_lv3_5) or ((indvar_reg_955 = ap_const_lv3_6) or (indvar_reg_955 = ap_const_lv3_7))))) then
                B_CONV1_5 <= m_axi_BIAS_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (exitcond7_reg_2696 = ap_const_lv1_0))) then
                FM_DDR_BUFF1_read_reg_2705 <= m_axi_FM_DDR_BUFF1_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp4_stage2) and (exitcond_flatten11_reg_2991 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp4_stage2_11001))) then
                UnifiedRetVal_i_reg_3083 <= UnifiedRetVal_i_fu_2190_p3;
                tmp_71_reg_3078 <= tmp_71_fu_2092_p8;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (exitcond8_reg_2710 = ap_const_lv1_0))) then
                WEIGHT_read_reg_2740 <= m_axi_WEIGHT_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (exitcond_flatten11_fu_1955_p2 = ap_const_lv1_0))) then
                c2_mid_reg_3005 <= c2_mid_fu_1979_p3;
                c_4_reg_3022 <= c_4_fu_2013_p2;
                chl_out3_mid2_reg_3027 <= chl_out3_mid2_fu_2025_p3;
                exitcond1_mid_reg_3017 <= exitcond1_mid_fu_2007_p2;
                exitcond_flatten12_reg_3000 <= exitcond_flatten12_fu_1973_p2;
                indvar_flatten131_op_reg_3038 <= indvar_flatten131_op_fu_2033_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (exitcond_flatten13_fu_2275_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp5_stage0_11001))) then
                c5_mid_reg_3136 <= c5_mid_fu_2299_p3;
                exitcond_flatten14_reg_3127 <= exitcond_flatten14_fu_2293_p2;
                indvar_flatten182_op_reg_3156 <= indvar_flatten182_op_fu_2325_p2;
                tmp_44_mid2_v_reg_3150 <= tmp_40_mid2_v_fu_2307_p3(4 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage1) and (exitcond_flatten_reg_2755 = ap_const_lv1_0))) then
                c_6_reg_2900 <= c_6_fu_1781_p2;
                chl_out2_mid2_reg_2905 <= chl_out2_mid2_fu_1796_p3;
                exitcond4_mid5_reg_2895 <= exitcond4_mid5_fu_1775_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (exitcond_flatten_fu_1492_p2 = ap_const_lv1_0))) then
                c_mid3_reg_2832 <= c_mid3_fu_1604_p3;
                exitcond_flatten32_m_reg_2788 <= exitcond_flatten32_m_fu_1548_p2;
                exitcond_flatten8_reg_2770 <= exitcond_flatten8_fu_1510_p2;
                exitcond_flatten_mid_7_reg_2818 <= exitcond_flatten_mid_7_fu_1586_p2;
                indvar_flatten30_op_reg_2843 <= indvar_flatten30_op_fu_1618_p2;
                kc_2_reg_2795 <= kc_2_fu_1554_p2;
                kc_mid_reg_2778 <= kc_mid_fu_1516_p3;
                kr_2_reg_2764 <= kr_2_fu_1504_p2;
                not_exitcond_flatten_4_reg_2813 <= not_exitcond_flatten_4_fu_1580_p2;
                not_exitcond_flatten_reg_2783 <= not_exitcond_flatten_fu_1524_p2;
                r_mid_reg_2807 <= r_mid_fu_1566_p3;
                tmp_86_reg_2827 <= tmp_86_fu_1598_p2;
                tmp_92_reg_2801 <= tmp_92_fu_1560_p2;
                tmp_95_reg_2838 <= tmp_95_fu_1612_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage1))) then
                chl_out2_mid2_reg_2905_pp3_iter1_reg <= chl_out2_mid2_reg_2905;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp5_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage1) and (exitcond_flatten13_reg_3118 = ap_const_lv1_0))) then
                chl_out6_mid2_reg_3161 <= chl_out6_mid2_fu_2398_p3;
                    tmp_47_mid2_cast_reg_3172(4 downto 0) <= tmp_47_mid2_cast_fu_2413_p1(4 downto 0);
                    tmp_49_mid2_cast_reg_3207(4 downto 1) <= tmp_49_mid2_cast_fu_2447_p1(4 downto 1);
                tmp_53_mid2_reg_3242 <= tmp_53_mid2_fu_2477_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp5_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage1))) then
                chl_out6_mid2_reg_3161_pp5_iter10_reg <= chl_out6_mid2_reg_3161_pp5_iter9_reg;
                chl_out6_mid2_reg_3161_pp5_iter1_reg <= chl_out6_mid2_reg_3161;
                chl_out6_mid2_reg_3161_pp5_iter2_reg <= chl_out6_mid2_reg_3161_pp5_iter1_reg;
                chl_out6_mid2_reg_3161_pp5_iter3_reg <= chl_out6_mid2_reg_3161_pp5_iter2_reg;
                chl_out6_mid2_reg_3161_pp5_iter4_reg <= chl_out6_mid2_reg_3161_pp5_iter3_reg;
                chl_out6_mid2_reg_3161_pp5_iter5_reg <= chl_out6_mid2_reg_3161_pp5_iter4_reg;
                chl_out6_mid2_reg_3161_pp5_iter6_reg <= chl_out6_mid2_reg_3161_pp5_iter5_reg;
                chl_out6_mid2_reg_3161_pp5_iter7_reg <= chl_out6_mid2_reg_3161_pp5_iter6_reg;
                chl_out6_mid2_reg_3161_pp5_iter8_reg <= chl_out6_mid2_reg_3161_pp5_iter7_reg;
                chl_out6_mid2_reg_3161_pp5_iter9_reg <= chl_out6_mid2_reg_3161_pp5_iter8_reg;
                    tmp_47_mid2_cast_reg_3172_pp5_iter1_reg(4 downto 0) <= tmp_47_mid2_cast_reg_3172(4 downto 0);
                    tmp_47_mid2_cast_reg_3172_pp5_iter2_reg(4 downto 0) <= tmp_47_mid2_cast_reg_3172_pp5_iter1_reg(4 downto 0);
                    tmp_49_mid2_cast_reg_3207_pp5_iter1_reg(4 downto 1) <= tmp_49_mid2_cast_reg_3207(4 downto 1);
                    tmp_49_mid2_cast_reg_3207_pp5_iter2_reg(4 downto 1) <= tmp_49_mid2_cast_reg_3207_pp5_iter1_reg(4 downto 1);
                tmp_53_mid2_reg_3242_pp5_iter10_reg <= tmp_53_mid2_reg_3242_pp5_iter9_reg;
                tmp_53_mid2_reg_3242_pp5_iter1_reg <= tmp_53_mid2_reg_3242;
                tmp_53_mid2_reg_3242_pp5_iter2_reg <= tmp_53_mid2_reg_3242_pp5_iter1_reg;
                tmp_53_mid2_reg_3242_pp5_iter3_reg <= tmp_53_mid2_reg_3242_pp5_iter2_reg;
                tmp_53_mid2_reg_3242_pp5_iter4_reg <= tmp_53_mid2_reg_3242_pp5_iter3_reg;
                tmp_53_mid2_reg_3242_pp5_iter5_reg <= tmp_53_mid2_reg_3242_pp5_iter4_reg;
                tmp_53_mid2_reg_3242_pp5_iter6_reg <= tmp_53_mid2_reg_3242_pp5_iter5_reg;
                tmp_53_mid2_reg_3242_pp5_iter7_reg <= tmp_53_mid2_reg_3242_pp5_iter6_reg;
                tmp_53_mid2_reg_3242_pp5_iter8_reg <= tmp_53_mid2_reg_3242_pp5_iter7_reg;
                tmp_53_mid2_reg_3242_pp5_iter9_reg <= tmp_53_mid2_reg_3242_pp5_iter8_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp5_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage1) and (ap_enable_reg_pp5_iter0 = ap_const_logic_1) and (exitcond_flatten13_reg_3118 = ap_const_lv1_0))) then
                chl_out_2_reg_3247 <= chl_out_2_fu_2485_p2;
                indvar_flatten_next1_4_reg_3252 <= indvar_flatten_next1_4_fu_2491_p3;
                tmp_47_mid2_reg_3167 <= tmp_47_mid2_fu_2406_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage1) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (exitcond_flatten_reg_2755 = ap_const_lv1_0))) then
                chl_out_3_reg_2916 <= chl_out_3_fu_1831_p2;
                indvar_flatten_next_reg_2921 <= indvar_flatten_next_fu_1843_p3;
                kc_cast_mid2_reg_2853 <= kc_cast_mid2_fu_1679_p3;
                kr_cast_mid2_reg_2848 <= kr_cast_mid2_fu_1624_p3;
                tmp_52_mid2_reg_2888 <= tmp_52_mid2_fu_1757_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage2) and (exitcond_flatten11_reg_2991 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp4_stage2_11001))) then
                chl_out_reg_3088 <= chl_out_fu_2198_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp4_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage1) and (exitcond_flatten11_reg_2991 = ap_const_lv1_0))) then
                conv1_buff_0_addr_1_reg_3048 <= tmp_127_cast_fu_2082_p1(10 - 1 downto 0);
                conv1_buff_1_addr_1_reg_3053 <= tmp_127_cast_fu_2082_p1(10 - 1 downto 0);
                conv1_buff_2_addr_1_reg_3058 <= tmp_127_cast_fu_2082_p1(10 - 1 downto 0);
                conv1_buff_3_addr_1_reg_3063 <= tmp_127_cast_fu_2082_p1(10 - 1 downto 0);
                conv1_buff_4_addr_1_reg_3068 <= tmp_127_cast_fu_2082_p1(10 - 1 downto 0);
                conv1_buff_5_addr_1_reg_3073 <= tmp_127_cast_fu_2082_p1(10 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage5) and (exitcond_flatten_reg_2755 = ap_const_lv1_0))) then
                conv1_buff_0_addr_reg_2946 <= tmp_122_cast_fu_1916_p1(10 - 1 downto 0);
                conv1_buff_1_addr_reg_2951 <= tmp_122_cast_fu_1916_p1(10 - 1 downto 0);
                conv1_buff_2_addr_reg_2956 <= tmp_122_cast_fu_1916_p1(10 - 1 downto 0);
                conv1_buff_3_addr_reg_2961 <= tmp_122_cast_fu_1916_p1(10 - 1 downto 0);
                conv1_buff_4_addr_reg_2966 <= tmp_122_cast_fu_1916_p1(10 - 1 downto 0);
                conv1_buff_5_addr_reg_2971 <= tmp_122_cast_fu_1916_p1(10 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp6_stage0) and (ap_const_boolean_0 = ap_block_pp6_stage0_11001) and (exitcond10_fu_2608_p2 = ap_const_lv1_0))) then
                div54_t_reg_3401 <= phi_mul3_reg_1237(21 downto 19);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (exitcond8_fu_1399_p2 = ap_const_lv1_0))) then
                div_t_reg_2731 <= phi_mul_reg_990(15 downto 13);
                tmp_reg_2724 <= tmp_fu_1417_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then
                div_t_reg_2731_pp2_iter1_reg <= div_t_reg_2731;
                exitcond8_reg_2710 <= exitcond8_fu_1399_p2;
                exitcond8_reg_2710_pp2_iter1_reg <= exitcond8_reg_2710;
                tmp_reg_2724_pp2_iter1_reg <= tmp_reg_2724;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp6_stage0) and (ap_const_boolean_0 = ap_block_pp6_stage0_11001))) then
                exitcond10_reg_3352 <= exitcond10_fu_2608_p2;
                exitcond10_reg_3352_pp6_iter1_reg <= exitcond10_reg_3352;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                exitcond7_reg_2696 <= exitcond7_fu_1382_p2;
                exitcond7_reg_2696_pp1_iter1_reg <= exitcond7_reg_2696;
                indvar8_reg_967_pp1_iter1_reg <= indvar8_reg_967;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                exitcond9_reg_2687 <= exitcond9_fu_1334_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0))) then
                exitcond_flatten11_reg_2991 <= exitcond_flatten11_fu_1955_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_const_boolean_0 = ap_block_pp5_stage0_11001))) then
                exitcond_flatten13_reg_3118 <= exitcond_flatten13_fu_2275_p2;
                exitcond_flatten13_reg_3118_pp5_iter10_reg <= exitcond_flatten13_reg_3118_pp5_iter9_reg;
                exitcond_flatten13_reg_3118_pp5_iter1_reg <= exitcond_flatten13_reg_3118;
                exitcond_flatten13_reg_3118_pp5_iter2_reg <= exitcond_flatten13_reg_3118_pp5_iter1_reg;
                exitcond_flatten13_reg_3118_pp5_iter3_reg <= exitcond_flatten13_reg_3118_pp5_iter2_reg;
                exitcond_flatten13_reg_3118_pp5_iter4_reg <= exitcond_flatten13_reg_3118_pp5_iter3_reg;
                exitcond_flatten13_reg_3118_pp5_iter5_reg <= exitcond_flatten13_reg_3118_pp5_iter4_reg;
                exitcond_flatten13_reg_3118_pp5_iter6_reg <= exitcond_flatten13_reg_3118_pp5_iter5_reg;
                exitcond_flatten13_reg_3118_pp5_iter7_reg <= exitcond_flatten13_reg_3118_pp5_iter6_reg;
                exitcond_flatten13_reg_3118_pp5_iter8_reg <= exitcond_flatten13_reg_3118_pp5_iter7_reg;
                exitcond_flatten13_reg_3118_pp5_iter9_reg <= exitcond_flatten13_reg_3118_pp5_iter8_reg;
                    tmp_126_reg_3297_pp5_iter4_reg(10 downto 1) <= tmp_126_reg_3297(10 downto 1);
                tmp_40_mid2_v_reg_3142_pp5_iter1_reg <= tmp_40_mid2_v_reg_3142;
                tmp_40_mid2_v_reg_3142_pp5_iter2_reg <= tmp_40_mid2_v_reg_3142_pp5_iter1_reg;
                tmp_44_mid2_v_reg_3150_pp5_iter10_reg <= tmp_44_mid2_v_reg_3150_pp5_iter9_reg;
                tmp_44_mid2_v_reg_3150_pp5_iter1_reg <= tmp_44_mid2_v_reg_3150;
                tmp_44_mid2_v_reg_3150_pp5_iter2_reg <= tmp_44_mid2_v_reg_3150_pp5_iter1_reg;
                tmp_44_mid2_v_reg_3150_pp5_iter3_reg <= tmp_44_mid2_v_reg_3150_pp5_iter2_reg;
                tmp_44_mid2_v_reg_3150_pp5_iter4_reg <= tmp_44_mid2_v_reg_3150_pp5_iter3_reg;
                tmp_44_mid2_v_reg_3150_pp5_iter5_reg <= tmp_44_mid2_v_reg_3150_pp5_iter4_reg;
                tmp_44_mid2_v_reg_3150_pp5_iter6_reg <= tmp_44_mid2_v_reg_3150_pp5_iter5_reg;
                tmp_44_mid2_v_reg_3150_pp5_iter7_reg <= tmp_44_mid2_v_reg_3150_pp5_iter6_reg;
                tmp_44_mid2_v_reg_3150_pp5_iter8_reg <= tmp_44_mid2_v_reg_3150_pp5_iter7_reg;
                tmp_44_mid2_v_reg_3150_pp5_iter9_reg <= tmp_44_mid2_v_reg_3150_pp5_iter8_reg;
                    tmp_48_reg_3108(4 downto 1) <= tmp_48_fu_2259_p2(4 downto 1);
                tmp_73_reg_3113 <= ap_phi_mux_c5_phi_fu_1207_p4(4 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then
                exitcond_flatten_reg_2755 <= exitcond_flatten_fu_1492_p2;
                exitcond_flatten_reg_2755_pp3_iter1_reg <= exitcond_flatten_reg_2755;
                tmp_61_reg_2750 <= tmp_61_fu_1486_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage1) and (exitcond_flatten8_reg_2770 = ap_const_lv1_0) and (exitcond_flatten_reg_2755 = ap_const_lv1_0))) then
                indvar_flatten68_op_reg_2926 <= indvar_flatten68_op_fu_1850_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1))) then
                indvar_flatten_next1_1_reg_2759 <= indvar_flatten_next1_1_fu_1498_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage8) and (exitcond_flatten11_reg_2991 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp4_stage8_11001))) then
                indvar_flatten_next1_2_reg_3103 <= indvar_flatten_next1_2_fu_2253_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_enable_reg_pp4_iter0 = ap_const_logic_1))) then
                indvar_flatten_next1_3_reg_2995 <= indvar_flatten_next1_3_fu_1961_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp5_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_const_boolean_0 = ap_block_pp5_stage0_11001))) then
                indvar_flatten_next1_5_reg_3122 <= indvar_flatten_next1_5_fu_2281_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage7) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (exitcond_flatten_reg_2755 = ap_const_lv1_0))) then
                indvar_flatten_next1_reg_2986 <= indvar_flatten_next1_fu_1949_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage5) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (exitcond_flatten_reg_2755 = ap_const_lv1_0))) then
                indvar_flatten_next9_reg_2976 <= indvar_flatten_next9_fu_1926_p3;
                tmp_63_mid2_reg_2941 <= tmp_63_mid2_fu_1901_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                indvar_next4_reg_2700 <= indvar_next4_fu_1388_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                indvar_next_reg_2691 <= indvar_next_fu_1340_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage2) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (exitcond_flatten_reg_2755 = ap_const_lv1_0))) then
                pic_in_load_reg_2931 <= pic_in_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp5_stage1_11001) and (ap_enable_reg_pp5_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage1) and (exitcond_flatten13_reg_3118_pp5_iter10_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp3_stage6_11001) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage6) and (exitcond_flatten_reg_2755 = ap_const_lv1_0)))) then
                reg_1311 <= grp_fu_1267_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp4_stage7_11001) and (ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage7) and (exitcond_flatten11_reg_2991 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp3_stage3_11001) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage3) and (exitcond_flatten_reg_2755_pp3_iter1_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp5_stage1_11001) and (ap_enable_reg_pp5_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage1) and (exitcond_flatten13_reg_3118_pp5_iter3_reg = ap_const_lv1_0)))) then
                reg_1322 <= grp_fu_1259_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (exitcond_flatten13_reg_3118_pp5_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp5_stage0_11001))) then
                    tmp_126_reg_3297(10 downto 1) <= tmp_126_fu_2547_p2(10 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (exitcond_flatten11_fu_1955_p2 = ap_const_lv1_0))) then
                tmp_39_mid2_v_reg_3010 <= tmp_39_mid2_v_fu_1987_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp5_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (exitcond_flatten13_fu_2275_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp5_stage0_11001))) then
                tmp_40_mid2_v_reg_3142 <= tmp_40_mid2_v_fu_2307_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp4_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage1) and (ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (exitcond_flatten11_reg_2991 = ap_const_lv1_0))) then
                tmp_46_mid2_reg_3043 <= tmp_46_mid2_fu_2067_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp4_stage8) and (exitcond_flatten11_reg_2991 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp4_stage8_11001))) then
                tmp_56_reg_3093 <= tmp_56_fu_2245_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp5_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (exitcond_flatten13_reg_3118_pp5_iter5_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp5_stage0_11001))) then
                tmp_58_reg_3342 <= grp_fu_1259_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp5_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage1) and (exitcond_flatten13_reg_3118_pp5_iter8_reg = ap_const_lv1_0))) then
                tmp_59_reg_3347 <= grp_fu_1263_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage2) and (exitcond_flatten_reg_2755 = ap_const_lv1_0))) then
                tmp_68_reg_2936 <= tmp_68_fu_1856_p8;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage6) and (exitcond_flatten_reg_2755 = ap_const_lv1_0))) then
                tmp_69_reg_2981 <= tmp_69_fu_1932_p8;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp6_stage0) and (ap_const_boolean_0 = ap_block_pp6_stage0_11001) and (exitcond10_reg_3352 = ap_const_lv1_0))) then
                tmp_78_reg_3406 <= tmp_78_fu_2670_p8;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp5_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (exitcond_flatten13_reg_3118 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp5_stage0_11001))) then
                tmp_81_reg_3257 <= grp_fu_1277_p8;
                tmp_82_reg_3262 <= grp_fu_1294_p8;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp5_stage1_11001) and (ap_enable_reg_pp5_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage1) and (exitcond_flatten13_reg_3118_pp5_iter3_reg = ap_const_lv1_0))) then
                tmp_83_reg_3302 <= grp_fu_1294_p8;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp5_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage1) and (ap_enable_reg_pp5_iter5 = ap_const_logic_1) and (exitcond_flatten13_reg_3118_pp5_iter5_reg = ap_const_lv1_0))) then
                tmp_84_reg_3337 <= grp_fu_1277_p8;
            end if;
        end if;
    end process;
    tmp_48_reg_3108(0) <= '1';
    tmp_47_mid2_cast_reg_3172(10 downto 5) <= "000000";
    tmp_47_mid2_cast_reg_3172_pp5_iter1_reg(10 downto 5) <= "000000";
    tmp_47_mid2_cast_reg_3172_pp5_iter2_reg(10 downto 5) <= "000000";
    tmp_49_mid2_cast_reg_3207(0) <= '1';
    tmp_49_mid2_cast_reg_3207(10 downto 5) <= "000000";
    tmp_49_mid2_cast_reg_3207_pp5_iter1_reg(0) <= '1';
    tmp_49_mid2_cast_reg_3207_pp5_iter1_reg(10 downto 5) <= "000000";
    tmp_49_mid2_cast_reg_3207_pp5_iter2_reg(0) <= '1';
    tmp_49_mid2_cast_reg_3207_pp5_iter2_reg(10 downto 5) <= "000000";
    tmp_126_reg_3297(0) <= '1';
    tmp_126_reg_3297_pp5_iter4_reg(0) <= '1';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, m_axi_FM_DDR_BUFF2_BVALID, ap_CS_fsm_state10, ap_enable_reg_pp1_iter1, ap_CS_fsm_state79, ap_enable_reg_pp6_iter2, ap_CS_fsm_state87, ap_CS_fsm_state20, ap_enable_reg_pp2_iter1, ap_enable_reg_pp3_iter0, ap_enable_reg_pp5_iter10, ap_enable_reg_pp3_iter1, ap_enable_reg_pp4_iter0, exitcond9_fu_1334_p2, ap_enable_reg_pp0_iter0, exitcond7_fu_1382_p2, ap_enable_reg_pp1_iter0, exitcond8_fu_1399_p2, ap_enable_reg_pp2_iter0, exitcond_flatten_fu_1492_p2, exitcond_flatten11_fu_1955_p2, ap_CS_fsm_pp5_stage0, exitcond_flatten13_fu_2275_p2, ap_enable_reg_pp5_iter0, ap_enable_reg_pp5_iter1, exitcond10_fu_2608_p2, ap_enable_reg_pp6_iter0, ap_block_pp0_stage0_subdone, ap_block_pp1_stage0_subdone, ap_enable_reg_pp1_iter2, ap_block_pp2_stage0_subdone, ap_enable_reg_pp2_iter2, ap_block_pp3_stage0_subdone, ap_block_pp3_stage7_subdone, ap_block_pp3_stage4_subdone, ap_CS_fsm_pp3_stage4, ap_block_pp4_stage0_subdone, ap_block_pp4_stage8_subdone, ap_block_pp5_stage0_subdone, ap_block_pp5_stage1_subdone, ap_enable_reg_pp5_iter11, ap_sig_ioackin_m_axi_FM_DDR_BUFF2_AWREADY, ap_block_pp6_stage0_subdone, ap_enable_reg_pp6_iter1, ap_sig_ioackin_m_axi_BIAS_ARREADY, ap_sig_ioackin_m_axi_FM_DDR_BUFF1_ARREADY, ap_sig_ioackin_m_axi_WEIGHT_ARREADY, ap_block_pp3_stage1_subdone, ap_block_pp3_stage2_subdone, ap_block_pp3_stage3_subdone, ap_block_pp3_stage5_subdone, ap_block_pp3_stage6_subdone, ap_block_pp4_stage1_subdone, ap_block_pp4_stage2_subdone, ap_block_pp4_stage3_subdone, ap_block_pp4_stage4_subdone, ap_block_pp4_stage5_subdone, ap_block_pp4_stage6_subdone, ap_block_pp4_stage7_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_start = ap_const_logic_0) or (ap_sig_ioackin_m_axi_BIAS_ARREADY = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((exitcond9_fu_1334_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((exitcond9_fu_1334_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state10 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state10) and (ap_sig_ioackin_m_axi_FM_DDR_BUFF1_ARREADY = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
            when ap_ST_fsm_pp1_stage0 => 
                if ((not(((exitcond7_fu_1382_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone))) and not(((ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif ((((exitcond7_fu_1382_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) or ((ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone)))) then
                    ap_NS_fsm <= ap_ST_fsm_state20;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state20 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state20) and (ap_sig_ioackin_m_axi_WEIGHT_ARREADY = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state21;
                else
                    ap_NS_fsm <= ap_ST_fsm_state20;
                end if;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
            when ap_ST_fsm_pp2_stage0 => 
                if ((not(((exitcond8_fu_1399_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone))) and not(((ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (ap_enable_reg_pp2_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                elsif ((((exitcond8_fu_1399_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) or ((ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (ap_enable_reg_pp2_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone)))) then
                    ap_NS_fsm <= ap_ST_fsm_state30;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                end if;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
            when ap_ST_fsm_pp3_stage0 => 
                if ((not(((exitcond_flatten_fu_1492_p2 = ap_const_lv1_1) and (ap_enable_reg_pp3_iter1 = ap_const_logic_0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone))) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage1;
                elsif (((exitcond_flatten_fu_1492_p2 = ap_const_lv1_1) and (ap_enable_reg_pp3_iter1 = ap_const_logic_0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_state44;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                end if;
            when ap_ST_fsm_pp3_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp3_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage1;
                end if;
            when ap_ST_fsm_pp3_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp3_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage2;
                end if;
            when ap_ST_fsm_pp3_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp3_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage3;
                end if;
            when ap_ST_fsm_pp3_stage4 => 
                if ((not(((ap_enable_reg_pp3_iter0 = ap_const_logic_0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage4) and (ap_const_boolean_0 = ap_block_pp3_stage4_subdone))) and (ap_const_boolean_0 = ap_block_pp3_stage4_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage5;
                elsif (((ap_enable_reg_pp3_iter0 = ap_const_logic_0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage4) and (ap_const_boolean_0 = ap_block_pp3_stage4_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_state44;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage4;
                end if;
            when ap_ST_fsm_pp3_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp3_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage5;
                end if;
            when ap_ST_fsm_pp3_stage6 => 
                if ((ap_const_boolean_0 = ap_block_pp3_stage6_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage6;
                end if;
            when ap_ST_fsm_pp3_stage7 => 
                if ((ap_const_boolean_0 = ap_block_pp3_stage7_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage7;
                end if;
            when ap_ST_fsm_state44 => 
                ap_NS_fsm <= ap_ST_fsm_pp4_stage0;
            when ap_ST_fsm_pp4_stage0 => 
                if ((not(((exitcond_flatten11_fu_1955_p2 = ap_const_lv1_1) and (ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage0_subdone))) and (ap_const_boolean_0 = ap_block_pp4_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage1;
                elsif (((exitcond_flatten11_fu_1955_p2 = ap_const_lv1_1) and (ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_state55;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage0;
                end if;
            when ap_ST_fsm_pp4_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp4_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage1;
                end if;
            when ap_ST_fsm_pp4_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp4_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage2;
                end if;
            when ap_ST_fsm_pp4_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp4_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage3;
                end if;
            when ap_ST_fsm_pp4_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp4_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage4;
                end if;
            when ap_ST_fsm_pp4_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp4_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage5;
                end if;
            when ap_ST_fsm_pp4_stage6 => 
                if ((ap_const_boolean_0 = ap_block_pp4_stage6_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage6;
                end if;
            when ap_ST_fsm_pp4_stage7 => 
                if ((ap_const_boolean_0 = ap_block_pp4_stage7_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage8;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage7;
                end if;
            when ap_ST_fsm_pp4_stage8 => 
                if ((ap_const_boolean_0 = ap_block_pp4_stage8_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage8;
                end if;
            when ap_ST_fsm_state55 => 
                ap_NS_fsm <= ap_ST_fsm_pp5_stage0;
            when ap_ST_fsm_pp5_stage0 => 
                if ((not(((ap_enable_reg_pp5_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp5_stage0_subdone) and (ap_enable_reg_pp5_iter1 = ap_const_logic_0) and (exitcond_flatten13_fu_2275_p2 = ap_const_lv1_1))) and not(((ap_enable_reg_pp5_iter10 = ap_const_logic_0) and (ap_enable_reg_pp5_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_const_boolean_0 = ap_block_pp5_stage0_subdone))) and (ap_const_boolean_0 = ap_block_pp5_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp5_stage1;
                elsif ((((ap_enable_reg_pp5_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp5_stage0_subdone) and (ap_enable_reg_pp5_iter1 = ap_const_logic_0) and (exitcond_flatten13_fu_2275_p2 = ap_const_lv1_1)) or ((ap_enable_reg_pp5_iter10 = ap_const_logic_0) and (ap_enable_reg_pp5_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_const_boolean_0 = ap_block_pp5_stage0_subdone)))) then
                    ap_NS_fsm <= ap_ST_fsm_state79;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp5_stage0;
                end if;
            when ap_ST_fsm_pp5_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp5_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp5_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp5_stage1;
                end if;
            when ap_ST_fsm_state79 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state79) and (ap_sig_ioackin_m_axi_FM_DDR_BUFF2_AWREADY = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp6_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state79;
                end if;
            when ap_ST_fsm_pp6_stage0 => 
                if ((not(((ap_enable_reg_pp6_iter0 = ap_const_logic_1) and (ap_enable_reg_pp6_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp6_stage0_subdone) and (exitcond10_fu_2608_p2 = ap_const_lv1_1))) and not(((ap_enable_reg_pp6_iter2 = ap_const_logic_1) and (ap_enable_reg_pp6_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp6_stage0_subdone))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp6_stage0;
                elsif ((((ap_enable_reg_pp6_iter2 = ap_const_logic_1) and (ap_enable_reg_pp6_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp6_stage0_subdone)) or ((ap_enable_reg_pp6_iter0 = ap_const_logic_1) and (ap_enable_reg_pp6_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp6_stage0_subdone) and (exitcond10_fu_2608_p2 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state83;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp6_stage0;
                end if;
            when ap_ST_fsm_state83 => 
                ap_NS_fsm <= ap_ST_fsm_state84;
            when ap_ST_fsm_state84 => 
                ap_NS_fsm <= ap_ST_fsm_state85;
            when ap_ST_fsm_state85 => 
                ap_NS_fsm <= ap_ST_fsm_state86;
            when ap_ST_fsm_state86 => 
                ap_NS_fsm <= ap_ST_fsm_state87;
            when ap_ST_fsm_state87 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state87) and (m_axi_FM_DDR_BUFF2_BVALID = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state87;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;

    BIAS_blk_n_AR_assign_proc : process(ap_start, ap_CS_fsm_state1, m_axi_BIAS_ARREADY)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            BIAS_blk_n_AR <= m_axi_BIAS_ARREADY;
        else 
            BIAS_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;


    BIAS_blk_n_R_assign_proc : process(m_axi_BIAS_RVALID, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            BIAS_blk_n_R <= m_axi_BIAS_RVALID;
        else 
            BIAS_blk_n_R <= ap_const_logic_1;
        end if; 
    end process;


    FM_DDR_BUFF1_blk_n_AR_assign_proc : process(m_axi_FM_DDR_BUFF1_ARREADY, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            FM_DDR_BUFF1_blk_n_AR <= m_axi_FM_DDR_BUFF1_ARREADY;
        else 
            FM_DDR_BUFF1_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;


    FM_DDR_BUFF1_blk_n_R_assign_proc : process(m_axi_FM_DDR_BUFF1_RVALID, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, exitcond7_reg_2696)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (exitcond7_reg_2696 = ap_const_lv1_0))) then 
            FM_DDR_BUFF1_blk_n_R <= m_axi_FM_DDR_BUFF1_RVALID;
        else 
            FM_DDR_BUFF1_blk_n_R <= ap_const_logic_1;
        end if; 
    end process;


    FM_DDR_BUFF2_blk_n_AW_assign_proc : process(m_axi_FM_DDR_BUFF2_AWREADY, ap_CS_fsm_state79)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state79)) then 
            FM_DDR_BUFF2_blk_n_AW <= m_axi_FM_DDR_BUFF2_AWREADY;
        else 
            FM_DDR_BUFF2_blk_n_AW <= ap_const_logic_1;
        end if; 
    end process;


    FM_DDR_BUFF2_blk_n_B_assign_proc : process(m_axi_FM_DDR_BUFF2_BVALID, ap_CS_fsm_state87)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state87)) then 
            FM_DDR_BUFF2_blk_n_B <= m_axi_FM_DDR_BUFF2_BVALID;
        else 
            FM_DDR_BUFF2_blk_n_B <= ap_const_logic_1;
        end if; 
    end process;


    FM_DDR_BUFF2_blk_n_W_assign_proc : process(m_axi_FM_DDR_BUFF2_WREADY, ap_enable_reg_pp6_iter2, ap_block_pp6_stage0, exitcond10_reg_3352_pp6_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp6_stage0) and (ap_enable_reg_pp6_iter2 = ap_const_logic_1) and (exitcond10_reg_3352_pp6_iter1_reg = ap_const_lv1_0))) then 
            FM_DDR_BUFF2_blk_n_W <= m_axi_FM_DDR_BUFF2_WREADY;
        else 
            FM_DDR_BUFF2_blk_n_W <= ap_const_logic_1;
        end if; 
    end process;

    UnifiedRetVal_i_fu_2190_p3 <= 
        B_CONV1_4 when (sel_tmp8_i_fu_2185_p2(0) = '1') else 
        sel_tmp7_i_fu_2177_p3;

    WEIGHT_blk_n_AR_assign_proc : process(m_axi_WEIGHT_ARREADY, ap_CS_fsm_state20)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            WEIGHT_blk_n_AR <= m_axi_WEIGHT_ARREADY;
        else 
            WEIGHT_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;


    WEIGHT_blk_n_R_assign_proc : process(m_axi_WEIGHT_RVALID, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, ap_block_pp2_stage0, exitcond8_reg_2710)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (exitcond8_reg_2710 = ap_const_lv1_0))) then 
            WEIGHT_blk_n_R <= m_axi_WEIGHT_RVALID;
        else 
            WEIGHT_blk_n_R <= ap_const_logic_1;
        end if; 
    end process;


    W_CONV1_0_address0_assign_proc : process(ap_block_pp2_stage0, ap_enable_reg_pp3_iter0, ap_CS_fsm_pp3_stage1, ap_enable_reg_pp2_iter2, ap_block_pp3_stage1, tmp_88_fu_1468_p1, tmp_105_cast_fu_1701_p1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp3_stage1) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage1))) then 
            W_CONV1_0_address0 <= tmp_105_cast_fu_1701_p1(5 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter2 = ap_const_logic_1))) then 
            W_CONV1_0_address0 <= tmp_88_fu_1468_p1(5 - 1 downto 0);
        else 
            W_CONV1_0_address0 <= "XXXXX";
        end if; 
    end process;


    W_CONV1_0_ce0_assign_proc : process(ap_enable_reg_pp3_iter0, ap_block_pp2_stage0_11001, ap_CS_fsm_pp3_stage1, ap_block_pp3_stage1_11001, ap_enable_reg_pp2_iter2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp3_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage1) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1)))) then 
            W_CONV1_0_ce0 <= ap_const_logic_1;
        else 
            W_CONV1_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    W_CONV1_0_we0_assign_proc : process(ap_block_pp2_stage0_11001, div_t_reg_2731_pp2_iter1_reg, ap_enable_reg_pp2_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter2 = ap_const_logic_1) and (div_t_reg_2731_pp2_iter1_reg = ap_const_lv3_0))) then 
            W_CONV1_0_we0 <= ap_const_logic_1;
        else 
            W_CONV1_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    W_CONV1_1_address0_assign_proc : process(ap_block_pp2_stage0, ap_enable_reg_pp3_iter0, ap_CS_fsm_pp3_stage1, ap_enable_reg_pp2_iter2, ap_block_pp3_stage1, tmp_88_fu_1468_p1, tmp_105_cast_fu_1701_p1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp3_stage1) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage1))) then 
            W_CONV1_1_address0 <= tmp_105_cast_fu_1701_p1(5 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter2 = ap_const_logic_1))) then 
            W_CONV1_1_address0 <= tmp_88_fu_1468_p1(5 - 1 downto 0);
        else 
            W_CONV1_1_address0 <= "XXXXX";
        end if; 
    end process;


    W_CONV1_1_ce0_assign_proc : process(ap_enable_reg_pp3_iter0, ap_block_pp2_stage0_11001, ap_CS_fsm_pp3_stage1, ap_block_pp3_stage1_11001, ap_enable_reg_pp2_iter2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp3_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage1) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1)))) then 
            W_CONV1_1_ce0 <= ap_const_logic_1;
        else 
            W_CONV1_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    W_CONV1_1_we0_assign_proc : process(ap_block_pp2_stage0_11001, div_t_reg_2731_pp2_iter1_reg, ap_enable_reg_pp2_iter2)
    begin
        if (((div_t_reg_2731_pp2_iter1_reg = ap_const_lv3_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter2 = ap_const_logic_1))) then 
            W_CONV1_1_we0 <= ap_const_logic_1;
        else 
            W_CONV1_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    W_CONV1_2_address0_assign_proc : process(ap_block_pp2_stage0, ap_enable_reg_pp3_iter0, ap_CS_fsm_pp3_stage1, ap_enable_reg_pp2_iter2, ap_block_pp3_stage1, tmp_88_fu_1468_p1, tmp_105_cast_fu_1701_p1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp3_stage1) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage1))) then 
            W_CONV1_2_address0 <= tmp_105_cast_fu_1701_p1(5 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter2 = ap_const_logic_1))) then 
            W_CONV1_2_address0 <= tmp_88_fu_1468_p1(5 - 1 downto 0);
        else 
            W_CONV1_2_address0 <= "XXXXX";
        end if; 
    end process;


    W_CONV1_2_ce0_assign_proc : process(ap_enable_reg_pp3_iter0, ap_block_pp2_stage0_11001, ap_CS_fsm_pp3_stage1, ap_block_pp3_stage1_11001, ap_enable_reg_pp2_iter2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp3_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage1) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1)))) then 
            W_CONV1_2_ce0 <= ap_const_logic_1;
        else 
            W_CONV1_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    W_CONV1_2_we0_assign_proc : process(ap_block_pp2_stage0_11001, div_t_reg_2731_pp2_iter1_reg, ap_enable_reg_pp2_iter2)
    begin
        if (((div_t_reg_2731_pp2_iter1_reg = ap_const_lv3_2) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter2 = ap_const_logic_1))) then 
            W_CONV1_2_we0 <= ap_const_logic_1;
        else 
            W_CONV1_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    W_CONV1_3_address0_assign_proc : process(ap_block_pp2_stage0, ap_enable_reg_pp3_iter0, ap_CS_fsm_pp3_stage1, ap_enable_reg_pp2_iter2, ap_block_pp3_stage1, tmp_88_fu_1468_p1, tmp_105_cast_fu_1701_p1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp3_stage1) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage1))) then 
            W_CONV1_3_address0 <= tmp_105_cast_fu_1701_p1(5 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter2 = ap_const_logic_1))) then 
            W_CONV1_3_address0 <= tmp_88_fu_1468_p1(5 - 1 downto 0);
        else 
            W_CONV1_3_address0 <= "XXXXX";
        end if; 
    end process;


    W_CONV1_3_ce0_assign_proc : process(ap_enable_reg_pp3_iter0, ap_block_pp2_stage0_11001, ap_CS_fsm_pp3_stage1, ap_block_pp3_stage1_11001, ap_enable_reg_pp2_iter2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp3_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage1) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1)))) then 
            W_CONV1_3_ce0 <= ap_const_logic_1;
        else 
            W_CONV1_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    W_CONV1_3_we0_assign_proc : process(ap_block_pp2_stage0_11001, div_t_reg_2731_pp2_iter1_reg, ap_enable_reg_pp2_iter2)
    begin
        if (((div_t_reg_2731_pp2_iter1_reg = ap_const_lv3_3) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter2 = ap_const_logic_1))) then 
            W_CONV1_3_we0 <= ap_const_logic_1;
        else 
            W_CONV1_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    W_CONV1_4_address0_assign_proc : process(ap_block_pp2_stage0, ap_enable_reg_pp3_iter0, ap_CS_fsm_pp3_stage1, ap_enable_reg_pp2_iter2, ap_block_pp3_stage1, tmp_88_fu_1468_p1, tmp_105_cast_fu_1701_p1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp3_stage1) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage1))) then 
            W_CONV1_4_address0 <= tmp_105_cast_fu_1701_p1(5 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter2 = ap_const_logic_1))) then 
            W_CONV1_4_address0 <= tmp_88_fu_1468_p1(5 - 1 downto 0);
        else 
            W_CONV1_4_address0 <= "XXXXX";
        end if; 
    end process;


    W_CONV1_4_ce0_assign_proc : process(ap_enable_reg_pp3_iter0, ap_block_pp2_stage0_11001, ap_CS_fsm_pp3_stage1, ap_block_pp3_stage1_11001, ap_enable_reg_pp2_iter2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp3_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage1) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1)))) then 
            W_CONV1_4_ce0 <= ap_const_logic_1;
        else 
            W_CONV1_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    W_CONV1_4_we0_assign_proc : process(ap_block_pp2_stage0_11001, div_t_reg_2731_pp2_iter1_reg, ap_enable_reg_pp2_iter2)
    begin
        if (((div_t_reg_2731_pp2_iter1_reg = ap_const_lv3_4) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter2 = ap_const_logic_1))) then 
            W_CONV1_4_we0 <= ap_const_logic_1;
        else 
            W_CONV1_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    W_CONV1_5_address0_assign_proc : process(ap_block_pp2_stage0, ap_enable_reg_pp3_iter0, ap_CS_fsm_pp3_stage1, ap_enable_reg_pp2_iter2, ap_block_pp3_stage1, tmp_88_fu_1468_p1, tmp_105_cast_fu_1701_p1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp3_stage1) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage1))) then 
            W_CONV1_5_address0 <= tmp_105_cast_fu_1701_p1(5 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter2 = ap_const_logic_1))) then 
            W_CONV1_5_address0 <= tmp_88_fu_1468_p1(5 - 1 downto 0);
        else 
            W_CONV1_5_address0 <= "XXXXX";
        end if; 
    end process;


    W_CONV1_5_ce0_assign_proc : process(ap_enable_reg_pp3_iter0, ap_block_pp2_stage0_11001, ap_CS_fsm_pp3_stage1, ap_block_pp3_stage1_11001, ap_enable_reg_pp2_iter2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp3_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage1) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1)))) then 
            W_CONV1_5_ce0 <= ap_const_logic_1;
        else 
            W_CONV1_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    W_CONV1_5_we0_assign_proc : process(ap_block_pp2_stage0_11001, div_t_reg_2731_pp2_iter1_reg, ap_enable_reg_pp2_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter2 = ap_const_logic_1) and ((div_t_reg_2731_pp2_iter1_reg = ap_const_lv3_5) or ((div_t_reg_2731_pp2_iter1_reg = ap_const_lv3_6) or (div_t_reg_2731_pp2_iter1_reg = ap_const_lv3_7))))) then 
            W_CONV1_5_we0 <= ap_const_logic_1;
        else 
            W_CONV1_5_we0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(7);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(15);
    ap_CS_fsm_pp2_stage0 <= ap_CS_fsm(23);
    ap_CS_fsm_pp3_stage0 <= ap_CS_fsm(25);
    ap_CS_fsm_pp3_stage1 <= ap_CS_fsm(26);
    ap_CS_fsm_pp3_stage2 <= ap_CS_fsm(27);
    ap_CS_fsm_pp3_stage3 <= ap_CS_fsm(28);
    ap_CS_fsm_pp3_stage4 <= ap_CS_fsm(29);
    ap_CS_fsm_pp3_stage5 <= ap_CS_fsm(30);
    ap_CS_fsm_pp3_stage6 <= ap_CS_fsm(31);
    ap_CS_fsm_pp3_stage7 <= ap_CS_fsm(32);
    ap_CS_fsm_pp4_stage0 <= ap_CS_fsm(34);
    ap_CS_fsm_pp4_stage1 <= ap_CS_fsm(35);
    ap_CS_fsm_pp4_stage2 <= ap_CS_fsm(36);
    ap_CS_fsm_pp4_stage3 <= ap_CS_fsm(37);
    ap_CS_fsm_pp4_stage7 <= ap_CS_fsm(41);
    ap_CS_fsm_pp4_stage8 <= ap_CS_fsm(42);
    ap_CS_fsm_pp5_stage0 <= ap_CS_fsm(44);
    ap_CS_fsm_pp5_stage1 <= ap_CS_fsm(45);
    ap_CS_fsm_pp6_stage0 <= ap_CS_fsm(47);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(8);
    ap_CS_fsm_state16 <= ap_CS_fsm(14);
    ap_CS_fsm_state20 <= ap_CS_fsm(16);
    ap_CS_fsm_state26 <= ap_CS_fsm(22);
    ap_CS_fsm_state30 <= ap_CS_fsm(24);
    ap_CS_fsm_state44 <= ap_CS_fsm(33);
    ap_CS_fsm_state55 <= ap_CS_fsm(43);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state79 <= ap_CS_fsm(46);
    ap_CS_fsm_state87 <= ap_CS_fsm(52);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(m_axi_BIAS_RVALID, ap_enable_reg_pp0_iter1)
    begin
                ap_block_pp0_stage0_11001 <= ((m_axi_BIAS_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(m_axi_BIAS_RVALID, ap_enable_reg_pp0_iter1)
    begin
                ap_block_pp0_stage0_subdone <= ((m_axi_BIAS_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;

        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage0_11001_assign_proc : process(m_axi_FM_DDR_BUFF1_RVALID, ap_enable_reg_pp1_iter1, exitcond7_reg_2696)
    begin
                ap_block_pp1_stage0_11001 <= ((m_axi_FM_DDR_BUFF1_RVALID = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (exitcond7_reg_2696 = ap_const_lv1_0));
    end process;


    ap_block_pp1_stage0_subdone_assign_proc : process(m_axi_FM_DDR_BUFF1_RVALID, ap_enable_reg_pp1_iter1, exitcond7_reg_2696)
    begin
                ap_block_pp1_stage0_subdone <= ((m_axi_FM_DDR_BUFF1_RVALID = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (exitcond7_reg_2696 = ap_const_lv1_0));
    end process;

        ap_block_pp2_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp2_stage0_11001_assign_proc : process(m_axi_WEIGHT_RVALID, ap_enable_reg_pp2_iter1, exitcond8_reg_2710)
    begin
                ap_block_pp2_stage0_11001 <= ((m_axi_WEIGHT_RVALID = ap_const_logic_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (exitcond8_reg_2710 = ap_const_lv1_0));
    end process;


    ap_block_pp2_stage0_subdone_assign_proc : process(m_axi_WEIGHT_RVALID, ap_enable_reg_pp2_iter1, exitcond8_reg_2710)
    begin
                ap_block_pp2_stage0_subdone <= ((m_axi_WEIGHT_RVALID = ap_const_logic_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (exitcond8_reg_2710 = ap_const_lv1_0));
    end process;

        ap_block_pp3_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage4_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage4_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage5_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage5_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage6_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage6_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage7_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage7_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage4_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage5_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage6_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage7_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage7_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage8_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage8_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage8_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp5_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp5_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp5_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp5_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp5_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp5_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp6_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp6_stage0_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp6_stage0_11001_assign_proc : process(ap_enable_reg_pp6_iter2, ap_block_state82_io)
    begin
                ap_block_pp6_stage0_11001 <= ((ap_const_boolean_1 = ap_block_state82_io) and (ap_enable_reg_pp6_iter2 = ap_const_logic_1));
    end process;


    ap_block_pp6_stage0_subdone_assign_proc : process(ap_enable_reg_pp6_iter2, ap_block_state82_io)
    begin
                ap_block_pp6_stage0_subdone <= ((ap_const_boolean_1 = ap_block_state82_io) and (ap_enable_reg_pp6_iter2 = ap_const_logic_1));
    end process;

        ap_block_state17_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state18_pp1_stage0_iter1_assign_proc : process(m_axi_FM_DDR_BUFF1_RVALID, exitcond7_reg_2696)
    begin
                ap_block_state18_pp1_stage0_iter1 <= ((m_axi_FM_DDR_BUFF1_RVALID = ap_const_logic_0) and (exitcond7_reg_2696 = ap_const_lv1_0));
    end process;

        ap_block_state19_pp1_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp2_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state28_pp2_stage0_iter1_assign_proc : process(m_axi_WEIGHT_RVALID, exitcond8_reg_2710)
    begin
                ap_block_state28_pp2_stage0_iter1 <= ((m_axi_WEIGHT_RVALID = ap_const_logic_0) and (exitcond8_reg_2710 = ap_const_lv1_0));
    end process;

        ap_block_state29_pp2_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp3_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state32_pp3_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state33_pp3_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state34_pp3_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state35_pp3_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state36_pp3_stage5_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state37_pp3_stage6_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state38_pp3_stage7_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state39_pp3_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state40_pp3_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state41_pp3_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state42_pp3_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state43_pp3_stage4_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state45_pp4_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state46_pp4_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state47_pp4_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state48_pp4_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state49_pp4_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state50_pp4_stage5_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state51_pp4_stage6_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state52_pp4_stage7_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state53_pp4_stage8_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state54_pp4_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state56_pp5_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state57_pp5_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state58_pp5_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state59_pp5_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state60_pp5_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state61_pp5_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state62_pp5_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state63_pp5_stage1_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state64_pp5_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state65_pp5_stage1_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state66_pp5_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state67_pp5_stage1_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state68_pp5_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state69_pp5_stage1_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state70_pp5_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state71_pp5_stage1_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state72_pp5_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state73_pp5_stage1_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state74_pp5_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state75_pp5_stage1_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state76_pp5_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state77_pp5_stage1_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state78_pp5_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state80_pp6_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state81_pp6_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state82_io_assign_proc : process(exitcond10_reg_3352_pp6_iter1_reg, ap_sig_ioackin_m_axi_FM_DDR_BUFF2_WREADY)
    begin
                ap_block_state82_io <= ((ap_sig_ioackin_m_axi_FM_DDR_BUFF2_WREADY = ap_const_logic_0) and (exitcond10_reg_3352_pp6_iter1_reg = ap_const_lv1_0));
    end process;

        ap_block_state82_pp6_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state9_pp0_stage0_iter1_assign_proc : process(m_axi_BIAS_RVALID)
    begin
                ap_block_state9_pp0_stage0_iter1 <= (m_axi_BIAS_RVALID = ap_const_logic_0);
    end process;


    ap_condition_pp0_exit_iter0_state8_assign_proc : process(exitcond9_fu_1334_p2)
    begin
        if ((exitcond9_fu_1334_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state8 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state8 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp1_exit_iter0_state17_assign_proc : process(exitcond7_fu_1382_p2)
    begin
        if ((exitcond7_fu_1382_p2 = ap_const_lv1_1)) then 
            ap_condition_pp1_exit_iter0_state17 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter0_state17 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp2_exit_iter0_state27_assign_proc : process(exitcond8_fu_1399_p2)
    begin
        if ((exitcond8_fu_1399_p2 = ap_const_lv1_1)) then 
            ap_condition_pp2_exit_iter0_state27 <= ap_const_logic_1;
        else 
            ap_condition_pp2_exit_iter0_state27 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp3_exit_iter0_state31_assign_proc : process(exitcond_flatten_fu_1492_p2)
    begin
        if ((exitcond_flatten_fu_1492_p2 = ap_const_lv1_1)) then 
            ap_condition_pp3_exit_iter0_state31 <= ap_const_logic_1;
        else 
            ap_condition_pp3_exit_iter0_state31 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp4_exit_iter0_state45_assign_proc : process(exitcond_flatten11_fu_1955_p2)
    begin
        if ((exitcond_flatten11_fu_1955_p2 = ap_const_lv1_1)) then 
            ap_condition_pp4_exit_iter0_state45 <= ap_const_logic_1;
        else 
            ap_condition_pp4_exit_iter0_state45 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp5_exit_iter0_state56_assign_proc : process(exitcond_flatten13_fu_2275_p2)
    begin
        if ((exitcond_flatten13_fu_2275_p2 = ap_const_lv1_1)) then 
            ap_condition_pp5_exit_iter0_state56 <= ap_const_logic_1;
        else 
            ap_condition_pp5_exit_iter0_state56 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp6_exit_iter0_state80_assign_proc : process(exitcond10_fu_2608_p2)
    begin
        if ((exitcond10_fu_2608_p2 = ap_const_lv1_1)) then 
            ap_condition_pp6_exit_iter0_state80 <= ap_const_logic_1;
        else 
            ap_condition_pp6_exit_iter0_state80 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, m_axi_FM_DDR_BUFF2_BVALID, ap_CS_fsm_state87)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_logic_1 = ap_CS_fsm_state87) and (m_axi_FM_DDR_BUFF2_BVALID = ap_const_logic_1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);
    ap_enable_pp2 <= (ap_idle_pp2 xor ap_const_logic_1);
    ap_enable_pp3 <= (ap_idle_pp3 xor ap_const_logic_1);
    ap_enable_pp4 <= (ap_idle_pp4 xor ap_const_logic_1);
    ap_enable_pp5 <= (ap_idle_pp5 xor ap_const_logic_1);
    ap_enable_pp6 <= (ap_idle_pp6 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_enable_reg_pp1_iter0 = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp2_assign_proc : process(ap_enable_reg_pp2_iter1, ap_enable_reg_pp2_iter0, ap_enable_reg_pp2_iter2)
    begin
        if (((ap_enable_reg_pp2_iter0 = ap_const_logic_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (ap_enable_reg_pp2_iter2 = ap_const_logic_0))) then 
            ap_idle_pp2 <= ap_const_logic_1;
        else 
            ap_idle_pp2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp3_assign_proc : process(ap_enable_reg_pp3_iter0, ap_enable_reg_pp3_iter1)
    begin
        if (((ap_enable_reg_pp3_iter1 = ap_const_logic_0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_0))) then 
            ap_idle_pp3 <= ap_const_logic_1;
        else 
            ap_idle_pp3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp4_assign_proc : process(ap_enable_reg_pp4_iter0, ap_enable_reg_pp4_iter1)
    begin
        if (((ap_enable_reg_pp4_iter0 = ap_const_logic_0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_0))) then 
            ap_idle_pp4 <= ap_const_logic_1;
        else 
            ap_idle_pp4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp5_assign_proc : process(ap_enable_reg_pp5_iter10, ap_enable_reg_pp5_iter3, ap_enable_reg_pp5_iter0, ap_enable_reg_pp5_iter1, ap_enable_reg_pp5_iter5, ap_enable_reg_pp5_iter6, ap_enable_reg_pp5_iter2, ap_enable_reg_pp5_iter4, ap_enable_reg_pp5_iter7, ap_enable_reg_pp5_iter8, ap_enable_reg_pp5_iter9, ap_enable_reg_pp5_iter11)
    begin
        if (((ap_enable_reg_pp5_iter3 = ap_const_logic_0) and (ap_enable_reg_pp5_iter10 = ap_const_logic_0) and (ap_enable_reg_pp5_iter11 = ap_const_logic_0) and (ap_enable_reg_pp5_iter9 = ap_const_logic_0) and (ap_enable_reg_pp5_iter8 = ap_const_logic_0) and (ap_enable_reg_pp5_iter7 = ap_const_logic_0) and (ap_enable_reg_pp5_iter4 = ap_const_logic_0) and (ap_enable_reg_pp5_iter2 = ap_const_logic_0) and (ap_enable_reg_pp5_iter6 = ap_const_logic_0) and (ap_enable_reg_pp5_iter5 = ap_const_logic_0) and (ap_enable_reg_pp5_iter1 = ap_const_logic_0) and (ap_enable_reg_pp5_iter0 = ap_const_logic_0))) then 
            ap_idle_pp5 <= ap_const_logic_1;
        else 
            ap_idle_pp5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp6_assign_proc : process(ap_enable_reg_pp6_iter2, ap_enable_reg_pp6_iter0, ap_enable_reg_pp6_iter1)
    begin
        if (((ap_enable_reg_pp6_iter2 = ap_const_logic_0) and (ap_enable_reg_pp6_iter1 = ap_const_logic_0) and (ap_enable_reg_pp6_iter0 = ap_const_logic_0))) then 
            ap_idle_pp6 <= ap_const_logic_1;
        else 
            ap_idle_pp6 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_c2_phi_fu_1152_p4_assign_proc : process(c2_reg_1148, exitcond_flatten11_reg_2991, ap_CS_fsm_pp4_stage0, tmp_46_mid2_reg_3043, ap_enable_reg_pp4_iter1, ap_block_pp4_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage0) and (exitcond_flatten11_reg_2991 = ap_const_lv1_0))) then 
            ap_phi_mux_c2_phi_fu_1152_p4 <= tmp_46_mid2_reg_3043;
        else 
            ap_phi_mux_c2_phi_fu_1152_p4 <= c2_reg_1148;
        end if; 
    end process;


    ap_phi_mux_c5_phi_fu_1207_p4_assign_proc : process(c5_reg_1203, exitcond_flatten13_reg_3118, ap_CS_fsm_pp5_stage0, tmp_47_mid2_reg_3167, ap_enable_reg_pp5_iter1, ap_block_pp5_stage0)
    begin
        if (((ap_enable_reg_pp5_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_const_boolean_0 = ap_block_pp5_stage0) and (exitcond_flatten13_reg_3118 = ap_const_lv1_0))) then 
            ap_phi_mux_c5_phi_fu_1207_p4 <= tmp_47_mid2_reg_3167;
        else 
            ap_phi_mux_c5_phi_fu_1207_p4 <= c5_reg_1203;
        end if; 
    end process;


    ap_phi_mux_c_phi_fu_1096_p4_assign_proc : process(c_reg_1092, exitcond_flatten_reg_2755, ap_enable_reg_pp3_iter1, ap_CS_fsm_pp3_stage0, tmp_63_mid2_reg_2941, ap_block_pp3_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0) and (exitcond_flatten_reg_2755 = ap_const_lv1_0))) then 
            ap_phi_mux_c_phi_fu_1096_p4 <= tmp_63_mid2_reg_2941;
        else 
            ap_phi_mux_c_phi_fu_1096_p4 <= c_reg_1092;
        end if; 
    end process;


    ap_phi_mux_chl_out2_phi_fu_1107_p4_assign_proc : process(chl_out2_reg_1103, ap_enable_reg_pp3_iter1, exitcond_flatten_reg_2755_pp3_iter1_reg, ap_CS_fsm_pp3_stage1, chl_out_3_reg_2916, ap_block_pp3_stage1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp3_stage1) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage1) and (exitcond_flatten_reg_2755_pp3_iter1_reg = ap_const_lv1_0))) then 
            ap_phi_mux_chl_out2_phi_fu_1107_p4 <= chl_out_3_reg_2916;
        else 
            ap_phi_mux_chl_out2_phi_fu_1107_p4 <= chl_out2_reg_1103;
        end if; 
    end process;


    ap_phi_mux_chl_out3_phi_fu_1163_p4_assign_proc : process(chl_out3_reg_1159, exitcond_flatten11_reg_2991, ap_CS_fsm_pp4_stage0, chl_out_reg_3088, ap_enable_reg_pp4_iter1, ap_block_pp4_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage0) and (exitcond_flatten11_reg_2991 = ap_const_lv1_0))) then 
            ap_phi_mux_chl_out3_phi_fu_1163_p4 <= chl_out_reg_3088;
        else 
            ap_phi_mux_chl_out3_phi_fu_1163_p4 <= chl_out3_reg_1159;
        end if; 
    end process;


    ap_phi_mux_chl_out6_phi_fu_1218_p4_assign_proc : process(chl_out6_reg_1214, ap_CS_fsm_pp5_stage1, exitcond_flatten13_reg_3118_pp5_iter1_reg, chl_out_2_reg_3247, ap_enable_reg_pp5_iter1, ap_block_pp5_stage1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp5_stage1) and (ap_enable_reg_pp5_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp5_stage1) and (exitcond_flatten13_reg_3118_pp5_iter1_reg = ap_const_lv1_0))) then 
            ap_phi_mux_chl_out6_phi_fu_1218_p4 <= chl_out_2_reg_3247;
        else 
            ap_phi_mux_chl_out6_phi_fu_1218_p4 <= chl_out6_reg_1214;
        end if; 
    end process;


    ap_phi_mux_indvar8_phi_fu_971_p4_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, exitcond7_reg_2696, indvar8_reg_967, indvar_next4_reg_2700)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (exitcond7_reg_2696 = ap_const_lv1_0))) then 
            ap_phi_mux_indvar8_phi_fu_971_p4 <= indvar_next4_reg_2700;
        else 
            ap_phi_mux_indvar8_phi_fu_971_p4 <= indvar8_reg_967;
        end if; 
    end process;


    ap_phi_mux_indvar_flatten1_phi_fu_1039_p4_assign_proc : process(indvar_flatten1_reg_1035, exitcond_flatten_reg_2755, ap_enable_reg_pp3_iter1, ap_CS_fsm_pp3_stage0, indvar_flatten_next1_reg_2986, ap_block_pp3_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0) and (exitcond_flatten_reg_2755 = ap_const_lv1_0))) then 
            ap_phi_mux_indvar_flatten1_phi_fu_1039_p4 <= indvar_flatten_next1_reg_2986;
        else 
            ap_phi_mux_indvar_flatten1_phi_fu_1039_p4 <= indvar_flatten1_reg_1035;
        end if; 
    end process;


    ap_phi_mux_indvar_flatten2_phi_fu_1062_p4_assign_proc : process(indvar_flatten2_reg_1058, exitcond_flatten_reg_2755, ap_enable_reg_pp3_iter1, ap_CS_fsm_pp3_stage0, indvar_flatten_next9_reg_2976, ap_block_pp3_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0) and (exitcond_flatten_reg_2755 = ap_const_lv1_0))) then 
            ap_phi_mux_indvar_flatten2_phi_fu_1062_p4 <= indvar_flatten_next9_reg_2976;
        else 
            ap_phi_mux_indvar_flatten2_phi_fu_1062_p4 <= indvar_flatten2_reg_1058;
        end if; 
    end process;


    ap_phi_mux_indvar_flatten3_phi_fu_1119_p4_assign_proc : process(indvar_flatten3_reg_1115, exitcond_flatten11_reg_2991, ap_CS_fsm_pp4_stage0, indvar_flatten_next1_3_reg_2995, ap_enable_reg_pp4_iter1, ap_block_pp4_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage0) and (exitcond_flatten11_reg_2991 = ap_const_lv1_0))) then 
            ap_phi_mux_indvar_flatten3_phi_fu_1119_p4 <= indvar_flatten_next1_3_reg_2995;
        else 
            ap_phi_mux_indvar_flatten3_phi_fu_1119_p4 <= indvar_flatten3_reg_1115;
        end if; 
    end process;


    ap_phi_mux_indvar_flatten4_phi_fu_1141_p4_assign_proc : process(indvar_flatten4_reg_1137, exitcond_flatten11_reg_2991, ap_CS_fsm_pp4_stage0, indvar_flatten_next1_2_reg_3103, ap_enable_reg_pp4_iter1, ap_block_pp4_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage0) and (exitcond_flatten11_reg_2991 = ap_const_lv1_0))) then 
            ap_phi_mux_indvar_flatten4_phi_fu_1141_p4 <= indvar_flatten_next1_2_reg_3103;
        else 
            ap_phi_mux_indvar_flatten4_phi_fu_1141_p4 <= indvar_flatten4_reg_1137;
        end if; 
    end process;


    ap_phi_mux_indvar_flatten5_phi_fu_1174_p4_assign_proc : process(indvar_flatten5_reg_1170, exitcond_flatten13_reg_3118, ap_CS_fsm_pp5_stage0, indvar_flatten_next1_5_reg_3122, ap_enable_reg_pp5_iter1, ap_block_pp5_stage0)
    begin
        if (((ap_enable_reg_pp5_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_const_boolean_0 = ap_block_pp5_stage0) and (exitcond_flatten13_reg_3118 = ap_const_lv1_0))) then 
            ap_phi_mux_indvar_flatten5_phi_fu_1174_p4 <= indvar_flatten_next1_5_reg_3122;
        else 
            ap_phi_mux_indvar_flatten5_phi_fu_1174_p4 <= indvar_flatten5_reg_1170;
        end if; 
    end process;


    ap_phi_mux_indvar_flatten6_phi_fu_1196_p4_assign_proc : process(indvar_flatten6_reg_1192, exitcond_flatten13_reg_3118, ap_CS_fsm_pp5_stage0, indvar_flatten_next1_4_reg_3252, ap_enable_reg_pp5_iter1, ap_block_pp5_stage0)
    begin
        if (((ap_enable_reg_pp5_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_const_boolean_0 = ap_block_pp5_stage0) and (exitcond_flatten13_reg_3118 = ap_const_lv1_0))) then 
            ap_phi_mux_indvar_flatten6_phi_fu_1196_p4 <= indvar_flatten_next1_4_reg_3252;
        else 
            ap_phi_mux_indvar_flatten6_phi_fu_1196_p4 <= indvar_flatten6_reg_1192;
        end if; 
    end process;


    ap_phi_mux_indvar_flatten9_phi_fu_1016_p4_assign_proc : process(indvar_flatten9_reg_1012, exitcond_flatten_reg_2755, ap_enable_reg_pp3_iter1, ap_CS_fsm_pp3_stage0, indvar_flatten_next1_1_reg_2759, ap_block_pp3_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0) and (exitcond_flatten_reg_2755 = ap_const_lv1_0))) then 
            ap_phi_mux_indvar_flatten9_phi_fu_1016_p4 <= indvar_flatten_next1_1_reg_2759;
        else 
            ap_phi_mux_indvar_flatten9_phi_fu_1016_p4 <= indvar_flatten9_reg_1012;
        end if; 
    end process;


    ap_phi_mux_indvar_flatten_phi_fu_1084_p4_assign_proc : process(indvar_flatten_reg_1080, exitcond_flatten_reg_2755, ap_enable_reg_pp3_iter1, ap_CS_fsm_pp3_stage0, indvar_flatten_next_reg_2921, ap_block_pp3_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0) and (exitcond_flatten_reg_2755 = ap_const_lv1_0))) then 
            ap_phi_mux_indvar_flatten_phi_fu_1084_p4 <= indvar_flatten_next_reg_2921;
        else 
            ap_phi_mux_indvar_flatten_phi_fu_1084_p4 <= indvar_flatten_reg_1080;
        end if; 
    end process;


    ap_phi_mux_indvar_phi_fu_959_p4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, indvar_reg_955, exitcond9_reg_2687, indvar_next_reg_2691)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond9_reg_2687 = ap_const_lv1_0))) then 
            ap_phi_mux_indvar_phi_fu_959_p4 <= indvar_next_reg_2691;
        else 
            ap_phi_mux_indvar_phi_fu_959_p4 <= indvar_reg_955;
        end if; 
    end process;


    ap_phi_mux_kc_phi_fu_1051_p4_assign_proc : process(kc_reg_1047, exitcond_flatten_reg_2755, ap_enable_reg_pp3_iter1, ap_CS_fsm_pp3_stage0, kc_cast_mid2_reg_2853, ap_block_pp3_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0) and (exitcond_flatten_reg_2755 = ap_const_lv1_0))) then 
            ap_phi_mux_kc_phi_fu_1051_p4 <= kc_cast_mid2_reg_2853;
        else 
            ap_phi_mux_kc_phi_fu_1051_p4 <= kc_reg_1047;
        end if; 
    end process;


    ap_phi_mux_kr_phi_fu_1027_p4_assign_proc : process(kr_reg_1023, exitcond_flatten_reg_2755, ap_enable_reg_pp3_iter1, ap_CS_fsm_pp3_stage0, kr_cast_mid2_reg_2848, ap_block_pp3_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0) and (exitcond_flatten_reg_2755 = ap_const_lv1_0))) then 
            ap_phi_mux_kr_phi_fu_1027_p4 <= kr_cast_mid2_reg_2848;
        else 
            ap_phi_mux_kr_phi_fu_1027_p4 <= kr_reg_1023;
        end if; 
    end process;


    ap_phi_mux_r1_phi_fu_1130_p4_assign_proc : process(r1_reg_1126, exitcond_flatten11_reg_2991, ap_CS_fsm_pp4_stage0, tmp_39_mid2_v_reg_3010, ap_enable_reg_pp4_iter1, ap_block_pp4_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage0) and (exitcond_flatten11_reg_2991 = ap_const_lv1_0))) then 
            ap_phi_mux_r1_phi_fu_1130_p4 <= tmp_39_mid2_v_reg_3010;
        else 
            ap_phi_mux_r1_phi_fu_1130_p4 <= r1_reg_1126;
        end if; 
    end process;


    ap_phi_mux_r4_phi_fu_1185_p4_assign_proc : process(r4_reg_1181, exitcond_flatten13_reg_3118, ap_CS_fsm_pp5_stage0, tmp_40_mid2_v_reg_3142, ap_enable_reg_pp5_iter1, ap_block_pp5_stage0)
    begin
        if (((ap_enable_reg_pp5_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_const_boolean_0 = ap_block_pp5_stage0) and (exitcond_flatten13_reg_3118 = ap_const_lv1_0))) then 
            ap_phi_mux_r4_phi_fu_1185_p4 <= tmp_40_mid2_v_reg_3142;
        else 
            ap_phi_mux_r4_phi_fu_1185_p4 <= r4_reg_1181;
        end if; 
    end process;


    ap_phi_mux_r_phi_fu_1073_p4_assign_proc : process(r_reg_1069, exitcond_flatten_reg_2755, ap_enable_reg_pp3_iter1, ap_CS_fsm_pp3_stage0, tmp_52_mid2_reg_2888, ap_block_pp3_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0) and (exitcond_flatten_reg_2755 = ap_const_lv1_0))) then 
            ap_phi_mux_r_phi_fu_1073_p4 <= tmp_52_mid2_reg_2888;
        else 
            ap_phi_mux_r_phi_fu_1073_p4 <= r_reg_1069;
        end if; 
    end process;


    ap_ready_assign_proc : process(m_axi_FM_DDR_BUFF2_BVALID, ap_CS_fsm_state87)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state87) and (m_axi_FM_DDR_BUFF2_BVALID = ap_const_logic_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_ioackin_m_axi_BIAS_ARREADY_assign_proc : process(m_axi_BIAS_ARREADY, ap_reg_ioackin_m_axi_BIAS_ARREADY)
    begin
        if ((ap_reg_ioackin_m_axi_BIAS_ARREADY = ap_const_logic_0)) then 
            ap_sig_ioackin_m_axi_BIAS_ARREADY <= m_axi_BIAS_ARREADY;
        else 
            ap_sig_ioackin_m_axi_BIAS_ARREADY <= ap_const_logic_1;
        end if; 
    end process;


    ap_sig_ioackin_m_axi_FM_DDR_BUFF1_ARREADY_assign_proc : process(m_axi_FM_DDR_BUFF1_ARREADY, ap_reg_ioackin_m_axi_FM_DDR_BUFF1_ARREADY)
    begin
        if ((ap_reg_ioackin_m_axi_FM_DDR_BUFF1_ARREADY = ap_const_logic_0)) then 
            ap_sig_ioackin_m_axi_FM_DDR_BUFF1_ARREADY <= m_axi_FM_DDR_BUFF1_ARREADY;
        else 
            ap_sig_ioackin_m_axi_FM_DDR_BUFF1_ARREADY <= ap_const_logic_1;
        end if; 
    end process;


    ap_sig_ioackin_m_axi_FM_DDR_BUFF2_AWREADY_assign_proc : process(m_axi_FM_DDR_BUFF2_AWREADY, ap_reg_ioackin_m_axi_FM_DDR_BUFF2_AWREADY)
    begin
        if ((ap_reg_ioackin_m_axi_FM_DDR_BUFF2_AWREADY = ap_const_logic_0)) then 
            ap_sig_ioackin_m_axi_FM_DDR_BUFF2_AWREADY <= m_axi_FM_DDR_BUFF2_AWREADY;
        else 
            ap_sig_ioackin_m_axi_FM_DDR_BUFF2_AWREADY <= ap_const_logic_1;
        end if; 
    end process;


    ap_sig_ioackin_m_axi_FM_DDR_BUFF2_WREADY_assign_proc : process(m_axi_FM_DDR_BUFF2_WREADY, ap_reg_ioackin_m_axi_FM_DDR_BUFF2_WREADY)
    begin
        if ((ap_reg_ioackin_m_axi_FM_DDR_BUFF2_WREADY = ap_const_logic_0)) then 
            ap_sig_ioackin_m_axi_FM_DDR_BUFF2_WREADY <= m_axi_FM_DDR_BUFF2_WREADY;
        else 
            ap_sig_ioackin_m_axi_FM_DDR_BUFF2_WREADY <= ap_const_logic_1;
        end if; 
    end process;


    ap_sig_ioackin_m_axi_WEIGHT_ARREADY_assign_proc : process(m_axi_WEIGHT_ARREADY, ap_reg_ioackin_m_axi_WEIGHT_ARREADY)
    begin
        if ((ap_reg_ioackin_m_axi_WEIGHT_ARREADY = ap_const_logic_0)) then 
            ap_sig_ioackin_m_axi_WEIGHT_ARREADY <= m_axi_WEIGHT_ARREADY;
        else 
            ap_sig_ioackin_m_axi_WEIGHT_ARREADY <= ap_const_logic_1;
        end if; 
    end process;

    c2_mid_fu_1979_p3 <= 
        ap_const_lv5_0 when (exitcond_flatten12_fu_1973_p2(0) = '1') else 
        ap_phi_mux_c2_phi_fu_1152_p4;
    c5_mid_fu_2299_p3 <= 
        ap_const_lv5_0 when (exitcond_flatten14_fu_2293_p2(0) = '1') else 
        ap_phi_mux_c5_phi_fu_1207_p4;
    c_4_fu_2013_p2 <= std_logic_vector(unsigned(ap_const_lv5_1) + unsigned(c2_mid_fu_1979_p3));
    c_5_fu_2388_p2 <= std_logic_vector(unsigned(c5_mid_reg_3136) + unsigned(ap_const_lv5_2));
    c_6_fu_1781_p2 <= std_logic_vector(unsigned(c_mid3_reg_2832) + unsigned(ap_const_lv5_1));
    c_mid3_fu_1604_p3 <= 
        ap_const_lv5_0 when (tmp_86_fu_1598_p2(0) = '1') else 
        ap_phi_mux_c_phi_fu_1096_p4;
    chl_out2_mid2_fu_1796_p3 <= 
        ap_const_lv3_0 when (tmp_103_fu_1791_p2(0) = '1') else 
        ap_phi_mux_chl_out2_phi_fu_1107_p4;
    chl_out3_mid2_fu_2025_p3 <= 
        ap_const_lv3_0 when (tmp_110_fu_2019_p2(0) = '1') else 
        ap_phi_mux_chl_out3_phi_fu_1163_p4;
    chl_out6_mid2_fu_2398_p3 <= 
        ap_const_lv3_0 when (tmp_122_fu_2393_p2(0) = '1') else 
        ap_phi_mux_chl_out6_phi_fu_1218_p4;
    chl_out_2_fu_2485_p2 <= std_logic_vector(unsigned(chl_out6_mid2_fu_2398_p3) + unsigned(ap_const_lv3_1));
    chl_out_3_fu_1831_p2 <= std_logic_vector(unsigned(chl_out2_mid2_fu_1796_p3) + unsigned(ap_const_lv3_1));
    chl_out_fu_2198_p2 <= std_logic_vector(unsigned(chl_out3_mid2_reg_3027) + unsigned(ap_const_lv3_1));

    conv1_buff_0_address0_assign_proc : process(ap_enable_reg_pp3_iter0, ap_CS_fsm_pp5_stage1, ap_enable_reg_pp3_iter1, ap_enable_reg_pp4_iter0, ap_enable_reg_pp5_iter3, ap_CS_fsm_pp3_stage5, conv1_buff_0_addr_reg_2946, ap_CS_fsm_pp4_stage0, ap_CS_fsm_pp4_stage1, conv1_buff_0_addr_1_reg_3048, ap_CS_fsm_pp5_stage0, ap_enable_reg_pp5_iter0, ap_CS_fsm_pp3_stage4, ap_enable_reg_pp4_iter1, ap_block_pp4_stage0, ap_block_pp5_stage0, ap_block_pp5_stage1, tmp_122_cast_fu_1916_p1, ap_block_pp3_stage5, tmp_127_cast_fu_2082_p1, ap_block_pp4_stage1, tmp_142_cast_fu_2457_p1, tmp_141_cast_fu_2537_p1, ap_block_pp3_stage4)
    begin
        if (((ap_enable_reg_pp5_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_const_boolean_0 = ap_block_pp5_stage0))) then 
            conv1_buff_0_address0 <= tmp_141_cast_fu_2537_p1(10 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp5_stage1) and (ap_enable_reg_pp5_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp5_stage1))) then 
            conv1_buff_0_address0 <= tmp_142_cast_fu_2457_p1(10 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage0))) then 
            conv1_buff_0_address0 <= conv1_buff_0_addr_1_reg_3048;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp4_stage1) and (ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage1))) then 
            conv1_buff_0_address0 <= tmp_127_cast_fu_2082_p1(10 - 1 downto 0);
        elsif (((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage4) and (ap_const_boolean_0 = ap_block_pp3_stage4))) then 
            conv1_buff_0_address0 <= conv1_buff_0_addr_reg_2946;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp3_stage5) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage5))) then 
            conv1_buff_0_address0 <= tmp_122_cast_fu_1916_p1(10 - 1 downto 0);
        else 
            conv1_buff_0_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    conv1_buff_0_address1_assign_proc : process(ap_CS_fsm_pp5_stage1, ap_CS_fsm_pp5_stage0, ap_enable_reg_pp5_iter0, ap_enable_reg_pp5_iter5, ap_block_pp5_stage0, ap_block_pp5_stage1, tmp_140_cast_fu_2423_p1, tmp_143_cast_fu_2552_p1)
    begin
        if (((ap_enable_reg_pp5_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_const_boolean_0 = ap_block_pp5_stage0))) then 
            conv1_buff_0_address1 <= tmp_143_cast_fu_2552_p1(10 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp5_stage1) and (ap_enable_reg_pp5_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp5_stage1))) then 
            conv1_buff_0_address1 <= tmp_140_cast_fu_2423_p1(10 - 1 downto 0);
        else 
            conv1_buff_0_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    conv1_buff_0_ce0_assign_proc : process(ap_enable_reg_pp3_iter0, ap_CS_fsm_pp5_stage1, ap_block_pp5_stage1_11001, ap_enable_reg_pp3_iter1, ap_enable_reg_pp4_iter0, ap_enable_reg_pp5_iter3, ap_CS_fsm_pp3_stage5, ap_block_pp3_stage5_11001, ap_CS_fsm_pp4_stage0, ap_block_pp4_stage0_11001, ap_CS_fsm_pp4_stage1, ap_block_pp4_stage1_11001, ap_CS_fsm_pp5_stage0, ap_block_pp5_stage0_11001, ap_enable_reg_pp5_iter0, ap_CS_fsm_pp3_stage4, ap_enable_reg_pp4_iter1, ap_block_pp3_stage4_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1)) or ((ap_enable_reg_pp5_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_const_boolean_0 = ap_block_pp5_stage0_11001)) or ((ap_const_boolean_0 = ap_block_pp4_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage1) and (ap_enable_reg_pp4_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage4) and (ap_const_boolean_0 = ap_block_pp3_stage4_11001)) or ((ap_const_boolean_0 = ap_block_pp5_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage1) and (ap_enable_reg_pp5_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp3_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage5) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1)))) then 
            conv1_buff_0_ce0 <= ap_const_logic_1;
        else 
            conv1_buff_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_buff_0_ce1_assign_proc : process(ap_CS_fsm_pp5_stage1, ap_block_pp5_stage1_11001, ap_CS_fsm_pp5_stage0, ap_block_pp5_stage0_11001, ap_enable_reg_pp5_iter0, ap_enable_reg_pp5_iter5)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp5_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage1) and (ap_enable_reg_pp5_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp5_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_const_boolean_0 = ap_block_pp5_stage0_11001)))) then 
            conv1_buff_0_ce1 <= ap_const_logic_1;
        else 
            conv1_buff_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_buff_0_d0_assign_proc : process(reg_1322, ap_enable_reg_pp3_iter1, ap_CS_fsm_pp4_stage0, tmp_56_reg_3093, ap_CS_fsm_pp3_stage4, ap_enable_reg_pp4_iter1, ap_block_pp4_stage0, ap_block_pp3_stage4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage0))) then 
            conv1_buff_0_d0 <= tmp_56_reg_3093;
        elsif (((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage4) and (ap_const_boolean_0 = ap_block_pp3_stage4))) then 
            conv1_buff_0_d0 <= reg_1322;
        else 
            conv1_buff_0_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    conv1_buff_0_we0_assign_proc : process(ap_enable_reg_pp3_iter1, chl_out2_mid2_reg_2905_pp3_iter1_reg, ap_CS_fsm_pp4_stage0, ap_block_pp4_stage0_11001, chl_out3_mid2_reg_3027, ap_CS_fsm_pp3_stage4, ap_enable_reg_pp4_iter1, ap_block_pp3_stage4_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (chl_out3_mid2_reg_3027 = ap_const_lv3_0)) or ((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage4) and (ap_const_boolean_0 = ap_block_pp3_stage4_11001) and (chl_out2_mid2_reg_2905_pp3_iter1_reg = ap_const_lv3_0)))) then 
            conv1_buff_0_we0 <= ap_const_logic_1;
        else 
            conv1_buff_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_buff_1_address0_assign_proc : process(ap_enable_reg_pp3_iter0, ap_CS_fsm_pp5_stage1, ap_enable_reg_pp3_iter1, ap_enable_reg_pp4_iter0, ap_enable_reg_pp5_iter3, ap_CS_fsm_pp3_stage5, conv1_buff_1_addr_reg_2951, ap_CS_fsm_pp4_stage0, ap_CS_fsm_pp4_stage1, conv1_buff_1_addr_1_reg_3053, ap_CS_fsm_pp5_stage0, ap_enable_reg_pp5_iter0, ap_CS_fsm_pp3_stage4, ap_enable_reg_pp4_iter1, ap_block_pp4_stage0, ap_block_pp5_stage0, ap_block_pp5_stage1, tmp_122_cast_fu_1916_p1, ap_block_pp3_stage5, tmp_127_cast_fu_2082_p1, ap_block_pp4_stage1, tmp_142_cast_fu_2457_p1, tmp_141_cast_fu_2537_p1, ap_block_pp3_stage4)
    begin
        if (((ap_enable_reg_pp5_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_const_boolean_0 = ap_block_pp5_stage0))) then 
            conv1_buff_1_address0 <= tmp_141_cast_fu_2537_p1(10 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp5_stage1) and (ap_enable_reg_pp5_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp5_stage1))) then 
            conv1_buff_1_address0 <= tmp_142_cast_fu_2457_p1(10 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage0))) then 
            conv1_buff_1_address0 <= conv1_buff_1_addr_1_reg_3053;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp4_stage1) and (ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage1))) then 
            conv1_buff_1_address0 <= tmp_127_cast_fu_2082_p1(10 - 1 downto 0);
        elsif (((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage4) and (ap_const_boolean_0 = ap_block_pp3_stage4))) then 
            conv1_buff_1_address0 <= conv1_buff_1_addr_reg_2951;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp3_stage5) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage5))) then 
            conv1_buff_1_address0 <= tmp_122_cast_fu_1916_p1(10 - 1 downto 0);
        else 
            conv1_buff_1_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    conv1_buff_1_address1_assign_proc : process(ap_CS_fsm_pp5_stage1, ap_CS_fsm_pp5_stage0, ap_enable_reg_pp5_iter0, ap_enable_reg_pp5_iter5, ap_block_pp5_stage0, ap_block_pp5_stage1, tmp_140_cast_fu_2423_p1, tmp_143_cast_fu_2552_p1)
    begin
        if (((ap_enable_reg_pp5_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_const_boolean_0 = ap_block_pp5_stage0))) then 
            conv1_buff_1_address1 <= tmp_143_cast_fu_2552_p1(10 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp5_stage1) and (ap_enable_reg_pp5_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp5_stage1))) then 
            conv1_buff_1_address1 <= tmp_140_cast_fu_2423_p1(10 - 1 downto 0);
        else 
            conv1_buff_1_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    conv1_buff_1_ce0_assign_proc : process(ap_enable_reg_pp3_iter0, ap_CS_fsm_pp5_stage1, ap_block_pp5_stage1_11001, ap_enable_reg_pp3_iter1, ap_enable_reg_pp4_iter0, ap_enable_reg_pp5_iter3, ap_CS_fsm_pp3_stage5, ap_block_pp3_stage5_11001, ap_CS_fsm_pp4_stage0, ap_block_pp4_stage0_11001, ap_CS_fsm_pp4_stage1, ap_block_pp4_stage1_11001, ap_CS_fsm_pp5_stage0, ap_block_pp5_stage0_11001, ap_enable_reg_pp5_iter0, ap_CS_fsm_pp3_stage4, ap_enable_reg_pp4_iter1, ap_block_pp3_stage4_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1)) or ((ap_enable_reg_pp5_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_const_boolean_0 = ap_block_pp5_stage0_11001)) or ((ap_const_boolean_0 = ap_block_pp4_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage1) and (ap_enable_reg_pp4_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage4) and (ap_const_boolean_0 = ap_block_pp3_stage4_11001)) or ((ap_const_boolean_0 = ap_block_pp5_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage1) and (ap_enable_reg_pp5_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp3_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage5) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1)))) then 
            conv1_buff_1_ce0 <= ap_const_logic_1;
        else 
            conv1_buff_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_buff_1_ce1_assign_proc : process(ap_CS_fsm_pp5_stage1, ap_block_pp5_stage1_11001, ap_CS_fsm_pp5_stage0, ap_block_pp5_stage0_11001, ap_enable_reg_pp5_iter0, ap_enable_reg_pp5_iter5)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp5_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage1) and (ap_enable_reg_pp5_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp5_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_const_boolean_0 = ap_block_pp5_stage0_11001)))) then 
            conv1_buff_1_ce1 <= ap_const_logic_1;
        else 
            conv1_buff_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_buff_1_d0_assign_proc : process(reg_1322, ap_enable_reg_pp3_iter1, ap_CS_fsm_pp4_stage0, tmp_56_reg_3093, ap_CS_fsm_pp3_stage4, ap_enable_reg_pp4_iter1, ap_block_pp4_stage0, ap_block_pp3_stage4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage0))) then 
            conv1_buff_1_d0 <= tmp_56_reg_3093;
        elsif (((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage4) and (ap_const_boolean_0 = ap_block_pp3_stage4))) then 
            conv1_buff_1_d0 <= reg_1322;
        else 
            conv1_buff_1_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    conv1_buff_1_we0_assign_proc : process(ap_enable_reg_pp3_iter1, chl_out2_mid2_reg_2905_pp3_iter1_reg, ap_CS_fsm_pp4_stage0, ap_block_pp4_stage0_11001, chl_out3_mid2_reg_3027, ap_CS_fsm_pp3_stage4, ap_enable_reg_pp4_iter1, ap_block_pp3_stage4_11001)
    begin
        if ((((chl_out3_mid2_reg_3027 = ap_const_lv3_1) and (ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1)) or ((chl_out2_mid2_reg_2905_pp3_iter1_reg = ap_const_lv3_1) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage4) and (ap_const_boolean_0 = ap_block_pp3_stage4_11001)))) then 
            conv1_buff_1_we0 <= ap_const_logic_1;
        else 
            conv1_buff_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_buff_2_address0_assign_proc : process(ap_enable_reg_pp3_iter0, ap_CS_fsm_pp5_stage1, ap_enable_reg_pp3_iter1, ap_enable_reg_pp4_iter0, ap_enable_reg_pp5_iter3, ap_CS_fsm_pp3_stage5, conv1_buff_2_addr_reg_2956, ap_CS_fsm_pp4_stage0, ap_CS_fsm_pp4_stage1, conv1_buff_2_addr_1_reg_3058, ap_CS_fsm_pp5_stage0, ap_enable_reg_pp5_iter0, ap_CS_fsm_pp3_stage4, ap_enable_reg_pp4_iter1, ap_block_pp4_stage0, ap_block_pp5_stage0, ap_block_pp5_stage1, tmp_122_cast_fu_1916_p1, ap_block_pp3_stage5, tmp_127_cast_fu_2082_p1, ap_block_pp4_stage1, tmp_142_cast_fu_2457_p1, tmp_141_cast_fu_2537_p1, ap_block_pp3_stage4)
    begin
        if (((ap_enable_reg_pp5_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_const_boolean_0 = ap_block_pp5_stage0))) then 
            conv1_buff_2_address0 <= tmp_141_cast_fu_2537_p1(10 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp5_stage1) and (ap_enable_reg_pp5_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp5_stage1))) then 
            conv1_buff_2_address0 <= tmp_142_cast_fu_2457_p1(10 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage0))) then 
            conv1_buff_2_address0 <= conv1_buff_2_addr_1_reg_3058;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp4_stage1) and (ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage1))) then 
            conv1_buff_2_address0 <= tmp_127_cast_fu_2082_p1(10 - 1 downto 0);
        elsif (((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage4) and (ap_const_boolean_0 = ap_block_pp3_stage4))) then 
            conv1_buff_2_address0 <= conv1_buff_2_addr_reg_2956;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp3_stage5) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage5))) then 
            conv1_buff_2_address0 <= tmp_122_cast_fu_1916_p1(10 - 1 downto 0);
        else 
            conv1_buff_2_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    conv1_buff_2_address1_assign_proc : process(ap_CS_fsm_pp5_stage1, ap_CS_fsm_pp5_stage0, ap_enable_reg_pp5_iter0, ap_enable_reg_pp5_iter5, ap_block_pp5_stage0, ap_block_pp5_stage1, tmp_140_cast_fu_2423_p1, tmp_143_cast_fu_2552_p1)
    begin
        if (((ap_enable_reg_pp5_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_const_boolean_0 = ap_block_pp5_stage0))) then 
            conv1_buff_2_address1 <= tmp_143_cast_fu_2552_p1(10 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp5_stage1) and (ap_enable_reg_pp5_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp5_stage1))) then 
            conv1_buff_2_address1 <= tmp_140_cast_fu_2423_p1(10 - 1 downto 0);
        else 
            conv1_buff_2_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    conv1_buff_2_ce0_assign_proc : process(ap_enable_reg_pp3_iter0, ap_CS_fsm_pp5_stage1, ap_block_pp5_stage1_11001, ap_enable_reg_pp3_iter1, ap_enable_reg_pp4_iter0, ap_enable_reg_pp5_iter3, ap_CS_fsm_pp3_stage5, ap_block_pp3_stage5_11001, ap_CS_fsm_pp4_stage0, ap_block_pp4_stage0_11001, ap_CS_fsm_pp4_stage1, ap_block_pp4_stage1_11001, ap_CS_fsm_pp5_stage0, ap_block_pp5_stage0_11001, ap_enable_reg_pp5_iter0, ap_CS_fsm_pp3_stage4, ap_enable_reg_pp4_iter1, ap_block_pp3_stage4_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1)) or ((ap_enable_reg_pp5_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_const_boolean_0 = ap_block_pp5_stage0_11001)) or ((ap_const_boolean_0 = ap_block_pp4_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage1) and (ap_enable_reg_pp4_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage4) and (ap_const_boolean_0 = ap_block_pp3_stage4_11001)) or ((ap_const_boolean_0 = ap_block_pp5_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage1) and (ap_enable_reg_pp5_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp3_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage5) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1)))) then 
            conv1_buff_2_ce0 <= ap_const_logic_1;
        else 
            conv1_buff_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_buff_2_ce1_assign_proc : process(ap_CS_fsm_pp5_stage1, ap_block_pp5_stage1_11001, ap_CS_fsm_pp5_stage0, ap_block_pp5_stage0_11001, ap_enable_reg_pp5_iter0, ap_enable_reg_pp5_iter5)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp5_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage1) and (ap_enable_reg_pp5_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp5_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_const_boolean_0 = ap_block_pp5_stage0_11001)))) then 
            conv1_buff_2_ce1 <= ap_const_logic_1;
        else 
            conv1_buff_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_buff_2_d0_assign_proc : process(reg_1322, ap_enable_reg_pp3_iter1, ap_CS_fsm_pp4_stage0, tmp_56_reg_3093, ap_CS_fsm_pp3_stage4, ap_enable_reg_pp4_iter1, ap_block_pp4_stage0, ap_block_pp3_stage4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage0))) then 
            conv1_buff_2_d0 <= tmp_56_reg_3093;
        elsif (((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage4) and (ap_const_boolean_0 = ap_block_pp3_stage4))) then 
            conv1_buff_2_d0 <= reg_1322;
        else 
            conv1_buff_2_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    conv1_buff_2_we0_assign_proc : process(ap_enable_reg_pp3_iter1, chl_out2_mid2_reg_2905_pp3_iter1_reg, ap_CS_fsm_pp4_stage0, ap_block_pp4_stage0_11001, chl_out3_mid2_reg_3027, ap_CS_fsm_pp3_stage4, ap_enable_reg_pp4_iter1, ap_block_pp3_stage4_11001)
    begin
        if ((((chl_out3_mid2_reg_3027 = ap_const_lv3_2) and (ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1)) or ((chl_out2_mid2_reg_2905_pp3_iter1_reg = ap_const_lv3_2) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage4) and (ap_const_boolean_0 = ap_block_pp3_stage4_11001)))) then 
            conv1_buff_2_we0 <= ap_const_logic_1;
        else 
            conv1_buff_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_buff_3_address0_assign_proc : process(ap_enable_reg_pp3_iter0, ap_CS_fsm_pp5_stage1, ap_enable_reg_pp3_iter1, ap_enable_reg_pp4_iter0, ap_enable_reg_pp5_iter3, ap_CS_fsm_pp3_stage5, conv1_buff_3_addr_reg_2961, ap_CS_fsm_pp4_stage0, ap_CS_fsm_pp4_stage1, conv1_buff_3_addr_1_reg_3063, ap_CS_fsm_pp5_stage0, ap_enable_reg_pp5_iter0, ap_CS_fsm_pp3_stage4, ap_enable_reg_pp4_iter1, ap_block_pp4_stage0, ap_block_pp5_stage0, ap_block_pp5_stage1, tmp_122_cast_fu_1916_p1, ap_block_pp3_stage5, tmp_127_cast_fu_2082_p1, ap_block_pp4_stage1, tmp_142_cast_fu_2457_p1, tmp_141_cast_fu_2537_p1, ap_block_pp3_stage4)
    begin
        if (((ap_enable_reg_pp5_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_const_boolean_0 = ap_block_pp5_stage0))) then 
            conv1_buff_3_address0 <= tmp_141_cast_fu_2537_p1(10 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp5_stage1) and (ap_enable_reg_pp5_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp5_stage1))) then 
            conv1_buff_3_address0 <= tmp_142_cast_fu_2457_p1(10 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage0))) then 
            conv1_buff_3_address0 <= conv1_buff_3_addr_1_reg_3063;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp4_stage1) and (ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage1))) then 
            conv1_buff_3_address0 <= tmp_127_cast_fu_2082_p1(10 - 1 downto 0);
        elsif (((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage4) and (ap_const_boolean_0 = ap_block_pp3_stage4))) then 
            conv1_buff_3_address0 <= conv1_buff_3_addr_reg_2961;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp3_stage5) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage5))) then 
            conv1_buff_3_address0 <= tmp_122_cast_fu_1916_p1(10 - 1 downto 0);
        else 
            conv1_buff_3_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    conv1_buff_3_address1_assign_proc : process(ap_CS_fsm_pp5_stage1, ap_CS_fsm_pp5_stage0, ap_enable_reg_pp5_iter0, ap_enable_reg_pp5_iter5, ap_block_pp5_stage0, ap_block_pp5_stage1, tmp_140_cast_fu_2423_p1, tmp_143_cast_fu_2552_p1)
    begin
        if (((ap_enable_reg_pp5_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_const_boolean_0 = ap_block_pp5_stage0))) then 
            conv1_buff_3_address1 <= tmp_143_cast_fu_2552_p1(10 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp5_stage1) and (ap_enable_reg_pp5_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp5_stage1))) then 
            conv1_buff_3_address1 <= tmp_140_cast_fu_2423_p1(10 - 1 downto 0);
        else 
            conv1_buff_3_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    conv1_buff_3_ce0_assign_proc : process(ap_enable_reg_pp3_iter0, ap_CS_fsm_pp5_stage1, ap_block_pp5_stage1_11001, ap_enable_reg_pp3_iter1, ap_enable_reg_pp4_iter0, ap_enable_reg_pp5_iter3, ap_CS_fsm_pp3_stage5, ap_block_pp3_stage5_11001, ap_CS_fsm_pp4_stage0, ap_block_pp4_stage0_11001, ap_CS_fsm_pp4_stage1, ap_block_pp4_stage1_11001, ap_CS_fsm_pp5_stage0, ap_block_pp5_stage0_11001, ap_enable_reg_pp5_iter0, ap_CS_fsm_pp3_stage4, ap_enable_reg_pp4_iter1, ap_block_pp3_stage4_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1)) or ((ap_enable_reg_pp5_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_const_boolean_0 = ap_block_pp5_stage0_11001)) or ((ap_const_boolean_0 = ap_block_pp4_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage1) and (ap_enable_reg_pp4_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage4) and (ap_const_boolean_0 = ap_block_pp3_stage4_11001)) or ((ap_const_boolean_0 = ap_block_pp5_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage1) and (ap_enable_reg_pp5_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp3_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage5) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1)))) then 
            conv1_buff_3_ce0 <= ap_const_logic_1;
        else 
            conv1_buff_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_buff_3_ce1_assign_proc : process(ap_CS_fsm_pp5_stage1, ap_block_pp5_stage1_11001, ap_CS_fsm_pp5_stage0, ap_block_pp5_stage0_11001, ap_enable_reg_pp5_iter0, ap_enable_reg_pp5_iter5)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp5_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage1) and (ap_enable_reg_pp5_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp5_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_const_boolean_0 = ap_block_pp5_stage0_11001)))) then 
            conv1_buff_3_ce1 <= ap_const_logic_1;
        else 
            conv1_buff_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_buff_3_d0_assign_proc : process(reg_1322, ap_enable_reg_pp3_iter1, ap_CS_fsm_pp4_stage0, tmp_56_reg_3093, ap_CS_fsm_pp3_stage4, ap_enable_reg_pp4_iter1, ap_block_pp4_stage0, ap_block_pp3_stage4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage0))) then 
            conv1_buff_3_d0 <= tmp_56_reg_3093;
        elsif (((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage4) and (ap_const_boolean_0 = ap_block_pp3_stage4))) then 
            conv1_buff_3_d0 <= reg_1322;
        else 
            conv1_buff_3_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    conv1_buff_3_we0_assign_proc : process(ap_enable_reg_pp3_iter1, chl_out2_mid2_reg_2905_pp3_iter1_reg, ap_CS_fsm_pp4_stage0, ap_block_pp4_stage0_11001, chl_out3_mid2_reg_3027, ap_CS_fsm_pp3_stage4, ap_enable_reg_pp4_iter1, ap_block_pp3_stage4_11001)
    begin
        if ((((chl_out3_mid2_reg_3027 = ap_const_lv3_3) and (ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1)) or ((chl_out2_mid2_reg_2905_pp3_iter1_reg = ap_const_lv3_3) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage4) and (ap_const_boolean_0 = ap_block_pp3_stage4_11001)))) then 
            conv1_buff_3_we0 <= ap_const_logic_1;
        else 
            conv1_buff_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_buff_4_address0_assign_proc : process(ap_enable_reg_pp3_iter0, ap_CS_fsm_pp5_stage1, ap_enable_reg_pp3_iter1, ap_enable_reg_pp4_iter0, ap_enable_reg_pp5_iter3, ap_CS_fsm_pp3_stage5, conv1_buff_4_addr_reg_2966, ap_CS_fsm_pp4_stage0, ap_CS_fsm_pp4_stage1, conv1_buff_4_addr_1_reg_3068, ap_CS_fsm_pp5_stage0, ap_enable_reg_pp5_iter0, ap_CS_fsm_pp3_stage4, ap_enable_reg_pp4_iter1, ap_block_pp4_stage0, ap_block_pp5_stage0, ap_block_pp5_stage1, tmp_122_cast_fu_1916_p1, ap_block_pp3_stage5, tmp_127_cast_fu_2082_p1, ap_block_pp4_stage1, tmp_142_cast_fu_2457_p1, tmp_141_cast_fu_2537_p1, ap_block_pp3_stage4)
    begin
        if (((ap_enable_reg_pp5_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_const_boolean_0 = ap_block_pp5_stage0))) then 
            conv1_buff_4_address0 <= tmp_141_cast_fu_2537_p1(10 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp5_stage1) and (ap_enable_reg_pp5_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp5_stage1))) then 
            conv1_buff_4_address0 <= tmp_142_cast_fu_2457_p1(10 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage0))) then 
            conv1_buff_4_address0 <= conv1_buff_4_addr_1_reg_3068;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp4_stage1) and (ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage1))) then 
            conv1_buff_4_address0 <= tmp_127_cast_fu_2082_p1(10 - 1 downto 0);
        elsif (((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage4) and (ap_const_boolean_0 = ap_block_pp3_stage4))) then 
            conv1_buff_4_address0 <= conv1_buff_4_addr_reg_2966;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp3_stage5) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage5))) then 
            conv1_buff_4_address0 <= tmp_122_cast_fu_1916_p1(10 - 1 downto 0);
        else 
            conv1_buff_4_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    conv1_buff_4_address1_assign_proc : process(ap_CS_fsm_pp5_stage1, ap_CS_fsm_pp5_stage0, ap_enable_reg_pp5_iter0, ap_enable_reg_pp5_iter5, ap_block_pp5_stage0, ap_block_pp5_stage1, tmp_140_cast_fu_2423_p1, tmp_143_cast_fu_2552_p1)
    begin
        if (((ap_enable_reg_pp5_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_const_boolean_0 = ap_block_pp5_stage0))) then 
            conv1_buff_4_address1 <= tmp_143_cast_fu_2552_p1(10 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp5_stage1) and (ap_enable_reg_pp5_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp5_stage1))) then 
            conv1_buff_4_address1 <= tmp_140_cast_fu_2423_p1(10 - 1 downto 0);
        else 
            conv1_buff_4_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    conv1_buff_4_ce0_assign_proc : process(ap_enable_reg_pp3_iter0, ap_CS_fsm_pp5_stage1, ap_block_pp5_stage1_11001, ap_enable_reg_pp3_iter1, ap_enable_reg_pp4_iter0, ap_enable_reg_pp5_iter3, ap_CS_fsm_pp3_stage5, ap_block_pp3_stage5_11001, ap_CS_fsm_pp4_stage0, ap_block_pp4_stage0_11001, ap_CS_fsm_pp4_stage1, ap_block_pp4_stage1_11001, ap_CS_fsm_pp5_stage0, ap_block_pp5_stage0_11001, ap_enable_reg_pp5_iter0, ap_CS_fsm_pp3_stage4, ap_enable_reg_pp4_iter1, ap_block_pp3_stage4_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1)) or ((ap_enable_reg_pp5_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_const_boolean_0 = ap_block_pp5_stage0_11001)) or ((ap_const_boolean_0 = ap_block_pp4_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage1) and (ap_enable_reg_pp4_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage4) and (ap_const_boolean_0 = ap_block_pp3_stage4_11001)) or ((ap_const_boolean_0 = ap_block_pp5_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage1) and (ap_enable_reg_pp5_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp3_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage5) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1)))) then 
            conv1_buff_4_ce0 <= ap_const_logic_1;
        else 
            conv1_buff_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_buff_4_ce1_assign_proc : process(ap_CS_fsm_pp5_stage1, ap_block_pp5_stage1_11001, ap_CS_fsm_pp5_stage0, ap_block_pp5_stage0_11001, ap_enable_reg_pp5_iter0, ap_enable_reg_pp5_iter5)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp5_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage1) and (ap_enable_reg_pp5_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp5_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_const_boolean_0 = ap_block_pp5_stage0_11001)))) then 
            conv1_buff_4_ce1 <= ap_const_logic_1;
        else 
            conv1_buff_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_buff_4_d0_assign_proc : process(reg_1322, ap_enable_reg_pp3_iter1, ap_CS_fsm_pp4_stage0, tmp_56_reg_3093, ap_CS_fsm_pp3_stage4, ap_enable_reg_pp4_iter1, ap_block_pp4_stage0, ap_block_pp3_stage4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage0))) then 
            conv1_buff_4_d0 <= tmp_56_reg_3093;
        elsif (((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage4) and (ap_const_boolean_0 = ap_block_pp3_stage4))) then 
            conv1_buff_4_d0 <= reg_1322;
        else 
            conv1_buff_4_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    conv1_buff_4_we0_assign_proc : process(ap_enable_reg_pp3_iter1, chl_out2_mid2_reg_2905_pp3_iter1_reg, ap_CS_fsm_pp4_stage0, ap_block_pp4_stage0_11001, chl_out3_mid2_reg_3027, ap_CS_fsm_pp3_stage4, ap_enable_reg_pp4_iter1, ap_block_pp3_stage4_11001)
    begin
        if ((((chl_out3_mid2_reg_3027 = ap_const_lv3_4) and (ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1)) or ((chl_out2_mid2_reg_2905_pp3_iter1_reg = ap_const_lv3_4) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage4) and (ap_const_boolean_0 = ap_block_pp3_stage4_11001)))) then 
            conv1_buff_4_we0 <= ap_const_logic_1;
        else 
            conv1_buff_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_buff_5_address0_assign_proc : process(ap_enable_reg_pp3_iter0, ap_CS_fsm_pp5_stage1, ap_enable_reg_pp3_iter1, ap_enable_reg_pp4_iter0, ap_enable_reg_pp5_iter3, ap_CS_fsm_pp3_stage5, conv1_buff_5_addr_reg_2971, ap_CS_fsm_pp4_stage0, ap_CS_fsm_pp4_stage1, conv1_buff_5_addr_1_reg_3073, ap_CS_fsm_pp5_stage0, ap_enable_reg_pp5_iter0, ap_CS_fsm_pp3_stage4, ap_enable_reg_pp4_iter1, ap_block_pp4_stage0, ap_block_pp5_stage0, ap_block_pp5_stage1, tmp_122_cast_fu_1916_p1, ap_block_pp3_stage5, tmp_127_cast_fu_2082_p1, ap_block_pp4_stage1, tmp_142_cast_fu_2457_p1, tmp_141_cast_fu_2537_p1, ap_block_pp3_stage4)
    begin
        if (((ap_enable_reg_pp5_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_const_boolean_0 = ap_block_pp5_stage0))) then 
            conv1_buff_5_address0 <= tmp_141_cast_fu_2537_p1(10 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp5_stage1) and (ap_enable_reg_pp5_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp5_stage1))) then 
            conv1_buff_5_address0 <= tmp_142_cast_fu_2457_p1(10 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage0))) then 
            conv1_buff_5_address0 <= conv1_buff_5_addr_1_reg_3073;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp4_stage1) and (ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage1))) then 
            conv1_buff_5_address0 <= tmp_127_cast_fu_2082_p1(10 - 1 downto 0);
        elsif (((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage4) and (ap_const_boolean_0 = ap_block_pp3_stage4))) then 
            conv1_buff_5_address0 <= conv1_buff_5_addr_reg_2971;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp3_stage5) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage5))) then 
            conv1_buff_5_address0 <= tmp_122_cast_fu_1916_p1(10 - 1 downto 0);
        else 
            conv1_buff_5_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    conv1_buff_5_address1_assign_proc : process(ap_CS_fsm_pp5_stage1, ap_CS_fsm_pp5_stage0, ap_enable_reg_pp5_iter0, ap_enable_reg_pp5_iter5, ap_block_pp5_stage0, ap_block_pp5_stage1, tmp_140_cast_fu_2423_p1, tmp_143_cast_fu_2552_p1)
    begin
        if (((ap_enable_reg_pp5_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_const_boolean_0 = ap_block_pp5_stage0))) then 
            conv1_buff_5_address1 <= tmp_143_cast_fu_2552_p1(10 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp5_stage1) and (ap_enable_reg_pp5_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp5_stage1))) then 
            conv1_buff_5_address1 <= tmp_140_cast_fu_2423_p1(10 - 1 downto 0);
        else 
            conv1_buff_5_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    conv1_buff_5_ce0_assign_proc : process(ap_enable_reg_pp3_iter0, ap_CS_fsm_pp5_stage1, ap_block_pp5_stage1_11001, ap_enable_reg_pp3_iter1, ap_enable_reg_pp4_iter0, ap_enable_reg_pp5_iter3, ap_CS_fsm_pp3_stage5, ap_block_pp3_stage5_11001, ap_CS_fsm_pp4_stage0, ap_block_pp4_stage0_11001, ap_CS_fsm_pp4_stage1, ap_block_pp4_stage1_11001, ap_CS_fsm_pp5_stage0, ap_block_pp5_stage0_11001, ap_enable_reg_pp5_iter0, ap_CS_fsm_pp3_stage4, ap_enable_reg_pp4_iter1, ap_block_pp3_stage4_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1)) or ((ap_enable_reg_pp5_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_const_boolean_0 = ap_block_pp5_stage0_11001)) or ((ap_const_boolean_0 = ap_block_pp4_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage1) and (ap_enable_reg_pp4_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage4) and (ap_const_boolean_0 = ap_block_pp3_stage4_11001)) or ((ap_const_boolean_0 = ap_block_pp5_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage1) and (ap_enable_reg_pp5_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp3_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage5) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1)))) then 
            conv1_buff_5_ce0 <= ap_const_logic_1;
        else 
            conv1_buff_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_buff_5_ce1_assign_proc : process(ap_CS_fsm_pp5_stage1, ap_block_pp5_stage1_11001, ap_CS_fsm_pp5_stage0, ap_block_pp5_stage0_11001, ap_enable_reg_pp5_iter0, ap_enable_reg_pp5_iter5)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp5_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage1) and (ap_enable_reg_pp5_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp5_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_const_boolean_0 = ap_block_pp5_stage0_11001)))) then 
            conv1_buff_5_ce1 <= ap_const_logic_1;
        else 
            conv1_buff_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_buff_5_d0_assign_proc : process(reg_1322, ap_enable_reg_pp3_iter1, ap_CS_fsm_pp4_stage0, tmp_56_reg_3093, ap_CS_fsm_pp3_stage4, ap_enable_reg_pp4_iter1, ap_block_pp4_stage0, ap_block_pp3_stage4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage0))) then 
            conv1_buff_5_d0 <= tmp_56_reg_3093;
        elsif (((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage4) and (ap_const_boolean_0 = ap_block_pp3_stage4))) then 
            conv1_buff_5_d0 <= reg_1322;
        else 
            conv1_buff_5_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    conv1_buff_5_we0_assign_proc : process(ap_enable_reg_pp3_iter1, chl_out2_mid2_reg_2905_pp3_iter1_reg, ap_CS_fsm_pp4_stage0, ap_block_pp4_stage0_11001, chl_out3_mid2_reg_3027, ap_CS_fsm_pp3_stage4, ap_enable_reg_pp4_iter1, ap_block_pp3_stage4_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1) and ((chl_out3_mid2_reg_3027 = ap_const_lv3_5) or ((chl_out3_mid2_reg_3027 = ap_const_lv3_6) or (chl_out3_mid2_reg_3027 = ap_const_lv3_7)))) or ((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage4) and (ap_const_boolean_0 = ap_block_pp3_stage4_11001) and ((chl_out2_mid2_reg_2905_pp3_iter1_reg = ap_const_lv3_5) or ((chl_out2_mid2_reg_2905_pp3_iter1_reg = ap_const_lv3_6) or (chl_out2_mid2_reg_2905_pp3_iter1_reg = ap_const_lv3_7)))))) then 
            conv1_buff_5_we0 <= ap_const_logic_1;
        else 
            conv1_buff_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_out1_0_address0_assign_proc : process(ap_block_pp6_stage0, ap_CS_fsm_pp5_stage0, ap_CS_fsm_pp6_stage0, ap_enable_reg_pp6_iter0, ap_enable_reg_pp5_iter11, ap_block_pp5_stage0, tmp_144_cast_fu_2598_p1, tmp_130_fu_2650_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp6_stage0) and (ap_enable_reg_pp6_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0))) then 
            conv_out1_0_address0 <= tmp_130_fu_2650_p1(8 - 1 downto 0);
        elsif (((ap_enable_reg_pp5_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_const_boolean_0 = ap_block_pp5_stage0))) then 
            conv_out1_0_address0 <= tmp_144_cast_fu_2598_p1(8 - 1 downto 0);
        else 
            conv_out1_0_address0 <= "XXXXXXXX";
        end if; 
    end process;


    conv_out1_0_ce0_assign_proc : process(ap_CS_fsm_pp5_stage0, ap_block_pp5_stage0_11001, ap_CS_fsm_pp6_stage0, ap_block_pp6_stage0_11001, ap_enable_reg_pp6_iter0, ap_enable_reg_pp5_iter11)
    begin
        if ((((ap_enable_reg_pp6_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0) and (ap_const_boolean_0 = ap_block_pp6_stage0_11001)) or ((ap_enable_reg_pp5_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_const_boolean_0 = ap_block_pp5_stage0_11001)))) then 
            conv_out1_0_ce0 <= ap_const_logic_1;
        else 
            conv_out1_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv_out1_0_d0 <= reg_1311;

    conv_out1_0_we0_assign_proc : process(ap_CS_fsm_pp5_stage0, ap_block_pp5_stage0_11001, chl_out6_mid2_reg_3161_pp5_iter10_reg, ap_enable_reg_pp5_iter11)
    begin
        if (((ap_enable_reg_pp5_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (chl_out6_mid2_reg_3161_pp5_iter10_reg = ap_const_lv3_0) and (ap_const_boolean_0 = ap_block_pp5_stage0_11001))) then 
            conv_out1_0_we0 <= ap_const_logic_1;
        else 
            conv_out1_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_out1_1_address0_assign_proc : process(ap_block_pp6_stage0, ap_CS_fsm_pp5_stage0, ap_CS_fsm_pp6_stage0, ap_enable_reg_pp6_iter0, ap_enable_reg_pp5_iter11, ap_block_pp5_stage0, tmp_144_cast_fu_2598_p1, tmp_130_fu_2650_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp6_stage0) and (ap_enable_reg_pp6_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0))) then 
            conv_out1_1_address0 <= tmp_130_fu_2650_p1(8 - 1 downto 0);
        elsif (((ap_enable_reg_pp5_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_const_boolean_0 = ap_block_pp5_stage0))) then 
            conv_out1_1_address0 <= tmp_144_cast_fu_2598_p1(8 - 1 downto 0);
        else 
            conv_out1_1_address0 <= "XXXXXXXX";
        end if; 
    end process;


    conv_out1_1_ce0_assign_proc : process(ap_CS_fsm_pp5_stage0, ap_block_pp5_stage0_11001, ap_CS_fsm_pp6_stage0, ap_block_pp6_stage0_11001, ap_enable_reg_pp6_iter0, ap_enable_reg_pp5_iter11)
    begin
        if ((((ap_enable_reg_pp6_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0) and (ap_const_boolean_0 = ap_block_pp6_stage0_11001)) or ((ap_enable_reg_pp5_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_const_boolean_0 = ap_block_pp5_stage0_11001)))) then 
            conv_out1_1_ce0 <= ap_const_logic_1;
        else 
            conv_out1_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv_out1_1_d0 <= reg_1311;

    conv_out1_1_we0_assign_proc : process(ap_CS_fsm_pp5_stage0, ap_block_pp5_stage0_11001, chl_out6_mid2_reg_3161_pp5_iter10_reg, ap_enable_reg_pp5_iter11)
    begin
        if (((ap_enable_reg_pp5_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (chl_out6_mid2_reg_3161_pp5_iter10_reg = ap_const_lv3_1) and (ap_const_boolean_0 = ap_block_pp5_stage0_11001))) then 
            conv_out1_1_we0 <= ap_const_logic_1;
        else 
            conv_out1_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_out1_2_address0_assign_proc : process(ap_block_pp6_stage0, ap_CS_fsm_pp5_stage0, ap_CS_fsm_pp6_stage0, ap_enable_reg_pp6_iter0, ap_enable_reg_pp5_iter11, ap_block_pp5_stage0, tmp_144_cast_fu_2598_p1, tmp_130_fu_2650_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp6_stage0) and (ap_enable_reg_pp6_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0))) then 
            conv_out1_2_address0 <= tmp_130_fu_2650_p1(8 - 1 downto 0);
        elsif (((ap_enable_reg_pp5_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_const_boolean_0 = ap_block_pp5_stage0))) then 
            conv_out1_2_address0 <= tmp_144_cast_fu_2598_p1(8 - 1 downto 0);
        else 
            conv_out1_2_address0 <= "XXXXXXXX";
        end if; 
    end process;


    conv_out1_2_ce0_assign_proc : process(ap_CS_fsm_pp5_stage0, ap_block_pp5_stage0_11001, ap_CS_fsm_pp6_stage0, ap_block_pp6_stage0_11001, ap_enable_reg_pp6_iter0, ap_enable_reg_pp5_iter11)
    begin
        if ((((ap_enable_reg_pp6_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0) and (ap_const_boolean_0 = ap_block_pp6_stage0_11001)) or ((ap_enable_reg_pp5_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_const_boolean_0 = ap_block_pp5_stage0_11001)))) then 
            conv_out1_2_ce0 <= ap_const_logic_1;
        else 
            conv_out1_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv_out1_2_d0 <= reg_1311;

    conv_out1_2_we0_assign_proc : process(ap_CS_fsm_pp5_stage0, ap_block_pp5_stage0_11001, chl_out6_mid2_reg_3161_pp5_iter10_reg, ap_enable_reg_pp5_iter11)
    begin
        if (((ap_enable_reg_pp5_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (chl_out6_mid2_reg_3161_pp5_iter10_reg = ap_const_lv3_2) and (ap_const_boolean_0 = ap_block_pp5_stage0_11001))) then 
            conv_out1_2_we0 <= ap_const_logic_1;
        else 
            conv_out1_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_out1_3_address0_assign_proc : process(ap_block_pp6_stage0, ap_CS_fsm_pp5_stage0, ap_CS_fsm_pp6_stage0, ap_enable_reg_pp6_iter0, ap_enable_reg_pp5_iter11, ap_block_pp5_stage0, tmp_144_cast_fu_2598_p1, tmp_130_fu_2650_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp6_stage0) and (ap_enable_reg_pp6_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0))) then 
            conv_out1_3_address0 <= tmp_130_fu_2650_p1(8 - 1 downto 0);
        elsif (((ap_enable_reg_pp5_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_const_boolean_0 = ap_block_pp5_stage0))) then 
            conv_out1_3_address0 <= tmp_144_cast_fu_2598_p1(8 - 1 downto 0);
        else 
            conv_out1_3_address0 <= "XXXXXXXX";
        end if; 
    end process;


    conv_out1_3_ce0_assign_proc : process(ap_CS_fsm_pp5_stage0, ap_block_pp5_stage0_11001, ap_CS_fsm_pp6_stage0, ap_block_pp6_stage0_11001, ap_enable_reg_pp6_iter0, ap_enable_reg_pp5_iter11)
    begin
        if ((((ap_enable_reg_pp6_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0) and (ap_const_boolean_0 = ap_block_pp6_stage0_11001)) or ((ap_enable_reg_pp5_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_const_boolean_0 = ap_block_pp5_stage0_11001)))) then 
            conv_out1_3_ce0 <= ap_const_logic_1;
        else 
            conv_out1_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv_out1_3_d0 <= reg_1311;

    conv_out1_3_we0_assign_proc : process(ap_CS_fsm_pp5_stage0, ap_block_pp5_stage0_11001, chl_out6_mid2_reg_3161_pp5_iter10_reg, ap_enable_reg_pp5_iter11)
    begin
        if (((ap_enable_reg_pp5_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (chl_out6_mid2_reg_3161_pp5_iter10_reg = ap_const_lv3_3) and (ap_const_boolean_0 = ap_block_pp5_stage0_11001))) then 
            conv_out1_3_we0 <= ap_const_logic_1;
        else 
            conv_out1_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_out1_4_address0_assign_proc : process(ap_block_pp6_stage0, ap_CS_fsm_pp5_stage0, ap_CS_fsm_pp6_stage0, ap_enable_reg_pp6_iter0, ap_enable_reg_pp5_iter11, ap_block_pp5_stage0, tmp_144_cast_fu_2598_p1, tmp_130_fu_2650_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp6_stage0) and (ap_enable_reg_pp6_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0))) then 
            conv_out1_4_address0 <= tmp_130_fu_2650_p1(8 - 1 downto 0);
        elsif (((ap_enable_reg_pp5_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_const_boolean_0 = ap_block_pp5_stage0))) then 
            conv_out1_4_address0 <= tmp_144_cast_fu_2598_p1(8 - 1 downto 0);
        else 
            conv_out1_4_address0 <= "XXXXXXXX";
        end if; 
    end process;


    conv_out1_4_ce0_assign_proc : process(ap_CS_fsm_pp5_stage0, ap_block_pp5_stage0_11001, ap_CS_fsm_pp6_stage0, ap_block_pp6_stage0_11001, ap_enable_reg_pp6_iter0, ap_enable_reg_pp5_iter11)
    begin
        if ((((ap_enable_reg_pp6_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0) and (ap_const_boolean_0 = ap_block_pp6_stage0_11001)) or ((ap_enable_reg_pp5_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_const_boolean_0 = ap_block_pp5_stage0_11001)))) then 
            conv_out1_4_ce0 <= ap_const_logic_1;
        else 
            conv_out1_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv_out1_4_d0 <= reg_1311;

    conv_out1_4_we0_assign_proc : process(ap_CS_fsm_pp5_stage0, ap_block_pp5_stage0_11001, chl_out6_mid2_reg_3161_pp5_iter10_reg, ap_enable_reg_pp5_iter11)
    begin
        if (((ap_enable_reg_pp5_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (chl_out6_mid2_reg_3161_pp5_iter10_reg = ap_const_lv3_4) and (ap_const_boolean_0 = ap_block_pp5_stage0_11001))) then 
            conv_out1_4_we0 <= ap_const_logic_1;
        else 
            conv_out1_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_out1_5_address0_assign_proc : process(ap_block_pp6_stage0, ap_CS_fsm_pp5_stage0, ap_CS_fsm_pp6_stage0, ap_enable_reg_pp6_iter0, ap_enable_reg_pp5_iter11, ap_block_pp5_stage0, tmp_144_cast_fu_2598_p1, tmp_130_fu_2650_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp6_stage0) and (ap_enable_reg_pp6_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0))) then 
            conv_out1_5_address0 <= tmp_130_fu_2650_p1(8 - 1 downto 0);
        elsif (((ap_enable_reg_pp5_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_const_boolean_0 = ap_block_pp5_stage0))) then 
            conv_out1_5_address0 <= tmp_144_cast_fu_2598_p1(8 - 1 downto 0);
        else 
            conv_out1_5_address0 <= "XXXXXXXX";
        end if; 
    end process;


    conv_out1_5_ce0_assign_proc : process(ap_CS_fsm_pp5_stage0, ap_block_pp5_stage0_11001, ap_CS_fsm_pp6_stage0, ap_block_pp6_stage0_11001, ap_enable_reg_pp6_iter0, ap_enable_reg_pp5_iter11)
    begin
        if ((((ap_enable_reg_pp6_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0) and (ap_const_boolean_0 = ap_block_pp6_stage0_11001)) or ((ap_enable_reg_pp5_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_const_boolean_0 = ap_block_pp5_stage0_11001)))) then 
            conv_out1_5_ce0 <= ap_const_logic_1;
        else 
            conv_out1_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv_out1_5_d0 <= reg_1311;

    conv_out1_5_we0_assign_proc : process(ap_CS_fsm_pp5_stage0, ap_block_pp5_stage0_11001, chl_out6_mid2_reg_3161_pp5_iter10_reg, ap_enable_reg_pp5_iter11)
    begin
        if (((ap_enable_reg_pp5_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_const_boolean_0 = ap_block_pp5_stage0_11001) and ((chl_out6_mid2_reg_3161_pp5_iter10_reg = ap_const_lv3_5) or ((chl_out6_mid2_reg_3161_pp5_iter10_reg = ap_const_lv3_6) or (chl_out6_mid2_reg_3161_pp5_iter10_reg = ap_const_lv3_7))))) then 
            conv_out1_5_we0 <= ap_const_logic_1;
        else 
            conv_out1_5_we0 <= ap_const_logic_0;
        end if; 
    end process;

    exitcond10_fu_2608_p2 <= "1" when (indvar4_reg_1226 = ap_const_lv11_498) else "0";
    exitcond1_mid_fu_2007_p2 <= (not_exitcond_flatten_2_fu_1995_p2 and exitcond5_fu_2001_p2);
    exitcond4_mid4_fu_1718_p2 <= (not_exitcond_flatten_4_reg_2813 and exitcond4_mid_fu_1674_p2);
    exitcond4_mid5_fu_1775_p2 <= (not_exitcond_flatten_1_fu_1770_p2 and exitcond4_mid4_fu_1718_p2);
    exitcond4_mid_fu_1674_p2 <= (not_exitcond_flatten_reg_2783 and exitcond_fu_1668_p2);
    exitcond5_fu_2001_p2 <= "1" when (ap_phi_mux_chl_out3_phi_fu_1163_p4 = ap_const_lv3_6) else "0";
    exitcond6_fu_2376_p2 <= "1" when (ap_phi_mux_chl_out6_phi_fu_1218_p4 = ap_const_lv3_6) else "0";
    exitcond7_fu_1382_p2 <= "1" when (ap_phi_mux_indvar8_phi_fu_971_p4 = ap_const_lv11_400) else "0";
    exitcond8_fu_1399_p2 <= "1" when (indvar2_reg_979 = ap_const_lv8_96) else "0";
    exitcond9_fu_1334_p2 <= "1" when (ap_phi_mux_indvar_phi_fu_959_p4 = ap_const_lv3_6) else "0";
    exitcond_flatten10_fu_1542_p2 <= "1" when (ap_phi_mux_indvar_flatten2_phi_fu_1062_p4 = ap_const_lv13_1260) else "0";
    exitcond_flatten11_fu_1955_p2 <= "1" when (ap_phi_mux_indvar_flatten3_phi_fu_1119_p4 = ap_const_lv13_1260) else "0";
    exitcond_flatten12_fu_1973_p2 <= "1" when (ap_phi_mux_indvar_flatten4_phi_fu_1141_p4 = ap_const_lv8_A8) else "0";
    exitcond_flatten13_fu_2275_p2 <= "1" when (ap_phi_mux_indvar_flatten5_phi_fu_1174_p4 = ap_const_lv11_498) else "0";
    exitcond_flatten14_fu_2293_p2 <= "1" when (ap_phi_mux_indvar_flatten6_phi_fu_1196_p4 = ap_const_lv7_54) else "0";
    exitcond_flatten32_m_fu_1548_p2 <= (not_exitcond_flatten_fu_1524_p2 and exitcond_flatten10_fu_1542_p2);
    exitcond_flatten32_n_fu_1574_p2 <= (exitcond_flatten10_fu_1542_p2 xor ap_const_lv1_1);
    exitcond_flatten8_fu_1510_p2 <= "1" when (ap_phi_mux_indvar_flatten1_phi_fu_1039_p4 = ap_const_lv16_5BE0) else "0";
    exitcond_flatten9_fu_1530_p2 <= "1" when (ap_phi_mux_indvar_flatten_phi_fu_1084_p4 = ap_const_lv8_A8) else "0";
    exitcond_flatten_fu_1492_p2 <= "1" when (ap_phi_mux_indvar_flatten9_phi_fu_1016_p4 = ap_const_lv17_1CB60) else "0";
    exitcond_flatten_mid_7_fu_1586_p2 <= (not_exitcond_flatten_4_fu_1580_p2 and exitcond_flatten_mid_fu_1536_p2);
    exitcond_flatten_mid_fu_1536_p2 <= (not_exitcond_flatten_fu_1524_p2 and exitcond_flatten9_fu_1530_p2);
    exitcond_fu_1668_p2 <= "1" when (ap_phi_mux_chl_out2_phi_fu_1107_p4 = ap_const_lv3_6) else "0";
    exitcond_mid_fu_2382_p2 <= (not_exitcond_flatten_3_fu_2371_p2 and exitcond6_fu_2376_p2);

    grp_fu_1259_p0_assign_proc : process(ap_enable_reg_pp3_iter0, ap_CS_fsm_pp5_stage1, reg_1322, ap_enable_reg_pp4_iter0, tmp_69_reg_2981, ap_CS_fsm_pp3_stage7, tmp_71_reg_3078, ap_CS_fsm_pp5_stage0, tmp_81_reg_3257, ap_enable_reg_pp5_iter1, ap_enable_reg_pp5_iter4, ap_block_pp5_stage0, ap_block_pp5_stage1, ap_block_pp3_stage7, ap_CS_fsm_pp4_stage3, ap_block_pp4_stage3)
    begin
        if (((ap_enable_reg_pp5_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_const_boolean_0 = ap_block_pp5_stage0))) then 
            grp_fu_1259_p0 <= reg_1322;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp5_stage1) and (ap_enable_reg_pp5_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp5_stage1))) then 
            grp_fu_1259_p0 <= tmp_81_reg_3257;
        elsif (((ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage3) and (ap_const_boolean_0 = ap_block_pp4_stage3))) then 
            grp_fu_1259_p0 <= tmp_71_reg_3078;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp3_stage7) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage7))) then 
            grp_fu_1259_p0 <= tmp_69_reg_2981;
        else 
            grp_fu_1259_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1259_p1_assign_proc : process(reg_1311, ap_enable_reg_pp3_iter0, ap_CS_fsm_pp5_stage1, ap_enable_reg_pp4_iter0, ap_CS_fsm_pp3_stage7, UnifiedRetVal_i_reg_3083, ap_CS_fsm_pp5_stage0, ap_enable_reg_pp5_iter1, tmp_82_reg_3262, tmp_83_reg_3302, ap_enable_reg_pp5_iter4, ap_block_pp5_stage0, ap_block_pp5_stage1, ap_block_pp3_stage7, ap_CS_fsm_pp4_stage3, ap_block_pp4_stage3)
    begin
        if (((ap_enable_reg_pp5_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_const_boolean_0 = ap_block_pp5_stage0))) then 
            grp_fu_1259_p1 <= tmp_83_reg_3302;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp5_stage1) and (ap_enable_reg_pp5_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp5_stage1))) then 
            grp_fu_1259_p1 <= tmp_82_reg_3262;
        elsif (((ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage3) and (ap_const_boolean_0 = ap_block_pp4_stage3))) then 
            grp_fu_1259_p1 <= UnifiedRetVal_i_reg_3083;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp3_stage7) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage7))) then 
            grp_fu_1259_p1 <= reg_1311;
        else 
            grp_fu_1259_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1267_p0_assign_proc : process(ap_enable_reg_pp3_iter0, ap_CS_fsm_pp3_stage3, pic_in_load_reg_2931, ap_CS_fsm_pp5_stage0, tmp_59_reg_3347, ap_enable_reg_pp5_iter9, ap_block_pp5_stage0, ap_block_pp3_stage3)
    begin
        if (((ap_enable_reg_pp5_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_const_boolean_0 = ap_block_pp5_stage0))) then 
            grp_fu_1267_p0 <= tmp_59_reg_3347;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp3_stage3) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage3))) then 
            grp_fu_1267_p0 <= pic_in_load_reg_2931;
        else 
            grp_fu_1267_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1267_p1_assign_proc : process(ap_enable_reg_pp3_iter0, ap_CS_fsm_pp3_stage3, tmp_68_reg_2936, ap_CS_fsm_pp5_stage0, ap_enable_reg_pp5_iter9, ap_block_pp5_stage0, ap_block_pp3_stage3)
    begin
        if (((ap_enable_reg_pp5_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_const_boolean_0 = ap_block_pp5_stage0))) then 
            grp_fu_1267_p1 <= ap_const_lv32_3E800000;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp3_stage3) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage3))) then 
            grp_fu_1267_p1 <= tmp_68_reg_2936;
        else 
            grp_fu_1267_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1277_p7_assign_proc : process(ap_CS_fsm_pp5_stage1, ap_CS_fsm_pp5_stage0, chl_out6_mid2_reg_3161, chl_out6_mid2_reg_3161_pp5_iter4_reg, ap_enable_reg_pp5_iter1, ap_enable_reg_pp5_iter5, ap_block_pp5_stage0, ap_block_pp5_stage1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp5_stage1) and (ap_enable_reg_pp5_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp5_stage1))) then 
            grp_fu_1277_p7 <= chl_out6_mid2_reg_3161_pp5_iter4_reg;
        elsif (((ap_enable_reg_pp5_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_const_boolean_0 = ap_block_pp5_stage0))) then 
            grp_fu_1277_p7 <= chl_out6_mid2_reg_3161;
        else 
            grp_fu_1277_p7 <= "XXX";
        end if; 
    end process;


    grp_fu_1294_p7_assign_proc : process(ap_CS_fsm_pp5_stage1, ap_enable_reg_pp5_iter3, ap_CS_fsm_pp5_stage0, chl_out6_mid2_reg_3161, chl_out6_mid2_reg_3161_pp5_iter2_reg, ap_enable_reg_pp5_iter1, ap_block_pp5_stage0, ap_block_pp5_stage1)
    begin
        if (((ap_enable_reg_pp5_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage1) and (ap_const_boolean_0 = ap_block_pp5_stage1))) then 
            grp_fu_1294_p7 <= chl_out6_mid2_reg_3161_pp5_iter2_reg;
        elsif (((ap_enable_reg_pp5_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_const_boolean_0 = ap_block_pp5_stage0))) then 
            grp_fu_1294_p7 <= chl_out6_mid2_reg_3161;
        else 
            grp_fu_1294_p7 <= "XXX";
        end if; 
    end process;

    idx_urem3_fu_2632_p3 <= 
        next_urem3_fu_2620_p2 when (tmp_128_fu_2626_p2(0) = '1') else 
        ap_const_lv11_0;
    idx_urem_fu_1443_p3 <= 
        next_urem_fu_1431_p2 when (tmp_106_fu_1437_p2(0) = '1') else 
        ap_const_lv8_0;
    indvar1_fu_1394_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(indvar8_reg_967_pp1_iter1_reg),64));
    indvar_flatten131_op_fu_2033_p2 <= std_logic_vector(unsigned(ap_phi_mux_indvar_flatten4_phi_fu_1141_p4) + unsigned(ap_const_lv8_1));
    indvar_flatten182_op_fu_2325_p2 <= std_logic_vector(unsigned(ap_phi_mux_indvar_flatten6_phi_fu_1196_p4) + unsigned(ap_const_lv7_1));
    indvar_flatten30_op_fu_1618_p2 <= std_logic_vector(unsigned(ap_phi_mux_indvar_flatten2_phi_fu_1062_p4) + unsigned(ap_const_lv13_1));
    indvar_flatten68_op_fu_1850_p2 <= std_logic_vector(unsigned(indvar_flatten1_reg_1035) + unsigned(ap_const_lv16_1));
    indvar_flatten_next1_1_fu_1498_p2 <= std_logic_vector(unsigned(ap_phi_mux_indvar_flatten9_phi_fu_1016_p4) + unsigned(ap_const_lv17_1));
    indvar_flatten_next1_2_fu_2253_p3 <= 
        ap_const_lv8_1 when (exitcond_flatten12_reg_3000(0) = '1') else 
        indvar_flatten131_op_reg_3038;
    indvar_flatten_next1_3_fu_1961_p2 <= std_logic_vector(unsigned(ap_phi_mux_indvar_flatten3_phi_fu_1119_p4) + unsigned(ap_const_lv13_1));
    indvar_flatten_next1_4_fu_2491_p3 <= 
        ap_const_lv7_1 when (exitcond_flatten14_reg_3127(0) = '1') else 
        indvar_flatten182_op_reg_3156;
    indvar_flatten_next1_5_fu_2281_p2 <= std_logic_vector(unsigned(ap_phi_mux_indvar_flatten5_phi_fu_1174_p4) + unsigned(ap_const_lv11_1));
    indvar_flatten_next1_fu_1949_p3 <= 
        ap_const_lv16_1 when (exitcond_flatten8_reg_2770(0) = '1') else 
        indvar_flatten68_op_reg_2926;
    indvar_flatten_next9_fu_1926_p3 <= 
        ap_const_lv13_1 when (tmp_92_reg_2801(0) = '1') else 
        indvar_flatten30_op_reg_2843;
    indvar_flatten_next_fu_1843_p3 <= 
        ap_const_lv8_1 when (tmp_86_reg_2827(0) = '1') else 
        indvar_flatten_op_fu_1837_p2;
    indvar_flatten_op_fu_1837_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_1080) + unsigned(ap_const_lv8_1));
    indvar_next4_fu_1388_p2 <= std_logic_vector(unsigned(ap_phi_mux_indvar8_phi_fu_971_p4) + unsigned(ap_const_lv11_1));
    indvar_next5_fu_1405_p2 <= std_logic_vector(unsigned(indvar2_reg_979) + unsigned(ap_const_lv8_1));
    indvar_next6_fu_2614_p2 <= std_logic_vector(unsigned(indvar4_reg_1226) + unsigned(ap_const_lv11_1));
    indvar_next_fu_1340_p2 <= std_logic_vector(unsigned(ap_phi_mux_indvar_phi_fu_959_p4) + unsigned(ap_const_lv3_1));
    kc_2_fu_1554_p2 <= std_logic_vector(unsigned(kc_mid_fu_1516_p3) + unsigned(ap_const_lv3_1));
    kc_cast_fu_1482_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_kc_phi_fu_1051_p4),5));
    kc_cast_mid2_cast_fu_1684_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(kc_cast_mid2_fu_1679_p3),5));
    kc_cast_mid2_fu_1679_p3 <= 
        kc_2_reg_2795 when (exitcond_flatten32_m_reg_2788(0) = '1') else 
        kc_mid_reg_2778;
    kc_mid_fu_1516_p3 <= 
        ap_const_lv3_0 when (exitcond_flatten8_fu_1510_p2(0) = '1') else 
        ap_phi_mux_kc_phi_fu_1051_p4;
    kr_2_fu_1504_p2 <= std_logic_vector(unsigned(ap_phi_mux_kr_phi_fu_1027_p4) + unsigned(ap_const_lv3_1));
    kr_cast_fu_1478_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_kr_phi_fu_1027_p4),5));
    kr_cast_mid2_cast_fu_1630_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(kr_cast_mid2_fu_1624_p3),5));
    kr_cast_mid2_fu_1624_p3 <= 
        kr_2_reg_2764 when (exitcond_flatten8_reg_2770(0) = '1') else 
        kr_reg_1023;
    m_axi_BIAS_ARADDR <= ap_const_lv32_0;
    m_axi_BIAS_ARBURST <= ap_const_lv2_0;
    m_axi_BIAS_ARCACHE <= ap_const_lv4_0;
    m_axi_BIAS_ARID <= ap_const_lv1_0;
    m_axi_BIAS_ARLEN <= ap_const_lv32_6;
    m_axi_BIAS_ARLOCK <= ap_const_lv2_0;
    m_axi_BIAS_ARPROT <= ap_const_lv3_0;
    m_axi_BIAS_ARQOS <= ap_const_lv4_0;
    m_axi_BIAS_ARREGION <= ap_const_lv4_0;
    m_axi_BIAS_ARSIZE <= ap_const_lv3_0;
    m_axi_BIAS_ARUSER <= ap_const_lv1_0;

    m_axi_BIAS_ARVALID_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_reg_ioackin_m_axi_BIAS_ARREADY)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_reg_ioackin_m_axi_BIAS_ARREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            m_axi_BIAS_ARVALID <= ap_const_logic_1;
        else 
            m_axi_BIAS_ARVALID <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_BIAS_AWADDR <= ap_const_lv32_0;
    m_axi_BIAS_AWBURST <= ap_const_lv2_0;
    m_axi_BIAS_AWCACHE <= ap_const_lv4_0;
    m_axi_BIAS_AWID <= ap_const_lv1_0;
    m_axi_BIAS_AWLEN <= ap_const_lv32_0;
    m_axi_BIAS_AWLOCK <= ap_const_lv2_0;
    m_axi_BIAS_AWPROT <= ap_const_lv3_0;
    m_axi_BIAS_AWQOS <= ap_const_lv4_0;
    m_axi_BIAS_AWREGION <= ap_const_lv4_0;
    m_axi_BIAS_AWSIZE <= ap_const_lv3_0;
    m_axi_BIAS_AWUSER <= ap_const_lv1_0;
    m_axi_BIAS_AWVALID <= ap_const_logic_0;
    m_axi_BIAS_BREADY <= ap_const_logic_0;

    m_axi_BIAS_RREADY_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            m_axi_BIAS_RREADY <= ap_const_logic_1;
        else 
            m_axi_BIAS_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_BIAS_WDATA <= ap_const_lv32_0;
    m_axi_BIAS_WID <= ap_const_lv1_0;
    m_axi_BIAS_WLAST <= ap_const_logic_0;
    m_axi_BIAS_WSTRB <= ap_const_lv4_0;
    m_axi_BIAS_WUSER <= ap_const_lv1_0;
    m_axi_BIAS_WVALID <= ap_const_logic_0;
    m_axi_FM_DDR_BUFF1_ARADDR <= ap_const_lv32_0;
    m_axi_FM_DDR_BUFF1_ARBURST <= ap_const_lv2_0;
    m_axi_FM_DDR_BUFF1_ARCACHE <= ap_const_lv4_0;
    m_axi_FM_DDR_BUFF1_ARID <= ap_const_lv1_0;
    m_axi_FM_DDR_BUFF1_ARLEN <= ap_const_lv32_400;
    m_axi_FM_DDR_BUFF1_ARLOCK <= ap_const_lv2_0;
    m_axi_FM_DDR_BUFF1_ARPROT <= ap_const_lv3_0;
    m_axi_FM_DDR_BUFF1_ARQOS <= ap_const_lv4_0;
    m_axi_FM_DDR_BUFF1_ARREGION <= ap_const_lv4_0;
    m_axi_FM_DDR_BUFF1_ARSIZE <= ap_const_lv3_0;
    m_axi_FM_DDR_BUFF1_ARUSER <= ap_const_lv1_0;

    m_axi_FM_DDR_BUFF1_ARVALID_assign_proc : process(ap_CS_fsm_state10, ap_reg_ioackin_m_axi_FM_DDR_BUFF1_ARREADY)
    begin
        if (((ap_reg_ioackin_m_axi_FM_DDR_BUFF1_ARREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            m_axi_FM_DDR_BUFF1_ARVALID <= ap_const_logic_1;
        else 
            m_axi_FM_DDR_BUFF1_ARVALID <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_FM_DDR_BUFF1_AWADDR <= ap_const_lv32_0;
    m_axi_FM_DDR_BUFF1_AWBURST <= ap_const_lv2_0;
    m_axi_FM_DDR_BUFF1_AWCACHE <= ap_const_lv4_0;
    m_axi_FM_DDR_BUFF1_AWID <= ap_const_lv1_0;
    m_axi_FM_DDR_BUFF1_AWLEN <= ap_const_lv32_0;
    m_axi_FM_DDR_BUFF1_AWLOCK <= ap_const_lv2_0;
    m_axi_FM_DDR_BUFF1_AWPROT <= ap_const_lv3_0;
    m_axi_FM_DDR_BUFF1_AWQOS <= ap_const_lv4_0;
    m_axi_FM_DDR_BUFF1_AWREGION <= ap_const_lv4_0;
    m_axi_FM_DDR_BUFF1_AWSIZE <= ap_const_lv3_0;
    m_axi_FM_DDR_BUFF1_AWUSER <= ap_const_lv1_0;
    m_axi_FM_DDR_BUFF1_AWVALID <= ap_const_logic_0;
    m_axi_FM_DDR_BUFF1_BREADY <= ap_const_logic_0;

    m_axi_FM_DDR_BUFF1_RREADY_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond7_reg_2696, ap_block_pp1_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (exitcond7_reg_2696 = ap_const_lv1_0))) then 
            m_axi_FM_DDR_BUFF1_RREADY <= ap_const_logic_1;
        else 
            m_axi_FM_DDR_BUFF1_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_FM_DDR_BUFF1_WDATA <= ap_const_lv32_0;
    m_axi_FM_DDR_BUFF1_WID <= ap_const_lv1_0;
    m_axi_FM_DDR_BUFF1_WLAST <= ap_const_logic_0;
    m_axi_FM_DDR_BUFF1_WSTRB <= ap_const_lv4_0;
    m_axi_FM_DDR_BUFF1_WUSER <= ap_const_lv1_0;
    m_axi_FM_DDR_BUFF1_WVALID <= ap_const_logic_0;
    m_axi_FM_DDR_BUFF2_ARADDR <= ap_const_lv32_0;
    m_axi_FM_DDR_BUFF2_ARBURST <= ap_const_lv2_0;
    m_axi_FM_DDR_BUFF2_ARCACHE <= ap_const_lv4_0;
    m_axi_FM_DDR_BUFF2_ARID <= ap_const_lv1_0;
    m_axi_FM_DDR_BUFF2_ARLEN <= ap_const_lv32_0;
    m_axi_FM_DDR_BUFF2_ARLOCK <= ap_const_lv2_0;
    m_axi_FM_DDR_BUFF2_ARPROT <= ap_const_lv3_0;
    m_axi_FM_DDR_BUFF2_ARQOS <= ap_const_lv4_0;
    m_axi_FM_DDR_BUFF2_ARREGION <= ap_const_lv4_0;
    m_axi_FM_DDR_BUFF2_ARSIZE <= ap_const_lv3_0;
    m_axi_FM_DDR_BUFF2_ARUSER <= ap_const_lv1_0;
    m_axi_FM_DDR_BUFF2_ARVALID <= ap_const_logic_0;
    m_axi_FM_DDR_BUFF2_AWADDR <= ap_const_lv32_0;
    m_axi_FM_DDR_BUFF2_AWBURST <= ap_const_lv2_0;
    m_axi_FM_DDR_BUFF2_AWCACHE <= ap_const_lv4_0;
    m_axi_FM_DDR_BUFF2_AWID <= ap_const_lv1_0;
    m_axi_FM_DDR_BUFF2_AWLEN <= ap_const_lv32_498;
    m_axi_FM_DDR_BUFF2_AWLOCK <= ap_const_lv2_0;
    m_axi_FM_DDR_BUFF2_AWPROT <= ap_const_lv3_0;
    m_axi_FM_DDR_BUFF2_AWQOS <= ap_const_lv4_0;
    m_axi_FM_DDR_BUFF2_AWREGION <= ap_const_lv4_0;
    m_axi_FM_DDR_BUFF2_AWSIZE <= ap_const_lv3_0;
    m_axi_FM_DDR_BUFF2_AWUSER <= ap_const_lv1_0;

    m_axi_FM_DDR_BUFF2_AWVALID_assign_proc : process(ap_CS_fsm_state79, ap_reg_ioackin_m_axi_FM_DDR_BUFF2_AWREADY)
    begin
        if (((ap_reg_ioackin_m_axi_FM_DDR_BUFF2_AWREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state79))) then 
            m_axi_FM_DDR_BUFF2_AWVALID <= ap_const_logic_1;
        else 
            m_axi_FM_DDR_BUFF2_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    m_axi_FM_DDR_BUFF2_BREADY_assign_proc : process(m_axi_FM_DDR_BUFF2_BVALID, ap_CS_fsm_state87)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state87) and (m_axi_FM_DDR_BUFF2_BVALID = ap_const_logic_1))) then 
            m_axi_FM_DDR_BUFF2_BREADY <= ap_const_logic_1;
        else 
            m_axi_FM_DDR_BUFF2_BREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_FM_DDR_BUFF2_RREADY <= ap_const_logic_0;
    m_axi_FM_DDR_BUFF2_WDATA <= tmp_78_reg_3406;
    m_axi_FM_DDR_BUFF2_WID <= ap_const_lv1_0;
    m_axi_FM_DDR_BUFF2_WLAST <= ap_const_logic_0;
    m_axi_FM_DDR_BUFF2_WSTRB <= ap_const_lv4_F;
    m_axi_FM_DDR_BUFF2_WUSER <= ap_const_lv1_0;

    m_axi_FM_DDR_BUFF2_WVALID_assign_proc : process(ap_enable_reg_pp6_iter2, exitcond10_reg_3352_pp6_iter1_reg, ap_reg_ioackin_m_axi_FM_DDR_BUFF2_WREADY, ap_block_pp6_stage0_01001)
    begin
        if (((ap_reg_ioackin_m_axi_FM_DDR_BUFF2_WREADY = ap_const_logic_0) and (ap_enable_reg_pp6_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp6_stage0_01001) and (exitcond10_reg_3352_pp6_iter1_reg = ap_const_lv1_0))) then 
            m_axi_FM_DDR_BUFF2_WVALID <= ap_const_logic_1;
        else 
            m_axi_FM_DDR_BUFF2_WVALID <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_WEIGHT_ARADDR <= ap_const_lv32_0;
    m_axi_WEIGHT_ARBURST <= ap_const_lv2_0;
    m_axi_WEIGHT_ARCACHE <= ap_const_lv4_0;
    m_axi_WEIGHT_ARID <= ap_const_lv1_0;
    m_axi_WEIGHT_ARLEN <= ap_const_lv32_96;
    m_axi_WEIGHT_ARLOCK <= ap_const_lv2_0;
    m_axi_WEIGHT_ARPROT <= ap_const_lv3_0;
    m_axi_WEIGHT_ARQOS <= ap_const_lv4_0;
    m_axi_WEIGHT_ARREGION <= ap_const_lv4_0;
    m_axi_WEIGHT_ARSIZE <= ap_const_lv3_0;
    m_axi_WEIGHT_ARUSER <= ap_const_lv1_0;

    m_axi_WEIGHT_ARVALID_assign_proc : process(ap_CS_fsm_state20, ap_reg_ioackin_m_axi_WEIGHT_ARREADY)
    begin
        if (((ap_reg_ioackin_m_axi_WEIGHT_ARREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
            m_axi_WEIGHT_ARVALID <= ap_const_logic_1;
        else 
            m_axi_WEIGHT_ARVALID <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_WEIGHT_AWADDR <= ap_const_lv32_0;
    m_axi_WEIGHT_AWBURST <= ap_const_lv2_0;
    m_axi_WEIGHT_AWCACHE <= ap_const_lv4_0;
    m_axi_WEIGHT_AWID <= ap_const_lv1_0;
    m_axi_WEIGHT_AWLEN <= ap_const_lv32_0;
    m_axi_WEIGHT_AWLOCK <= ap_const_lv2_0;
    m_axi_WEIGHT_AWPROT <= ap_const_lv3_0;
    m_axi_WEIGHT_AWQOS <= ap_const_lv4_0;
    m_axi_WEIGHT_AWREGION <= ap_const_lv4_0;
    m_axi_WEIGHT_AWSIZE <= ap_const_lv3_0;
    m_axi_WEIGHT_AWUSER <= ap_const_lv1_0;
    m_axi_WEIGHT_AWVALID <= ap_const_logic_0;
    m_axi_WEIGHT_BREADY <= ap_const_logic_0;

    m_axi_WEIGHT_RREADY_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, exitcond8_reg_2710, ap_block_pp2_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (exitcond8_reg_2710 = ap_const_lv1_0))) then 
            m_axi_WEIGHT_RREADY <= ap_const_logic_1;
        else 
            m_axi_WEIGHT_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_WEIGHT_WDATA <= ap_const_lv32_0;
    m_axi_WEIGHT_WID <= ap_const_lv1_0;
    m_axi_WEIGHT_WLAST <= ap_const_logic_0;
    m_axi_WEIGHT_WSTRB <= ap_const_lv4_0;
    m_axi_WEIGHT_WUSER <= ap_const_lv1_0;
    m_axi_WEIGHT_WVALID <= ap_const_logic_0;
    next_mul3_fu_2640_p2 <= std_logic_vector(unsigned(ap_const_lv22_A73) + unsigned(phi_mul3_reg_1237));
    next_mul_fu_1411_p2 <= std_logic_vector(unsigned(ap_const_lv16_148) + unsigned(phi_mul_reg_990));
    next_urem3_fu_2620_p2 <= std_logic_vector(unsigned(ap_const_lv11_1) + unsigned(phi_urem3_reg_1248));
    next_urem_fu_1431_p2 <= std_logic_vector(unsigned(phi_urem_reg_1001) + unsigned(ap_const_lv8_1));
    not_exitcond_flatten_1_fu_1770_p2 <= (exitcond_flatten_mid_7_reg_2818 xor ap_const_lv1_1);
    not_exitcond_flatten_2_fu_1995_p2 <= (exitcond_flatten12_fu_1973_p2 xor ap_const_lv1_1);
    not_exitcond_flatten_3_fu_2371_p2 <= (exitcond_flatten14_reg_3127 xor ap_const_lv1_1);
    not_exitcond_flatten_4_fu_1580_p2 <= (exitcond_flatten8_fu_1510_p2 or exitcond_flatten32_n_fu_1574_p2);
    not_exitcond_flatten_fu_1524_p2 <= (exitcond_flatten8_fu_1510_p2 xor ap_const_lv1_1);
    notlhs_fu_2221_p2 <= "0" when (tmp_72_fu_2207_p4 = ap_const_lv8_FF) else "1";
    notrhs_fu_2227_p2 <= "1" when (tmp_112_fu_2217_p1 = ap_const_lv23_0) else "0";
    p_shl14_cast_fu_1646_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_89_fu_1638_p3),6));
    p_shl15_cast_fu_1891_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_100_fu_1884_p3),11));
    p_shl16_cast_fu_2046_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_107_fu_2039_p3),11));
    p_shl17_cast_fu_2057_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_108_fu_2050_p3),11));
    p_shl18_cast_fu_2338_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_113_fu_2331_p3),11));
    p_shl19_cast_fu_2349_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_114_fu_2342_p3),11));
    p_shl20_cast_fu_2510_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_116_fu_2502_p3),11));
    p_shl21_cast_fu_2522_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_117_fu_2514_p3),11));
    p_shl22_cast_fu_2568_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_119_fu_2561_p3),9));
    p_shl23_cast_fu_2579_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_120_fu_2572_p3),9));
    p_shl_cast_fu_1880_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_99_fu_1873_p3),11));

    pic_in_address0_assign_proc : process(ap_block_pp1_stage0, ap_enable_reg_pp3_iter0, ap_CS_fsm_pp3_stage1, ap_enable_reg_pp1_iter2, ap_block_pp3_stage1, indvar1_fu_1394_p1, tmp_121_cast_fu_1826_p1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp3_stage1) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage1))) then 
            pic_in_address0 <= tmp_121_cast_fu_1826_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            pic_in_address0 <= indvar1_fu_1394_p1(10 - 1 downto 0);
        else 
            pic_in_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    pic_in_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp3_iter0, ap_CS_fsm_pp3_stage1, ap_block_pp3_stage1_11001, ap_enable_reg_pp1_iter2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp3_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage1) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1)))) then 
            pic_in_ce0 <= ap_const_logic_1;
        else 
            pic_in_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    pic_in_we0_assign_proc : process(ap_block_pp1_stage0_11001, exitcond7_reg_2696_pp1_iter1_reg, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (exitcond7_reg_2696_pp1_iter1_reg = ap_const_lv1_0))) then 
            pic_in_we0 <= ap_const_logic_1;
        else 
            pic_in_we0 <= ap_const_logic_0;
        end if; 
    end process;

    r_4_fu_1967_p2 <= std_logic_vector(unsigned(ap_const_lv5_1) + unsigned(ap_phi_mux_r1_phi_fu_1130_p4));
    r_5_fu_2287_p2 <= std_logic_vector(unsigned(ap_phi_mux_r4_phi_fu_1185_p4) + unsigned(ap_const_lv5_2));
    r_6_fu_1723_p2 <= std_logic_vector(unsigned(r_mid_reg_2807) + unsigned(ap_const_lv5_1));
    r_mid_fu_1566_p3 <= 
        ap_const_lv5_0 when (tmp_92_fu_1560_p2(0) = '1') else 
        ap_phi_mux_r_phi_fu_1073_p4;
    sel_tmp1_i_fu_2138_p3 <= 
        B_CONV1_0 when (sel_tmp_i_fu_2133_p2(0) = '1') else 
        B_CONV1_5;
    sel_tmp2_i_fu_2146_p2 <= "1" when (chl_out3_mid2_reg_3027 = ap_const_lv3_1) else "0";
    sel_tmp3_i_fu_2151_p3 <= 
        B_CONV1_1 when (sel_tmp2_i_fu_2146_p2(0) = '1') else 
        sel_tmp1_i_fu_2138_p3;
    sel_tmp4_i_fu_2159_p2 <= "1" when (chl_out3_mid2_reg_3027 = ap_const_lv3_2) else "0";
    sel_tmp5_i_fu_2164_p3 <= 
        B_CONV1_2 when (sel_tmp4_i_fu_2159_p2(0) = '1') else 
        sel_tmp3_i_fu_2151_p3;
    sel_tmp6_i_fu_2172_p2 <= "1" when (chl_out3_mid2_reg_3027 = ap_const_lv3_3) else "0";
    sel_tmp7_i_fu_2177_p3 <= 
        B_CONV1_3 when (sel_tmp6_i_fu_2172_p2(0) = '1') else 
        sel_tmp5_i_fu_2164_p3;
    sel_tmp8_i_fu_2185_p2 <= "1" when (chl_out3_mid2_reg_3027 = ap_const_lv3_4) else "0";
    sel_tmp_i_fu_2133_p2 <= "1" when (chl_out3_mid2_reg_3027 = ap_const_lv3_0) else "0";
    tmp_100_fu_1884_p3 <= (tmp_52_mid2_reg_2888 & ap_const_lv2_0);
    tmp_101_fu_1895_p2 <= std_logic_vector(unsigned(p_shl_cast_fu_1880_p1) - unsigned(p_shl15_cast_fu_1891_p1));
    tmp_102_fu_1786_p2 <= (exitcond_flatten_mid_7_reg_2818 or exitcond4_mid5_fu_1775_p2);
    tmp_103_fu_1791_p2 <= (tmp_92_reg_2801 or tmp_102_fu_1786_p2);
    tmp_104_fu_1818_p3 <= (tmp_98_fu_1750_p3 & tmp_62_mid2_fu_1810_p3);
        tmp_105_cast_fu_1701_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_93_fu_1695_p2),64));

    tmp_105_fu_1910_p2 <= std_logic_vector(unsigned(tmp_101_fu_1895_p2) + unsigned(tmp_63_mid2_cast_fu_1906_p1));
    tmp_106_fu_1437_p2 <= "1" when (unsigned(next_urem_fu_1431_p2) < unsigned(ap_const_lv8_19)) else "0";
    tmp_107_fu_2039_p3 <= (tmp_39_mid2_v_reg_3010 & ap_const_lv5_0);
    tmp_108_fu_2050_p3 <= (tmp_39_mid2_v_reg_3010 & ap_const_lv2_0);
    tmp_109_fu_2061_p2 <= std_logic_vector(unsigned(p_shl16_cast_fu_2046_p1) - unsigned(p_shl17_cast_fu_2057_p1));
    tmp_110_cast_fu_1734_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(kr_2_reg_2764),5));
    tmp_110_fu_2019_p2 <= (exitcond_flatten12_fu_1973_p2 or exitcond1_mid_fu_2007_p2);
    tmp_111_fu_2076_p2 <= std_logic_vector(unsigned(tmp_46_mid2_cast_fu_2072_p1) + unsigned(tmp_109_fu_2061_p2));
    tmp_112_fu_2217_p1 <= tmp_54_to_int_fu_2203_p1(23 - 1 downto 0);
    tmp_113_fu_2331_p3 <= (tmp_40_mid2_v_reg_3142 & ap_const_lv5_0);
    tmp_114_fu_2342_p3 <= (tmp_40_mid2_v_reg_3142 & ap_const_lv2_0);
    tmp_115_fu_2353_p2 <= std_logic_vector(unsigned(p_shl18_cast_fu_2338_p1) - unsigned(p_shl19_cast_fu_2349_p1));
    tmp_116_fu_2502_p3 <= (tmp_43_mid2_v_fu_2497_p2 & ap_const_lv5_0);
    tmp_117_fu_2514_p3 <= (tmp_43_mid2_v_fu_2497_p2 & ap_const_lv2_0);
    tmp_118_fu_2526_p2 <= std_logic_vector(unsigned(p_shl20_cast_fu_2510_p1) - unsigned(p_shl21_cast_fu_2522_p1));
    tmp_119_fu_2561_p3 <= (tmp_44_mid2_v_reg_3150_pp5_iter10_reg & ap_const_lv4_0);
    tmp_120_fu_2572_p3 <= (tmp_44_mid2_v_reg_3150_pp5_iter10_reg & ap_const_lv1_0);
    tmp_121_cast_fu_1826_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_104_fu_1818_p3),64));
    tmp_121_fu_2583_p2 <= std_logic_vector(unsigned(p_shl22_cast_fu_2568_p1) - unsigned(p_shl23_cast_fu_2579_p1));
    tmp_122_cast_fu_1916_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_105_fu_1910_p2),64));
    tmp_122_fu_2393_p2 <= (exitcond_mid_fu_2382_p2 or exitcond_flatten14_reg_3127);
    tmp_123_fu_2417_p2 <= std_logic_vector(unsigned(tmp_115_fu_2353_p2) + unsigned(tmp_47_mid2_cast_fu_2413_p1));
    tmp_124_fu_2532_p2 <= std_logic_vector(unsigned(tmp_118_fu_2526_p2) + unsigned(tmp_47_mid2_cast_reg_3172_pp5_iter2_reg));
    tmp_125_fu_2451_p2 <= std_logic_vector(unsigned(tmp_115_fu_2353_p2) + unsigned(tmp_49_mid2_cast_fu_2447_p1));
    tmp_126_fu_2547_p2 <= std_logic_vector(unsigned(tmp_118_fu_2526_p2) + unsigned(tmp_49_mid2_cast_reg_3207_pp5_iter2_reg));
        tmp_127_cast_fu_2082_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_111_fu_2076_p2),64));

    tmp_127_fu_2592_p2 <= std_logic_vector(unsigned(tmp_121_fu_2583_p2) + unsigned(tmp_53_mid2_cast_fu_2589_p1));
    tmp_128_fu_2626_p2 <= "1" when (unsigned(next_urem3_fu_2620_p2) < unsigned(ap_const_lv11_C4)) else "0";
    tmp_129_fu_2646_p1 <= phi_urem3_reg_1248(8 - 1 downto 0);
    tmp_130_fu_2650_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_129_fu_2646_p1),64));
        tmp_140_cast_fu_2423_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_123_fu_2417_p2),64));

        tmp_141_cast_fu_2537_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_124_fu_2532_p2),64));

        tmp_142_cast_fu_2457_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_125_fu_2451_p2),64));

        tmp_143_cast_fu_2552_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_126_reg_3297_pp5_iter4_reg),64));

        tmp_144_cast_fu_2598_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_127_fu_2592_p2),64));

    tmp_39_mid2_v_fu_1987_p3 <= 
        r_4_fu_1967_p2 when (exitcond_flatten12_fu_1973_p2(0) = '1') else 
        ap_phi_mux_r1_phi_fu_1130_p4;
    tmp_40_mid2_v_fu_2307_p3 <= 
        r_5_fu_2287_p2 when (exitcond_flatten14_fu_2293_p2(0) = '1') else 
        ap_phi_mux_r4_phi_fu_1185_p4;
    tmp_41_mid1_cast_fu_1688_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(kc_2_reg_2795),5));
    tmp_41_mid2_cast_fu_1691_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(kc_cast_mid2_fu_1679_p3),6));
    tmp_43_mid2_v_fu_2497_p2 <= (tmp_40_mid2_v_reg_3142_pp5_iter2_reg or ap_const_lv5_1);
    tmp_46_mid2_cast_fu_2072_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_46_mid2_fu_2067_p3),11));
    tmp_46_mid2_fu_2067_p3 <= 
        c_4_reg_3022 when (exitcond1_mid_reg_3017(0) = '1') else 
        c2_mid_reg_3005;
    tmp_47_mid2_cast_fu_2413_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_47_mid2_fu_2406_p3),11));
    tmp_47_mid2_fu_2406_p3 <= 
        c_5_fu_2388_p2 when (exitcond_mid_fu_2382_p2(0) = '1') else 
        c5_mid_reg_3136;
    tmp_48_fu_2259_p2 <= (ap_phi_mux_c5_phi_fu_1207_p4 or ap_const_lv5_1);
    tmp_48_mid1_fu_2433_p2 <= (c_5_fu_2388_p2 or ap_const_lv5_1);
    tmp_49_mid2_cast_fu_2447_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_49_mid2_fu_2439_p3),11));
    tmp_49_mid2_fu_2439_p3 <= 
        tmp_48_mid1_fu_2433_p2 when (exitcond_mid_fu_2382_p2(0) = '1') else 
        tmp_49_mid_fu_2359_p3;
    tmp_49_mid_fu_2359_p3 <= 
        ap_const_lv5_1 when (exitcond_flatten14_reg_3127(0) = '1') else 
        tmp_48_reg_3108;
    tmp_50_mid1_fu_1728_p2 <= std_logic_vector(unsigned(r_6_fu_1723_p2) + unsigned(kr_cast_mid2_cast_fu_1630_p1));
    tmp_52_mid2_fu_1757_p3 <= 
        r_6_fu_1723_p2 when (exitcond_flatten_mid_7_reg_2818(0) = '1') else 
        r_mid_reg_2807;
    tmp_53_mid2_cast_fu_2589_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_53_mid2_reg_3242_pp5_iter10_reg),9));
    tmp_53_mid2_fu_2477_p3 <= 
        tmp_73_mid1_fu_2467_p4 when (exitcond_mid_fu_2382_p2(0) = '1') else 
        tmp_53_mid_fu_2365_p3;
    tmp_53_mid_fu_2365_p3 <= 
        ap_const_lv4_0 when (exitcond_flatten14_reg_3127(0) = '1') else 
        tmp_73_reg_3113;
    tmp_54_to_int_fu_2203_p1 <= reg_1322;
    tmp_56_fu_2245_p3 <= 
        reg_1322 when (tmp_79_fu_2239_p2(0) = '1') else 
        ap_const_lv32_0;
    tmp_61_fu_1486_p2 <= std_logic_vector(unsigned(ap_phi_mux_c_phi_fu_1096_p4) + unsigned(kc_cast_fu_1482_p1));
    tmp_61_mid1_fu_1804_p2 <= std_logic_vector(unsigned(c_6_fu_1781_p2) + unsigned(kc_cast_mid2_cast_fu_1684_p1));
    tmp_62_mid2_fu_1810_p3 <= 
        tmp_61_mid1_fu_1804_p2 when (exitcond4_mid5_fu_1775_p2(0) = '1') else 
        tmp_62_mid5_fu_1763_p3;
    tmp_62_mid3_fu_1711_p3 <= 
        tmp_41_mid1_cast_fu_1688_p1 when (exitcond_flatten32_m_reg_2788(0) = '1') else 
        tmp_62_mid_fu_1662_p3;
    tmp_62_mid5_fu_1763_p3 <= 
        kc_cast_mid2_cast_fu_1684_p1 when (exitcond_flatten_mid_7_reg_2818(0) = '1') else 
        tmp_62_mid3_fu_1711_p3;
    tmp_62_mid_fu_1662_p3 <= 
        ap_const_lv5_0 when (exitcond_flatten8_reg_2770(0) = '1') else 
        tmp_61_reg_2750;
    tmp_63_mid2_cast_fu_1906_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_63_mid2_fu_1901_p3),11));
    tmp_63_mid2_fu_1901_p3 <= 
        c_6_reg_2900 when (exitcond4_mid5_reg_2895(0) = '1') else 
        c_mid3_reg_2832;
    tmp_66_fu_1461_p3 <= 
        tmp_reg_2724_pp2_iter1_reg when (tmp_s_fu_1451_p2(0) = '1') else 
        tmp_87_fu_1456_p2;
    tmp_72_fu_2207_p4 <= tmp_54_to_int_fu_2203_p1(30 downto 23);
    tmp_73_mid1_fu_2467_p4 <= c_5_fu_2388_p2(4 downto 1);
    tmp_76_fu_2233_p2 <= (notrhs_fu_2227_p2 or notlhs_fu_2221_p2);
    tmp_79_fu_2239_p2 <= (tmp_77_fu_1272_p2 and tmp_76_fu_2233_p2);
    tmp_86_fu_1598_p2 <= (tmp_94_fu_1592_p2 or exitcond_flatten8_fu_1510_p2);
    tmp_87_fu_1456_p2 <= std_logic_vector(unsigned(ap_const_lv5_7) + unsigned(tmp_reg_2724_pp2_iter1_reg));
    tmp_88_fu_1468_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_66_fu_1461_p3),64));
    tmp_89_fu_1638_p3 <= (kr_cast_mid2_fu_1624_p3 & ap_const_lv2_0);
    tmp_90_fu_1650_p2 <= std_logic_vector(unsigned(tmp_mid2_cast_fu_1634_p1) + unsigned(p_shl14_cast_fu_1646_p1));
    tmp_91_fu_1656_p2 <= std_logic_vector(unsigned(tmp_90_fu_1650_p2) + unsigned(ap_const_lv6_19));
    tmp_92_fu_1560_p2 <= (exitcond_flatten8_fu_1510_p2 or exitcond_flatten32_m_fu_1548_p2);
    tmp_93_fu_1695_p2 <= std_logic_vector(unsigned(tmp_91_fu_1656_p2) + unsigned(tmp_41_mid2_cast_fu_1691_p1));
    tmp_94_fu_1592_p2 <= (exitcond_flatten_mid_7_fu_1586_p2 or exitcond_flatten32_m_fu_1548_p2);
    tmp_95_fu_1612_p2 <= std_logic_vector(unsigned(ap_phi_mux_r_phi_fu_1073_p4) + unsigned(kr_cast_fu_1478_p1));
    tmp_96_fu_1737_p3 <= 
        tmp_110_cast_fu_1734_p1 when (exitcond_flatten8_reg_2770(0) = '1') else 
        tmp_95_reg_2838;
    tmp_97_fu_1743_p3 <= 
        kr_cast_mid2_cast_fu_1630_p1 when (exitcond_flatten32_m_reg_2788(0) = '1') else 
        tmp_96_fu_1737_p3;
    tmp_98_fu_1750_p3 <= 
        tmp_50_mid1_fu_1728_p2 when (exitcond_flatten_mid_7_reg_2818(0) = '1') else 
        tmp_97_fu_1743_p3;
    tmp_99_fu_1873_p3 <= (tmp_52_mid2_reg_2888 & ap_const_lv5_0);
    tmp_fu_1417_p1 <= phi_urem_reg_1001(5 - 1 downto 0);
    tmp_mid2_cast_fu_1634_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(kr_cast_mid2_fu_1624_p3),6));
    tmp_s_fu_1451_p2 <= "1" when (unsigned(tmp_reg_2724_pp2_iter1_reg) < unsigned(ap_const_lv5_19)) else "0";
end behav;
